{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\lingua-kai-platform - restructured\\\\src\\\\hooks\\\\useUserProfile.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useCallback, useContext, createContext } from 'react';\nimport userService from '../services/userService';\n\n// Crea un context per il profilo utente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfileContext = /*#__PURE__*/createContext();\n\n/**\r\n * Provider per il contesto del profilo utente\r\n */\nexport const UserProfileProvider = ({\n  children\n}) => {\n  _s();\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Carica il profilo utente\n  const loadUserProfile = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const profile = await userService.getProfile();\n      setUserProfile(profile);\n    } catch (err) {\n      console.error('Errore nel caricamento del profilo:', err);\n      setError('Impossibile caricare il profilo utente');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Aggiorna il profilo utente\n  const updateProfile = useCallback(async profileData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const updatedProfile = await userService.updateProfile(profileData);\n      setUserProfile(updatedProfile);\n      return updatedProfile;\n    } catch (err) {\n      console.error('Errore nell\\'aggiornamento del profilo:', err);\n      setError('Impossibile aggiornare il profilo utente');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Carica il profilo al primo render\n  useEffect(() => {\n    loadUserProfile();\n  }, [loadUserProfile]);\n\n  // Fornisce il context\n  const value = {\n    userProfile,\n    setUserProfile,\n    loading,\n    error,\n    loadUserProfile,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(UserProfileContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Hook per accedere al profilo utente\r\n * @returns {Object} Profilo utente e funzioni di utilità\r\n */\n_s(UserProfileProvider, \"zKWbDOZSxrdWqenyQJQ0bLo0agY=\");\n_c = UserProfileProvider;\nconst useUserProfile = () => {\n  _s2();\n  const context = useContext(UserProfileContext);\n  if (!context) {\n    throw new Error('useUserProfile deve essere utilizzato all\\'interno di un UserProfileProvider');\n  }\n  return context;\n};\n_s2(useUserProfile, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default useUserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfileProvider\");","map":{"version":3,"names":["useState","useEffect","useCallback","useContext","createContext","userService","jsxDEV","_jsxDEV","UserProfileContext","UserProfileProvider","children","_s","userProfile","setUserProfile","loading","setLoading","error","setError","loadUserProfile","profile","getProfile","err","console","updateProfile","profileData","updatedProfile","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserProfile","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/hooks/useUserProfile.js"],"sourcesContent":["import { useState, useEffect, useCallback, useContext, createContext } from 'react';\r\nimport userService from '../services/userService';\r\n\r\n// Crea un context per il profilo utente\r\nconst UserProfileContext = createContext();\r\n\r\n/**\r\n * Provider per il contesto del profilo utente\r\n */\r\nexport const UserProfileProvider = ({ children }) => {\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Carica il profilo utente\r\n  const loadUserProfile = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const profile = await userService.getProfile();\r\n      setUserProfile(profile);\r\n    } catch (err) {\r\n      console.error('Errore nel caricamento del profilo:', err);\r\n      setError('Impossibile caricare il profilo utente');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Aggiorna il profilo utente\r\n  const updateProfile = useCallback(async (profileData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const updatedProfile = await userService.updateProfile(profileData);\r\n      setUserProfile(updatedProfile);\r\n      return updatedProfile;\r\n    } catch (err) {\r\n      console.error('Errore nell\\'aggiornamento del profilo:', err);\r\n      setError('Impossibile aggiornare il profilo utente');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Carica il profilo al primo render\r\n  useEffect(() => {\r\n    loadUserProfile();\r\n  }, [loadUserProfile]);\r\n\r\n  // Fornisce il context\r\n  const value = {\r\n    userProfile,\r\n    setUserProfile,\r\n    loading,\r\n    error,\r\n    loadUserProfile,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <UserProfileContext.Provider value={value}>\r\n      {children}\r\n    </UserProfileContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Hook per accedere al profilo utente\r\n * @returns {Object} Profilo utente e funzioni di utilità\r\n */\r\nconst useUserProfile = () => {\r\n  const context = useContext(UserProfileContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useUserProfile deve essere utilizzato all\\'interno di un UserProfileProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default useUserProfile;"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,aAAa,QAAQ,OAAO;AACnF,OAAOC,WAAW,MAAM,yBAAyB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,gBAAGJ,aAAa,CAAC,CAAC;;AAE1C;AACA;AACA;AACA,OAAO,MAAMK,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMkB,eAAe,GAAGhB,WAAW,CAAC,YAAY;IAC9Ca,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAME,OAAO,GAAG,MAAMd,WAAW,CAACe,UAAU,CAAC,CAAC;MAC9CP,cAAc,CAACM,OAAO,CAAC;IACzB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACN,KAAK,CAAC,qCAAqC,EAAEK,GAAG,CAAC;MACzDJ,QAAQ,CAAC,wCAAwC,CAAC;IACpD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,aAAa,GAAGrB,WAAW,CAAC,MAAOsB,WAAW,IAAK;IACvDT,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMQ,cAAc,GAAG,MAAMpB,WAAW,CAACkB,aAAa,CAACC,WAAW,CAAC;MACnEX,cAAc,CAACY,cAAc,CAAC;MAC9B,OAAOA,cAAc;IACvB,CAAC,CAAC,OAAOJ,GAAG,EAAE;MACZC,OAAO,CAACN,KAAK,CAAC,yCAAyC,EAAEK,GAAG,CAAC;MAC7DJ,QAAQ,CAAC,0CAA0C,CAAC;MACpD,MAAMI,GAAG;IACX,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAd,SAAS,CAAC,MAAM;IACdiB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMQ,KAAK,GAAG;IACZd,WAAW;IACXC,cAAc;IACdC,OAAO;IACPE,KAAK;IACLE,eAAe;IACfK;EACF,CAAC;EAED,oBACEhB,OAAA,CAACC,kBAAkB,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EACvCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;;AAED;AACA;AACA;AACA;AAHApB,EAAA,CA7DaF,mBAAmB;AAAAuB,EAAA,GAAnBvB,mBAAmB;AAiEhC,MAAMwB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGhC,UAAU,CAACK,kBAAkB,CAAC;EAE9C,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8EAA8E,CAAC;EACjG;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CARID,cAAc;AAUpB,eAAeA,cAAc;AAAC,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}