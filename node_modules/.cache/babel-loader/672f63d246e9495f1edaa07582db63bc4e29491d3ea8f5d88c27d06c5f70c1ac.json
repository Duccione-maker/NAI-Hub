{"ast":null,"code":"// Mock Question Service per Test QCER\n// Questo simula il database e l'AI Service\n\nconst mockQuestionBank = {\n  demographic: [{\n    id: 'years_italy',\n    type: 'multiple_choice',\n    question: 'Da quanti anni sei in Italia?',\n    options: [{\n      value: 'less1',\n      text: 'Meno di 1 anno'\n    }, {\n      value: '1to2',\n      text: '1-2 anni'\n    }, {\n      value: 'more2',\n      text: 'Più di 2 anni'\n    }, {\n      value: 'born',\n      text: 'Sono nato/a in Italia'\n    }]\n  }],\n  reading: [{\n    id: 'reading_1',\n    type: 'reading_comprehension',\n    level: 'A1',\n    text: `Maria è una studentessa italiana. Ha 20 anni e studia medicina all'università di Roma. \n             Ogni mattina si alza alle 7:00 e fa colazione con caffè e cornetti.`,\n    subQuestions: [{\n      id: 'reading_1_q1',\n      question: 'Che cosa studia Maria?',\n      options: [{\n        value: 'correct',\n        text: 'Medicina',\n        isCorrect: true\n      }, {\n        value: 'wrong1',\n        text: 'Letteratura',\n        isCorrect: false\n      }, {\n        value: 'wrong2',\n        text: 'Storia',\n        isCorrect: false\n      }, {\n        value: 'wrong3',\n        text: 'Matematica',\n        isCorrect: false\n      }]\n    }]\n  }],\n  grammar: [{\n    id: 'grammar_1',\n    type: 'grammar',\n    level: 'A1',\n    question: 'Completa la frase: \"Io _____ italiano.\"',\n    options: [{\n      value: 'correct',\n      text: 'sono',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'sei',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'è',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'siamo',\n      isCorrect: false\n    }]\n  }],\n  writing: [{\n    id: 'writing_1',\n    type: 'writing',\n    level: 'A1',\n    prompt: 'Presentati brevemente: scrivi il tuo nome, età, da dove vieni.',\n    placeholder: 'Ciao, io sono...',\n    minWords: 30,\n    minRows: 3\n  }],\n  speaking: [{\n    id: 'speaking_1',\n    type: 'speaking',\n    level: 'A1',\n    prompt: 'Presentati: di\\' il tuo nome, la tua età e di dove sei.',\n    maxDuration: 30\n  }]\n};\n\n// Simulazione AI Service\nexport const MockQuestionService = {\n  generateTestBank: async () => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return mockQuestionBank;\n  },\n  generateSectionQuestions: async (sectionId, userProfile) => {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    return mockQuestionBank[sectionId] || [];\n  }\n};\nexport const QCERScoring = {\n  calculateLevel: allAnswers => {\n    // Algoritmo semplificato\n    const totalAnswers = Object.keys(allAnswers).length;\n    const correctAnswers = Object.values(allAnswers).filter(answer => answer === 'correct' || typeof answer === 'object' && answer.isCorrect).length;\n    const score = correctAnswers / Math.max(totalAnswers, 1);\n    if (score >= 0.9) return 'C2';\n    if (score >= 0.8) return 'C1';\n    if (score >= 0.7) return 'B2';\n    if (score >= 0.6) return 'B1';\n    if (score >= 0.5) return 'A2';\n    return 'A1';\n  }\n};","map":{"version":3,"names":["mockQuestionBank","demographic","id","type","question","options","value","text","reading","level","subQuestions","isCorrect","grammar","writing","prompt","placeholder","minWords","minRows","speaking","maxDuration","MockQuestionService","generateTestBank","Promise","resolve","setTimeout","generateSectionQuestions","sectionId","userProfile","QCERScoring","calculateLevel","allAnswers","totalAnswers","Object","keys","length","correctAnswers","values","filter","answer","score","Math","max"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/components/components/TestIngresso/MockQuestionService.js"],"sourcesContent":["// Mock Question Service per Test QCER\r\n// Questo simula il database e l'AI Service\r\n\r\nconst mockQuestionBank = {\r\n  demographic: [\r\n    {\r\n      id: 'years_italy',\r\n      type: 'multiple_choice',\r\n      question: 'Da quanti anni sei in Italia?',\r\n      options: [\r\n        { value: 'less1', text: 'Meno di 1 anno' },\r\n        { value: '1to2', text: '1-2 anni' },\r\n        { value: 'more2', text: 'Più di 2 anni' },\r\n        { value: 'born', text: 'Sono nato/a in Italia' }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  reading: [\r\n    {\r\n      id: 'reading_1',\r\n      type: 'reading_comprehension',\r\n      level: 'A1',\r\n      text: `Maria è una studentessa italiana. Ha 20 anni e studia medicina all'università di Roma. \r\n             Ogni mattina si alza alle 7:00 e fa colazione con caffè e cornetti.`,\r\n      subQuestions: [\r\n        {\r\n          id: 'reading_1_q1',\r\n          question: 'Che cosa studia Maria?',\r\n          options: [\r\n            { value: 'correct', text: 'Medicina', isCorrect: true },\r\n            { value: 'wrong1', text: 'Letteratura', isCorrect: false },\r\n            { value: 'wrong2', text: 'Storia', isCorrect: false },\r\n            { value: 'wrong3', text: 'Matematica', isCorrect: false }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  grammar: [\r\n    {\r\n      id: 'grammar_1',\r\n      type: 'grammar',\r\n      level: 'A1',\r\n      question: 'Completa la frase: \"Io _____ italiano.\"',\r\n      options: [\r\n        { value: 'correct', text: 'sono', isCorrect: true },\r\n        { value: 'wrong1', text: 'sei', isCorrect: false },\r\n        { value: 'wrong2', text: 'è', isCorrect: false },\r\n        { value: 'wrong3', text: 'siamo', isCorrect: false }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  writing: [\r\n    {\r\n      id: 'writing_1',\r\n      type: 'writing',\r\n      level: 'A1',\r\n      prompt: 'Presentati brevemente: scrivi il tuo nome, età, da dove vieni.',\r\n      placeholder: 'Ciao, io sono...',\r\n      minWords: 30,\r\n      minRows: 3\r\n    }\r\n  ],\r\n\r\n  speaking: [\r\n    {\r\n      id: 'speaking_1',\r\n      type: 'speaking',\r\n      level: 'A1',\r\n      prompt: 'Presentati: di\\' il tuo nome, la tua età e di dove sei.',\r\n      maxDuration: 30\r\n    }\r\n  ]\r\n};\r\n\r\n// Simulazione AI Service\r\nexport const MockQuestionService = {\r\n  generateTestBank: async () => {\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    return mockQuestionBank;\r\n  },\r\n\r\n  generateSectionQuestions: async (sectionId, userProfile) => {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n    return mockQuestionBank[sectionId] || [];\r\n  }\r\n};\r\n\r\nexport const QCERScoring = {\r\n  calculateLevel: (allAnswers) => {\r\n    // Algoritmo semplificato\r\n    const totalAnswers = Object.keys(allAnswers).length;\r\n    const correctAnswers = Object.values(allAnswers).filter(answer => \r\n      answer === 'correct' || (typeof answer === 'object' && answer.isCorrect)\r\n    ).length;\r\n    \r\n    const score = correctAnswers / Math.max(totalAnswers, 1);\r\n    \r\n    if (score >= 0.9) return 'C2';\r\n    if (score >= 0.8) return 'C1';\r\n    if (score >= 0.7) return 'B2';\r\n    if (score >= 0.6) return 'B1';\r\n    if (score >= 0.5) return 'A2';\r\n    return 'A1';\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}