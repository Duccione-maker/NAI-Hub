{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\lingua-kai-platform - restructured\\\\src\\\\components\\\\components\\\\Letteratura\\\\TestoLetterario.jsx\",\n  _s = $RefreshSig$();\n// src/components/Letteratura/TestoLetterario.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getTestoById } from '../../data/letteraturaDatabase';\nimport './TestoLetterarioStyle.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestoLetterario = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [testo, setTesto] = useState(null);\n  const [tab, setTab] = useState('testo'); // testo, analisi, esercizi, figure, crea\n  const [selectedText, setSelectedText] = useState(null);\n  const [figureSelezionate, setFigureSelezionate] = useState([]);\n  const [feedback, setFeedback] = useState({\n    visible: false,\n    correct: false,\n    message: ''\n  });\n  const [evidenziaFigure, setEvidenziaFigure] = useState(false);\n  const [punteggio, setPunteggio] = useState(0);\n  const [livelloDifficolta, setLivelloDifficolta] = useState(1); // 1-3\n  const [mostraAiuto, setMostraAiuto] = useState(false);\n  const [figureRimaste, setFigureRimaste] = useState([]);\n  const [testCompletato, setTestCompletato] = useState(false);\n  const [figuraSelezionata, setFiguraSelezionata] = useState('');\n  const [nuovoEsempio, setNuovoEsempio] = useState('');\n  const [nuovaSpiegazione, setNuovaSpiegazione] = useState('');\n  const [sfidaTab, setSfidaTab] = useState('mie');\n  const [mieCreazioni, setMieCreazioni] = useState([]);\n  const [creazioniDaValutare, setCreazioniDaValutare] = useState([]);\n  const [indiceValutazione, setIndiceValutazione] = useState(0);\n  const [valutazioneAttuale, setValutazioneAttuale] = useState(0);\n  const [commentoValutazione, setCommentoValutazione] = useState('');\n  const [classificaCreazioni, setClassificaCreazioni] = useState([]);\n  const [filtroClassifica, setFiltroClassifica] = useState('all');\n\n  // Lista delle figure retoriche raggruppate per livello di difficoltà\n  const figurePossibili = {\n    1: ['similitudine', 'metafora', 'anafora', 'enjambement'],\n    2: ['ossimoro', 'iperbole', 'allitterazione', 'chiasmo'],\n    3: ['sinestesia', 'metonimia', 'sineddoche', 'paronomasia', 'anastrofe']\n  };\n  useEffect(() => {\n    const testoTrovato = getTestoById(id);\n    if (testoTrovato) {\n      setTesto(testoTrovato);\n\n      // Inizializza le figure rimaste da trovare\n      if (testoTrovato.figureRetoriche_posizioni) {\n        setFigureRimaste(testoTrovato.figureRetoriche_posizioni.map(f => ({\n          ...f,\n          trovata: false\n        })));\n      }\n    }\n  }, [id]);\n  if (!testo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Caricamento testo in corso...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n  const isPoesia = testo.figureRetoriche !== undefined;\n\n  // Funzione per filtrare le figure retoriche in base al livello di difficoltà\n  const getFigurePerLivello = () => {\n    let figure = [];\n    for (let i = 1; i <= livelloDifficolta; i++) {\n      figure = [...figure, ...figurePossibili[i]];\n    }\n    return figure;\n  };\n\n  // Funzione per ottenere la definizione di una figura retorica\n  const getDefinizioneFigura = tipo => {\n    const figura = testo.figureRetoriche.find(f => f.tipo === tipo);\n    return figura ? figura.spiegazione : \"Definizione non disponibile\";\n  };\n\n  // Funzione per ottenere un esempio di una figura retorica\n  const getEsempioFigura = tipo => {\n    const figura = testo.figureRetoriche.find(f => f.tipo === tipo);\n    return figura ? figura.esempio : \"Esempio non disponibile\";\n  };\n\n  // Gestisce la selezione del testo\n  const handleTextSelection = () => {\n    const selection = window.getSelection();\n    if (selection.toString().length > 0) {\n      const range = selection.getRangeAt(0);\n      const startOffset = range.startOffset;\n      const endOffset = range.endOffset;\n      setSelectedText({\n        text: selection.toString(),\n        start: startOffset,\n        end: endOffset\n      });\n    }\n  };\n\n  // Gestisce la scelta di una figura retorica\n  const handleFiguraSelection = figura => {\n    if (!selectedText) return;\n\n    // Verifica se la figura è corretta\n    const figuraCorretta = testo.figureRetoriche.some(f => f.tipo === figura && f.esempio.includes(selectedText.text));\n\n    // Trova l'informazione sulla figura per calcolare i punti\n    const figuraInfo = figuraCorretta ? testo.figureRetoriche.find(f => f.tipo === figura && f.esempio.includes(selectedText.text)) : null;\n\n    // Aggiungi alla lista delle figure selezionate\n    const nuovaFigura = {\n      tipo: figura,\n      testo: selectedText.text,\n      posizione: {\n        inizio: selectedText.start,\n        fine: selectedText.end\n      },\n      corretta: figuraCorretta\n    };\n    setFigureSelezionate([...figureSelezionate, nuovaFigura]);\n\n    // Aggiorna punteggio\n    if (figuraCorretta) {\n      const puntiGuadagnati = (figuraInfo === null || figuraInfo === void 0 ? void 0 : figuraInfo.punti) || 5;\n      setPunteggio(prev => prev + puntiGuadagnati);\n\n      // Aggiorna figure rimaste\n      const updatedFigureRimaste = figureRimaste.map(f => {\n        if (f.tipo === figura && selectedText.text.includes(testo.testoCompleto.substring(f.inizio, f.fine))) {\n          return {\n            ...f,\n            trovata: true\n          };\n        }\n        return f;\n      });\n      setFigureRimaste(updatedFigureRimaste);\n\n      // Verifica se tutte le figure sono state trovate\n      const tutteRimaste = updatedFigureRimaste.every(f => f.trovata);\n      if (tutteRimaste) {\n        setTestCompletato(true);\n      }\n    }\n    setSelectedText(null);\n\n    // Mostra feedback\n    setFeedback({\n      visible: true,\n      correct: figuraCorretta,\n      message: figuraCorretta ? `Corretto! Hai individuato una ${figura}. +${(figuraInfo === null || figuraInfo === void 0 ? void 0 : figuraInfo.punti) || 5} punti!` : `Hmm, questa non sembra essere una ${figura}. Riprova!`\n    });\n\n    // Nascondi il feedback dopo 3 secondi\n    setTimeout(() => {\n      setFeedback({\n        visible: false,\n        correct: false,\n        message: ''\n      });\n    }, 3000);\n  };\n\n  // Invia una nuova creazione\n  const submitCreazione = () => {\n    const nuovaCreazione = {\n      tipo: figuraSelezionata,\n      esempio: nuovoEsempio,\n      spiegazione: nuovaSpiegazione,\n      data: new Date().toLocaleDateString(),\n      rating: 0,\n      feedback: []\n    };\n    setMieCreazioni([...mieCreazioni, nuovaCreazione]);\n\n    // Reset del form\n    setFiguraSelezionata('');\n    setNuovoEsempio('');\n    setNuovaSpiegazione('');\n\n    // Feedback all'utente\n    setFeedback({\n      visible: true,\n      correct: true,\n      message: 'La tua creazione è stata inviata con successo e sarà valutata dagli altri studenti!'\n    });\n    setTimeout(() => {\n      setFeedback({\n        visible: false,\n        correct: false,\n        message: ''\n      });\n    }, 3000);\n  };\n\n  // Funzione per saltare una valutazione\n  const skipValutazione = () => {\n    if (creazioniDaValutare.length > 0) {\n      setIndiceValutazione((indiceValutazione + 1) % creazioniDaValutare.length);\n      setValutazioneAttuale(0);\n      setCommentoValutazione('');\n    }\n  };\n\n  // Funzione per inviare una valutazione\n  const submitValutazione = () => {\n    // Logica per inviare la valutazione\n    // In un'implementazione reale, questo aggiornerebbe un database\n\n    // Feedback all'utente\n    setFeedback({\n      visible: true,\n      correct: true,\n      message: 'Grazie per la tua valutazione!'\n    });\n    setTimeout(() => {\n      setFeedback({\n        visible: false,\n        correct: false,\n        message: ''\n      });\n      skipValutazione();\n    }, 1500);\n  };\n\n  // Renderizza il testo con le figure retoriche evidenziate\n  const renderTestoConFigure = () => {\n    if (!testo.figureRetoriche_posizioni || !evidenziaFigure && tab !== 'figure') {\n      return isPoesia ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"poesia-text\",\n        onMouseUp: tab === 'figure' ? handleTextSelection : undefined,\n        children: testo.testoCompleto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"prosa-text\",\n        onMouseUp: tab === 'figure' ? handleTextSelection : undefined,\n        children: testo.testoCompleto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this);\n    }\n    let currentPos = 0;\n    const parts = [];\n    const testoCompleto = testo.testoCompleto;\n\n    // Ordina le posizioni per inizio\n    const posizioni = [...testo.figureRetoriche_posizioni].sort((a, b) => a.inizio - b.inizio);\n    posizioni.forEach((pos, index) => {\n      var _testo$figureRetorich;\n      // Aggiungi il testo prima della figura\n      if (pos.inizio > currentPos) {\n        parts.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          children: testoCompleto.substring(currentPos, pos.inizio)\n        }, `text-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this));\n      }\n\n      // Verifica se la figura è stata trovata (quando siamo in modalità esercizio)\n      const figuraRimasta = tab === 'figure' ? figureRimaste.find(f => f.inizio === pos.inizio && f.fine === pos.fine) : null;\n      const evidenzia = tab === 'figure' ? figuraRimasta && figuraRimasta.trovata : true;\n\n      // Aggiungi la figura evidenziata\n      parts.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: evidenzia ? `highlight-${pos.tipo}` : '',\n        title: evidenzia ? `${pos.tipo}: ${(_testo$figureRetorich = testo.figureRetoriche.find(f => f.tipo === pos.tipo)) === null || _testo$figureRetorich === void 0 ? void 0 : _testo$figureRetorich.spiegazione}` : '',\n        children: testoCompleto.substring(pos.inizio, pos.fine)\n      }, `figure-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this));\n      currentPos = pos.fine;\n    });\n\n    // Aggiungi il resto del testo\n    if (currentPos < testoCompleto.length) {\n      parts.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        children: testoCompleto.substring(currentPos)\n      }, \"text-end\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this));\n    }\n    return isPoesia ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"poesia-text\",\n      onMouseUp: tab === 'figure' ? handleTextSelection : undefined,\n      children: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"prosa-text\",\n      onMouseUp: tab === 'figure' ? handleTextSelection : undefined,\n      children: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Verifica tutte le figure retoriche e termina l'esercizio\n  const handleVerificaCompletamento = () => {\n    // Mostra tutte le figure non trovate\n    setEvidenziaFigure(true);\n\n    // Calcola il punteggio finale\n    const figureTrovate = figureRimaste.filter(f => f.trovata).length;\n    const figureNonTrovate = figureRimaste.length - figureTrovate;\n\n    // Aggiungi bonus per completamento se tutte le figure sono state trovate\n    let punteggioFinale = punteggio;\n    if (figureTrovate === figureRimaste.length) {\n      punteggioFinale += 20; // Bonus completamento\n    }\n\n    // Visualizza risultato finale\n    setFeedback({\n      visible: true,\n      correct: figureTrovate > figureNonTrovate,\n      message: `Hai trovato ${figureTrovate} figure su ${figureRimaste.length}. Punteggio finale: ${punteggioFinale} punti.`\n    });\n\n    // Imposta il test come completato\n    setTestCompletato(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"testo-letterario-container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/letteratura\",\n      className: \"back-link\",\n      children: \"\\u2190 Torna alla biblioteca\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testo-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"testo-titolo\",\n        children: testo.titolo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"testo-autore\",\n        children: [testo.autore, \", \", testo.anno]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testo-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"testo-periodo\",\n          children: testo.periodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `testo-difficolta livello-${testo.livelloDifficolta}`,\n          children: testo.livelloDifficolta === 1 ? 'Base' : testo.livelloDifficolta === 2 ? 'Intermedio' : 'Avanzato'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testo-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${tab === 'testo' ? 'active' : ''}`,\n        onClick: () => setTab('testo'),\n        children: \"Testo completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${tab === 'analisi' ? 'active' : ''}`,\n        onClick: () => setTab('analisi'),\n        children: \"Analisi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), isPoesia && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${tab === 'figure' ? 'active' : ''}`,\n        onClick: () => {\n          setTab('figure');\n          setEvidenziaFigure(false);\n          // Reset dell'esercizio se non completato\n          if (!testCompletato) {\n            setFigureSelezionate([]);\n            setPunteggio(0);\n            if (testo.figureRetoriche_posizioni) {\n              setFigureRimaste(testo.figureRetoriche_posizioni.map(f => ({\n                ...f,\n                trovata: false\n              })));\n            }\n          }\n        },\n        children: \"Figure Retoriche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), isPoesia && punteggio >= 50 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${tab === 'crea' ? 'active' : ''}`,\n        onClick: () => setTab('crea'),\n        children: \"Crea Figure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-btn ${tab === 'esercizi' ? 'active' : ''}`,\n        onClick: () => setTab('esercizi'),\n        children: \"Esercizi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testo-content\",\n      children: [tab === 'testo' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testo-completo\",\n        children: [renderTestoConFigure(), isPoesia && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testo-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `highlight-toggle ${evidenziaFigure ? 'active' : ''}`,\n            onClick: () => setEvidenziaFigure(!evidenziaFigure),\n            children: evidenziaFigure ? 'Nascondi figure retoriche' : 'Evidenzia figure retoriche'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), tab === 'analisi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testo-analisi\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Analisi del testo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: testo.analisi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Temi principali\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"temi-list\",\n          children: testo.temiPrincipali.map((tema, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: tema\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), isPoesia && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Figure retoriche\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"figure-list\",\n            children: testo.figureRetoriche.map((figura, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: figura.tipo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 23\n              }, this), \": \\\"\", figura.esempio, \"\\\" - \", figura.spiegazione]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Parole chiave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parole-chiave\",\n          children: testo.paroleChiave.map((parola, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"parola-tag\",\n            children: parola\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), tab === 'figure' && isPoesia && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"figure-retoriche-interactive\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Identifica le Figure Retoriche\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"punteggio-display\",\n              children: [\"Punteggio: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"punteggio-value\",\n                children: punteggio\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"difficulty-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"difficulty\",\n                children: \"Difficolt\\xE0:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"difficulty\",\n                value: livelloDifficolta,\n                onChange: e => setLivelloDifficolta(parseInt(e.target.value)),\n                disabled: figureSelezionate.length > 0 || testCompletato,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"Base\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"Intermedia\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 3,\n                  children: \"Avanzata\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\",\n          children: [\"Seleziona una parte del testo e poi scegli la figura retorica corrispondente.\", !testCompletato && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this), \"Trova tutte le figure retoriche presenti nel testo per completare l'esercizio!\"]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"interactive-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-selection-area\",\n            children: renderTestoConFigure()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this), !testCompletato && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"figure-selection\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Scegli una figura retorica:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this), selectedText ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-text-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Testo selezionato: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"\\\"\", selectedText.text, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"figure-buttons\",\n                children: getFigurePerLivello().map(figura => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"figura-btn\",\n                  onClick: () => handleFiguraSelection(figura),\n                  children: figura\n                }, figura, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"selection-prompt\",\n              children: \"Seleziona prima una parte del testo.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this), feedback.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback-message ${feedback.correct ? 'correct' : 'incorrect'}`,\n            children: feedback.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"figure-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"results-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Figure identificate:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), !testCompletato && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `help-toggle ${mostraAiuto ? 'active' : ''}`,\n                onClick: () => setMostraAiuto(!mostraAiuto),\n                children: mostraAiuto ? 'Nascondi aiuti' : 'Mostra aiuti'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this), figureSelezionate.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"identified-figures\",\n              children: figureSelezionate.map((figura, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: figura.corretta ? 'correct-figure' : 'incorrect-figure',\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"figura-tipo\",\n                  children: figura.tipo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 25\n                }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"figura-testo\",\n                  children: [\"\\\"\", figura.testo, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 25\n                }, this), figura.corretta && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"check-icon\",\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 45\n                }, this), !figura.corretta && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"wrong-icon\",\n                  children: \"\\u2717\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 46\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Non hai ancora identificato nessuna figura retorica.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this), mostraAiuto && !testCompletato && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aiuti-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Suggerimenti:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"aiuti-list\",\n                children: getFigurePerLivello().map(figura => {\n                  const figuraInfo = testo.figureRetoriche.find(f => f.tipo === figura);\n                  return figuraInfo ? /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"aiuto-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"aiuto-figura\",\n                      children: figura\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 29\n                    }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"aiuto-definizione\",\n                      children: figuraInfo.spiegazione\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 29\n                    }, this)]\n                  }, figura, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 27\n                  }, this) : null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), testCompletato ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-completato\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Esercizio completato!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this), testo.figureRetoriche_confronto && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confronti-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Esempi di confronto da altri testi:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"confronti-list\",\n                children: testo.figureRetoriche_confronto.map((confronto, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"confronto-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: confronto.figura\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 29\n                  }, this), \" in \\\"\", confronto.opera, \"\\\" di \", confronto.autore, \":\", /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                    className: \"confronto-esempio\",\n                    children: [\"\\\"\", confronto.esempio, \"\\\"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"confronto-spiegazione\",\n                    children: confronto.spiegazione\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"kai-button restart-btn\",\n              onClick: () => {\n                setTestCompletato(false);\n                setFigureSelezionate([]);\n                setPunteggio(0);\n                if (testo.figureRetoriche_posizioni) {\n                  setFigureRimaste(testo.figureRetoriche_posizioni.map(f => ({\n                    ...f,\n                    trovata: false\n                  })));\n                }\n                setEvidenziaFigure(false);\n              },\n              children: \"Riprova l'esercizio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"kai-button check-all-btn\",\n            onClick: handleVerificaCompletamento,\n            children: \"Verifica tutte le figure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this), tab === 'crea' && isPoesia && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crea-figure-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Laboratorio di Creazione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lab-description\",\n          children: \"Ora che hai imparato a riconoscere le figure retoriche, prova a crearne di tue! Le tue creazioni saranno valutate dagli altri studenti e potrai guadagnare punti extra.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"creazione-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"figura-tipo\",\n              children: \"Tipo di figura retorica:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"figura-tipo\",\n              value: figuraSelezionata,\n              onChange: e => setFiguraSelezionata(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleziona una figura...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this), getFigurePerLivello().map(figura => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: figura,\n                children: figura\n              }, figura, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this), figuraSelezionata && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"figura-esempio\",\n              children: \"La tua creazione:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"figura-esempio\",\n              placeholder: `Scrivi qui il tuo esempio di ${figuraSelezionata}...`,\n              value: nuovoEsempio,\n              onChange: e => setNuovoEsempio(e.target.value),\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"figura-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Cos'\\xE8 una \", figuraSelezionata, \"?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: getDefinizioneFigura(figuraSelezionata)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"esempio-modello\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Esempio di riferimento:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"\\\"\", getEsempioFigura(figuraSelezionata), \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"figura-spiegazione\",\n              children: \"Spiega la tua creazione:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"figura-spiegazione\",\n              placeholder: \"Spiega perch\\xE9 il tuo esempio \\xE8 una buona rappresentazione di questa figura retorica...\",\n              value: nuovaSpiegazione,\n              onChange: e => setNuovaSpiegazione(e.target.value),\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"kai-button submit-creation\",\n            disabled: !figuraSelezionata || !nuovoEsempio || !nuovaSpiegazione,\n            onClick: submitCreazione,\n            children: \"Condividi la tua creazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sfida-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sfida di Creazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sfida-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `sfida-tab ${sfidaTab === 'mie' ? 'active' : ''}`,\n              onClick: () => setSfidaTab('mie'),\n              children: \"Le mie creazioni\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `sfida-tab ${sfidaTab === 'valuta' ? 'active' : ''}`,\n              onClick: () => setSfidaTab('valuta'),\n              children: \"Valuta altre creazioni\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `sfida-tab ${sfidaTab === 'classifica' ? 'active' : ''}`,\n              onClick: () => setSfidaTab('classifica'),\n              children: \"Classifica\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this), sfidaTab === 'mie' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mie-creazioni\",\n            children: mieCreazioni.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"creazioni-list\",\n              children: mieCreazioni.map((creazione, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"creazione-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"creazione-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"creazione-figura\",\n                    children: creazione.tipo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"creazione-stats\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"creazione-date\",\n                      children: creazione.data\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 701,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"creazione-rating\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"star-icon\",\n                        children: \"\\u2605\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 703,\n                        columnNumber: 33\n                      }, this), \" \", creazione.rating.toFixed(1), \"/5\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 702,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                  className: \"creazione-esempio\",\n                  children: [\"\\\"\", creazione.esempio, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"creazione-spiegazione\",\n                  children: creazione.spiegazione\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"creazione-feedback\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Feedback ricevuti:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 712,\n                    columnNumber: 29\n                  }, this), creazione.feedback.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"feedback-list\",\n                    children: creazione.feedback.map((fb, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"feedback-item\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"feedback-rating\",\n                        children: ['★'.repeat(fb.rating), '☆'.repeat(5 - fb.rating)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 717,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"feedback-comment\",\n                        children: fb.commento\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 720,\n                        columnNumber: 37\n                      }, this)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 716,\n                      columnNumber: 35\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 714,\n                    columnNumber: 31\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"no-feedback\",\n                    children: \"Non hai ancora ricevuto feedback.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 725,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-creazioni\",\n              children: \"Non hai ancora creato figure retoriche. Prova a crearne una!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 17\n          }, this), sfidaTab === 'valuta' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"valuta-creazioni\",\n            children: creazioniDaValutare.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"valutazione-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"creazione-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"creazione-figura\",\n                  children: creazioniDaValutare[indiceValutazione].tipo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"creazione-author\",\n                  children: [\"di \", creazioniDaValutare[indiceValutazione].autore]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                className: \"creazione-esempio\",\n                children: [\"\\\"\", creazioniDaValutare[indiceValutazione].esempio, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"creazione-spiegazione\",\n                children: creazioniDaValutare[indiceValutazione].spiegazione\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"valutazione-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"La tua valutazione:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"star-rating\",\n                  children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `star-btn ${valutazioneAttuale >= star ? 'active' : ''}`,\n                    onClick: () => setValutazioneAttuale(star),\n                    children: \"\\u2605\"\n                  }, star, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"Scrivi qui il tuo feedback (opzionale)...\",\n                  value: commentoValutazione,\n                  onChange: e => setCommentoValutazione(e.target.value),\n                  rows: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"valutazione-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"skip-btn\",\n                    onClick: skipValutazione,\n                    children: \"Salta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"kai-button submit-rating\",\n                    disabled: valutazioneAttuale === 0,\n                    onClick: submitValutazione,\n                    children: \"Invia valutazione\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 769,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-creazioni\",\n              children: \"Non ci sono creazioni da valutare al momento. Torna pi\\xF9 tardi!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 17\n          }, this), sfidaTab === 'classifica' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"classifica-creazioni\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-options\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: filtroClassifica,\n                onChange: e => setFiltroClassifica(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"all\",\n                  children: \"Tutte le figure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 23\n                }, this), getFigurePerLivello().map(figura => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: figura,\n                  children: figura\n                }, figura, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 19\n            }, this), classificaCreazioni.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"classifica-list\",\n              children: classificaCreazioni.filter(c => filtroClassifica === 'all' || c.tipo === filtroClassifica).map((creazione, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"classifica-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"posizione\",\n                  children: [\"#\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"classifica-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"classifica-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: creazione.tipo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"classifica-rating\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"star-icon\",\n                        children: \"\\u2605\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 35\n                      }, this), \" \", creazione.rating.toFixed(1)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 813,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                    children: [\"\\\"\", creazione.esempio, \"\\\"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"classifica-author\",\n                    children: [\"di \", creazione.autore]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 29\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 804,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-creazioni\",\n              children: \"La classifica \\xE8 vuota. Sii il primo a creare una figura retorica!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this), tab === 'esercizi' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testo-esercizi\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Esercizi di comprensione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"esercizio\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"esercizio-domanda\",\n            children: \"Quali sono i temi principali di questo testo?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"esercizio-risposta\",\n            placeholder: \"Scrivi qui la tua risposta...\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"esercizio\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"esercizio-domanda\",\n            children: isPoesia ? \"Analizza le figure retoriche presenti nel testo.\" : \"Descrivi i personaggi principali e il loro ruolo nella narrazione.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"esercizio-risposta\",\n            placeholder: \"Scrivi qui la tua risposta...\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"kai-button\",\n          children: \"Invia risposte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(TestoLetterario, \"AEAlSVZp9WmUEosQ8xjPV6KkiTw=\", false, function () {\n  return [useParams];\n});\n_c = TestoLetterario;\nexport default TestoLetterario;\nvar _c;\n$RefreshReg$(_c, \"TestoLetterario\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","getTestoById","jsxDEV","_jsxDEV","Fragment","_Fragment","TestoLetterario","_s","id","testo","setTesto","tab","setTab","selectedText","setSelectedText","figureSelezionate","setFigureSelezionate","feedback","setFeedback","visible","correct","message","evidenziaFigure","setEvidenziaFigure","punteggio","setPunteggio","livelloDifficolta","setLivelloDifficolta","mostraAiuto","setMostraAiuto","figureRimaste","setFigureRimaste","testCompletato","setTestCompletato","figuraSelezionata","setFiguraSelezionata","nuovoEsempio","setNuovoEsempio","nuovaSpiegazione","setNuovaSpiegazione","sfidaTab","setSfidaTab","mieCreazioni","setMieCreazioni","creazioniDaValutare","setCreazioniDaValutare","indiceValutazione","setIndiceValutazione","valutazioneAttuale","setValutazioneAttuale","commentoValutazione","setCommentoValutazione","classificaCreazioni","setClassificaCreazioni","filtroClassifica","setFiltroClassifica","figurePossibili","testoTrovato","figureRetoriche_posizioni","map","f","trovata","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isPoesia","figureRetoriche","undefined","getFigurePerLivello","figure","i","getDefinizioneFigura","tipo","figura","find","spiegazione","getEsempioFigura","esempio","handleTextSelection","selection","window","getSelection","toString","length","range","getRangeAt","startOffset","endOffset","text","start","end","handleFiguraSelection","figuraCorretta","some","includes","figuraInfo","nuovaFigura","posizione","inizio","fine","corretta","puntiGuadagnati","punti","prev","updatedFigureRimaste","testoCompleto","substring","tutteRimaste","every","setTimeout","submitCreazione","nuovaCreazione","data","Date","toLocaleDateString","rating","skipValutazione","submitValutazione","renderTestoConFigure","onMouseUp","currentPos","parts","posizioni","sort","a","b","forEach","pos","index","_testo$figureRetorich","push","figuraRimasta","evidenzia","title","handleVerificaCompletamento","figureTrovate","filter","figureNonTrovate","punteggioFinale","to","titolo","autore","anno","periodo","onClick","analisi","temiPrincipali","tema","paroleChiave","parola","htmlFor","value","onChange","e","parseInt","target","disabled","figureRetoriche_confronto","confronto","opera","placeholder","rows","creazione","toFixed","fb","repeat","commento","star","c","_c","$RefreshReg$"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/components/components/Letteratura/TestoLetterario.jsx"],"sourcesContent":["// src/components/Letteratura/TestoLetterario.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { getTestoById } from '../../data/letteraturaDatabase';\r\nimport './TestoLetterarioStyle.css';\r\n\r\nconst TestoLetterario = () => {\r\n  const { id } = useParams();\r\n  const [testo, setTesto] = useState(null);\r\n  const [tab, setTab] = useState('testo'); // testo, analisi, esercizi, figure, crea\r\n  const [selectedText, setSelectedText] = useState(null);\r\n  const [figureSelezionate, setFigureSelezionate] = useState([]);\r\n  const [feedback, setFeedback] = useState({ visible: false, correct: false, message: '' });\r\n  const [evidenziaFigure, setEvidenziaFigure] = useState(false);\r\n  const [punteggio, setPunteggio] = useState(0);\r\n  const [livelloDifficolta, setLivelloDifficolta] = useState(1); // 1-3\r\n  const [mostraAiuto, setMostraAiuto] = useState(false);\r\n  const [figureRimaste, setFigureRimaste] = useState([]);\r\n  const [testCompletato, setTestCompletato] = useState(false);\r\n  const [figuraSelezionata, setFiguraSelezionata] = useState('');\r\n  const [nuovoEsempio, setNuovoEsempio] = useState('');\r\n  const [nuovaSpiegazione, setNuovaSpiegazione] = useState('');\r\n  const [sfidaTab, setSfidaTab] = useState('mie');\r\n  const [mieCreazioni, setMieCreazioni] = useState([]);\r\n  const [creazioniDaValutare, setCreazioniDaValutare] = useState([]);\r\n  const [indiceValutazione, setIndiceValutazione] = useState(0);\r\n  const [valutazioneAttuale, setValutazioneAttuale] = useState(0);\r\n  const [commentoValutazione, setCommentoValutazione] = useState('');\r\n  const [classificaCreazioni, setClassificaCreazioni] = useState([]);\r\n  const [filtroClassifica, setFiltroClassifica] = useState('all');\r\n  \r\n  // Lista delle figure retoriche raggruppate per livello di difficoltà\r\n  const figurePossibili = {\r\n    1: ['similitudine', 'metafora', 'anafora', 'enjambement'],\r\n    2: ['ossimoro', 'iperbole', 'allitterazione', 'chiasmo'],\r\n    3: ['sinestesia', 'metonimia', 'sineddoche', 'paronomasia', 'anastrofe']\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const testoTrovato = getTestoById(id);\r\n    if (testoTrovato) {\r\n      setTesto(testoTrovato);\r\n      \r\n      // Inizializza le figure rimaste da trovare\r\n      if (testoTrovato.figureRetoriche_posizioni) {\r\n        setFigureRimaste(testoTrovato.figureRetoriche_posizioni.map(f => ({\r\n          ...f,\r\n          trovata: false\r\n        })));\r\n      }\r\n    }\r\n  }, [id]);\r\n  \r\n  if (!testo) {\r\n    return <div className=\"loading\">Caricamento testo in corso...</div>;\r\n  }\r\n  \r\n  const isPoesia = testo.figureRetoriche !== undefined;\r\n  \r\n  // Funzione per filtrare le figure retoriche in base al livello di difficoltà\r\n  const getFigurePerLivello = () => {\r\n    let figure = [];\r\n    for (let i = 1; i <= livelloDifficolta; i++) {\r\n      figure = [...figure, ...figurePossibili[i]];\r\n    }\r\n    return figure;\r\n  };\r\n  \r\n  // Funzione per ottenere la definizione di una figura retorica\r\n  const getDefinizioneFigura = (tipo) => {\r\n    const figura = testo.figureRetoriche.find(f => f.tipo === tipo);\r\n    return figura ? figura.spiegazione : \"Definizione non disponibile\";\r\n  };\r\n  \r\n  // Funzione per ottenere un esempio di una figura retorica\r\n  const getEsempioFigura = (tipo) => {\r\n    const figura = testo.figureRetoriche.find(f => f.tipo === tipo);\r\n    return figura ? figura.esempio : \"Esempio non disponibile\";\r\n  };\r\n  \r\n  // Gestisce la selezione del testo\r\n  const handleTextSelection = () => {\r\n    const selection = window.getSelection();\r\n    if (selection.toString().length > 0) {\r\n      const range = selection.getRangeAt(0);\r\n      const startOffset = range.startOffset;\r\n      const endOffset = range.endOffset;\r\n      \r\n      setSelectedText({\r\n        text: selection.toString(),\r\n        start: startOffset,\r\n        end: endOffset\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Gestisce la scelta di una figura retorica\r\n  const handleFiguraSelection = (figura) => {\r\n    if (!selectedText) return;\r\n    \r\n    // Verifica se la figura è corretta\r\n    const figuraCorretta = testo.figureRetoriche.some(f => \r\n      f.tipo === figura && f.esempio.includes(selectedText.text)\r\n    );\r\n    \r\n    // Trova l'informazione sulla figura per calcolare i punti\r\n    const figuraInfo = figuraCorretta ? testo.figureRetoriche.find(f => \r\n      f.tipo === figura && f.esempio.includes(selectedText.text)\r\n    ) : null;\r\n    \r\n    // Aggiungi alla lista delle figure selezionate\r\n    const nuovaFigura = {\r\n      tipo: figura,\r\n      testo: selectedText.text,\r\n      posizione: {\r\n        inizio: selectedText.start,\r\n        fine: selectedText.end\r\n      },\r\n      corretta: figuraCorretta\r\n    };\r\n    \r\n    setFigureSelezionate([...figureSelezionate, nuovaFigura]);\r\n    \r\n    // Aggiorna punteggio\r\n    if (figuraCorretta) {\r\n      const puntiGuadagnati = figuraInfo?.punti || 5;\r\n      setPunteggio(prev => prev + puntiGuadagnati);\r\n      \r\n      // Aggiorna figure rimaste\r\n      const updatedFigureRimaste = figureRimaste.map(f => {\r\n        if (f.tipo === figura && selectedText.text.includes(testo.testoCompleto.substring(f.inizio, f.fine))) {\r\n          return { ...f, trovata: true };\r\n        }\r\n        return f;\r\n      });\r\n      setFigureRimaste(updatedFigureRimaste);\r\n      \r\n      // Verifica se tutte le figure sono state trovate\r\n      const tutteRimaste = updatedFigureRimaste.every(f => f.trovata);\r\n      if (tutteRimaste) {\r\n        setTestCompletato(true);\r\n      }\r\n    }\r\n    \r\n    setSelectedText(null);\r\n    \r\n    // Mostra feedback\r\n    setFeedback({\r\n      visible: true,\r\n      correct: figuraCorretta,\r\n      message: figuraCorretta \r\n        ? `Corretto! Hai individuato una ${figura}. +${figuraInfo?.punti || 5} punti!` \r\n        : `Hmm, questa non sembra essere una ${figura}. Riprova!`\r\n    });\r\n    \r\n    // Nascondi il feedback dopo 3 secondi\r\n    setTimeout(() => {\r\n      setFeedback({ visible: false, correct: false, message: '' });\r\n    }, 3000);\r\n  };\r\n  \r\n  // Invia una nuova creazione\r\n  const submitCreazione = () => {\r\n    const nuovaCreazione = {\r\n      tipo: figuraSelezionata,\r\n      esempio: nuovoEsempio,\r\n      spiegazione: nuovaSpiegazione,\r\n      data: new Date().toLocaleDateString(),\r\n      rating: 0,\r\n      feedback: []\r\n    };\r\n    \r\n    setMieCreazioni([...mieCreazioni, nuovaCreazione]);\r\n    \r\n    // Reset del form\r\n    setFiguraSelezionata('');\r\n    setNuovoEsempio('');\r\n    setNuovaSpiegazione('');\r\n    \r\n    // Feedback all'utente\r\n    setFeedback({\r\n      visible: true,\r\n      correct: true,\r\n      message: 'La tua creazione è stata inviata con successo e sarà valutata dagli altri studenti!'\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      setFeedback({ visible: false, correct: false, message: '' });\r\n    }, 3000);\r\n  };\r\n  \r\n  // Funzione per saltare una valutazione\r\n  const skipValutazione = () => {\r\n    if (creazioniDaValutare.length > 0) {\r\n      setIndiceValutazione((indiceValutazione + 1) % creazioniDaValutare.length);\r\n      setValutazioneAttuale(0);\r\n      setCommentoValutazione('');\r\n    }\r\n  };\r\n  \r\n  // Funzione per inviare una valutazione\r\n  const submitValutazione = () => {\r\n    // Logica per inviare la valutazione\r\n    // In un'implementazione reale, questo aggiornerebbe un database\r\n    \r\n    // Feedback all'utente\r\n    setFeedback({\r\n      visible: true,\r\n      correct: true,\r\n      message: 'Grazie per la tua valutazione!'\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      setFeedback({ visible: false, correct: false, message: '' });\r\n      skipValutazione();\r\n    }, 1500);\r\n  };\r\n  \r\n  // Renderizza il testo con le figure retoriche evidenziate\r\n  const renderTestoConFigure = () => {\r\n    if (!testo.figureRetoriche_posizioni || (!evidenziaFigure && tab !== 'figure')) {\r\n      return isPoesia ? (\r\n        <pre className=\"poesia-text\" onMouseUp={tab === 'figure' ? handleTextSelection : undefined}>\r\n          {testo.testoCompleto}\r\n        </pre>\r\n      ) : (\r\n        <p className=\"prosa-text\" onMouseUp={tab === 'figure' ? handleTextSelection : undefined}>\r\n          {testo.testoCompleto}\r\n        </p>\r\n      );\r\n    }\r\n    \r\n    let currentPos = 0;\r\n    const parts = [];\r\n    const testoCompleto = testo.testoCompleto;\r\n    \r\n    // Ordina le posizioni per inizio\r\n    const posizioni = [...testo.figureRetoriche_posizioni].sort((a, b) => a.inizio - b.inizio);\r\n    \r\n    posizioni.forEach((pos, index) => {\r\n      // Aggiungi il testo prima della figura\r\n      if (pos.inizio > currentPos) {\r\n        parts.push(\r\n          <span key={`text-${index}`}>\r\n            {testoCompleto.substring(currentPos, pos.inizio)}\r\n          </span>\r\n        );\r\n      }\r\n      \r\n      // Verifica se la figura è stata trovata (quando siamo in modalità esercizio)\r\n      const figuraRimasta = tab === 'figure' ? figureRimaste.find(\r\n        f => f.inizio === pos.inizio && f.fine === pos.fine\r\n      ) : null;\r\n      \r\n      const evidenzia = tab === 'figure' \r\n        ? (figuraRimasta && figuraRimasta.trovata) \r\n        : true;\r\n      \r\n      // Aggiungi la figura evidenziata\r\n      parts.push(\r\n        <span \r\n          key={`figure-${index}`} \r\n          className={evidenzia ? `highlight-${pos.tipo}` : ''}\r\n          title={evidenzia ? `${pos.tipo}: ${testo.figureRetoriche.find(f => f.tipo === pos.tipo)?.spiegazione}` : ''}\r\n        >\r\n          {testoCompleto.substring(pos.inizio, pos.fine)}\r\n        </span>\r\n      );\r\n      \r\n      currentPos = pos.fine;\r\n    });\r\n    \r\n    // Aggiungi il resto del testo\r\n    if (currentPos < testoCompleto.length) {\r\n      parts.push(\r\n        <span key=\"text-end\">\r\n          {testoCompleto.substring(currentPos)}\r\n        </span>\r\n      );\r\n    }\r\n    \r\n    return isPoesia ? (\r\n      <pre className=\"poesia-text\" onMouseUp={tab === 'figure' ? handleTextSelection : undefined}>\r\n        {parts}\r\n      </pre>\r\n    ) : (\r\n      <p className=\"prosa-text\" onMouseUp={tab === 'figure' ? handleTextSelection : undefined}>\r\n        {parts}\r\n      </p>\r\n    );\r\n  };\r\n  \r\n  // Verifica tutte le figure retoriche e termina l'esercizio\r\n  const handleVerificaCompletamento = () => {\r\n    // Mostra tutte le figure non trovate\r\n    setEvidenziaFigure(true);\r\n    \r\n    // Calcola il punteggio finale\r\n    const figureTrovate = figureRimaste.filter(f => f.trovata).length;\r\n    const figureNonTrovate = figureRimaste.length - figureTrovate;\r\n    \r\n    // Aggiungi bonus per completamento se tutte le figure sono state trovate\r\n    let punteggioFinale = punteggio;\r\n    if (figureTrovate === figureRimaste.length) {\r\n      punteggioFinale += 20; // Bonus completamento\r\n    }\r\n    \r\n    // Visualizza risultato finale\r\n    setFeedback({\r\n      visible: true,\r\n      correct: figureTrovate > figureNonTrovate,\r\n      message: `Hai trovato ${figureTrovate} figure su ${figureRimaste.length}. Punteggio finale: ${punteggioFinale} punti.`\r\n    });\r\n    \r\n    // Imposta il test come completato\r\n    setTestCompletato(true);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"testo-letterario-container\">\r\n      <Link to=\"/letteratura\" className=\"back-link\">\r\n        &larr; Torna alla biblioteca\r\n      </Link>\r\n      \r\n      <div className=\"testo-header\">\r\n        <h1 className=\"testo-titolo\">{testo.titolo}</h1>\r\n        <h2 className=\"testo-autore\">{testo.autore}, {testo.anno}</h2>\r\n        <div className=\"testo-meta\">\r\n          <span className=\"testo-periodo\">{testo.periodo}</span>\r\n          <span className={`testo-difficolta livello-${testo.livelloDifficolta}`}>\r\n            {testo.livelloDifficolta === 1 ? 'Base' : \r\n             testo.livelloDifficolta === 2 ? 'Intermedio' : 'Avanzato'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"testo-tabs\">\r\n        <button \r\n          className={`tab-btn ${tab === 'testo' ? 'active' : ''}`}\r\n          onClick={() => setTab('testo')}\r\n        >\r\n          Testo completo\r\n        </button>\r\n        <button \r\n          className={`tab-btn ${tab === 'analisi' ? 'active' : ''}`}\r\n          onClick={() => setTab('analisi')}\r\n        >\r\n          Analisi\r\n        </button>\r\n        {isPoesia && (\r\n          <button \r\n            className={`tab-btn ${tab === 'figure' ? 'active' : ''}`}\r\n            onClick={() => {\r\n              setTab('figure'); \r\n              setEvidenziaFigure(false);\r\n              // Reset dell'esercizio se non completato\r\n              if (!testCompletato) {\r\n                setFigureSelezionate([]);\r\n                setPunteggio(0);\r\n                if (testo.figureRetoriche_posizioni) {\r\n                  setFigureRimaste(testo.figureRetoriche_posizioni.map(f => ({\r\n                    ...f,\r\n                    trovata: false\r\n                  })));\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            Figure Retoriche\r\n          </button>\r\n        )}\r\n        {isPoesia && punteggio >= 50 && (\r\n          <button \r\n            className={`tab-btn ${tab === 'crea' ? 'active' : ''}`}\r\n            onClick={() => setTab('crea')}\r\n          >\r\n            Crea Figure\r\n          </button>\r\n        )}\r\n        <button \r\n          className={`tab-btn ${tab === 'esercizi' ? 'active' : ''}`}\r\n          onClick={() => setTab('esercizi')}\r\n        >\r\n          Esercizi\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"testo-content\">\r\n        {tab === 'testo' && (\r\n          <div className=\"testo-completo\">\r\n            {renderTestoConFigure()}\r\n            \r\n            {isPoesia && (\r\n              <div className=\"testo-actions\">\r\n                <button \r\n                  className={`highlight-toggle ${evidenziaFigure ? 'active' : ''}`}\r\n                  onClick={() => setEvidenziaFigure(!evidenziaFigure)}\r\n                >\r\n                  {evidenziaFigure ? 'Nascondi figure retoriche' : 'Evidenzia figure retoriche'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {tab === 'analisi' && (\r\n          <div className=\"testo-analisi\">\r\n            <h3>Analisi del testo</h3>\r\n            <p>{testo.analisi}</p>\r\n            \r\n            <h3>Temi principali</h3>\r\n            <ul className=\"temi-list\">\r\n              {testo.temiPrincipali.map((tema, index) => (\r\n                <li key={index}>{tema}</li>\r\n              ))}\r\n            </ul>\r\n            \r\n            {isPoesia && (\r\n              <>\r\n                <h3>Figure retoriche</h3>\r\n                <ul className=\"figure-list\">\r\n                  {testo.figureRetoriche.map((figura, index) => (\r\n                    <li key={index}>\r\n                      <strong>{figura.tipo}</strong>: \"{figura.esempio}\" - {figura.spiegazione}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </>\r\n            )}\r\n            \r\n            <h3>Parole chiave</h3>\r\n            <div className=\"parole-chiave\">\r\n              {testo.paroleChiave.map((parola, index) => (\r\n                <span key={index} className=\"parola-tag\">{parola}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {tab === 'figure' && isPoesia && (\r\n          <div className=\"figure-retoriche-interactive\">\r\n            <div className=\"game-header\">\r\n              <h3>Identifica le Figure Retoriche</h3>\r\n              <div className=\"game-controls\">\r\n                <div className=\"punteggio-display\">\r\n                  Punteggio: <span className=\"punteggio-value\">{punteggio}</span>\r\n                </div>\r\n                <div className=\"difficulty-selector\">\r\n                  <label htmlFor=\"difficulty\">Difficoltà:</label>\r\n                  <select \r\n                    id=\"difficulty\" \r\n                    value={livelloDifficolta}\r\n                    onChange={(e) => setLivelloDifficolta(parseInt(e.target.value))}\r\n                    disabled={figureSelezionate.length > 0 || testCompletato}\r\n                  >\r\n                    <option value={1}>Base</option>\r\n                    <option value={2}>Intermedia</option>\r\n                    <option value={3}>Avanzata</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <p className=\"instruction\">\r\n              Seleziona una parte del testo e poi scegli la figura retorica corrispondente.\r\n              {!testCompletato && (\r\n                <>\r\n                  <br />\r\n                  Trova tutte le figure retoriche presenti nel testo per completare l'esercizio!\r\n                </>\r\n              )}\r\n            </p>\r\n            \r\n            <div className=\"interactive-content\">\r\n              <div className=\"text-selection-area\">\r\n                {renderTestoConFigure()}\r\n              </div>\r\n              \r\n              {!testCompletato && (\r\n                <div className=\"figure-selection\">\r\n                  <h4>Scegli una figura retorica:</h4>\r\n                  {selectedText ? (\r\n                    <div className=\"selected-text-info\">\r\n                      <p>Testo selezionato: <strong>\"{selectedText.text}\"</strong></p>\r\n                      <div className=\"figure-buttons\">\r\n                        {getFigurePerLivello().map(figura => (\r\n                          <button \r\n                            key={figura} \r\n                            className=\"figura-btn\"\r\n                            onClick={() => handleFiguraSelection(figura)}\r\n                          >\r\n                            {figura}\r\n                          </button>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"selection-prompt\">Seleziona prima una parte del testo.</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {feedback.visible && (\r\n                <div className={`feedback-message ${feedback.correct ? 'correct' : 'incorrect'}`}>\r\n                  {feedback.message}\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"figure-results\">\r\n                <div className=\"results-header\">\r\n                  <h4>Figure identificate:</h4>\r\n                  {!testCompletato && (\r\n                    <button \r\n                      className={`help-toggle ${mostraAiuto ? 'active' : ''}`}\r\n                      onClick={() => setMostraAiuto(!mostraAiuto)}\r\n                    >\r\n                      {mostraAiuto ? 'Nascondi aiuti' : 'Mostra aiuti'}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                \r\n                {figureSelezionate.length > 0 ? (\r\n                  <ul className=\"identified-figures\">\r\n                    {figureSelezionate.map((figura, index) => (\r\n                      <li key={index} className={figura.corretta ? 'correct-figure' : 'incorrect-figure'}>\r\n                        <span className=\"figura-tipo\">{figura.tipo}</span>: \r\n                        <span className=\"figura-testo\">\"{figura.testo}\"</span>\r\n                        {figura.corretta && <span className=\"check-icon\">✓</span>}\r\n                        {!figura.corretta && <span className=\"wrong-icon\">✗</span>}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>Non hai ancora identificato nessuna figura retorica.</p>\r\n                )}\r\n                \r\n                {mostraAiuto && !testCompletato && (\r\n                  <div className=\"aiuti-section\">\r\n                    <h5>Suggerimenti:</h5>\r\n                    <ul className=\"aiuti-list\">\r\n                      {getFigurePerLivello().map(figura => {\r\n                        const figuraInfo = testo.figureRetoriche.find(f => f.tipo === figura);\r\n                        return figuraInfo ? (\r\n                          <li key={figura} className=\"aiuto-item\">\r\n                            <span className=\"aiuto-figura\">{figura}</span>: \r\n                            <span className=\"aiuto-definizione\">{figuraInfo.spiegazione}</span>\r\n                          </li>\r\n                        ) : null;\r\n                      })}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {testCompletato ? (\r\n                <div className=\"test-completato\">\r\n                  <h4>Esercizio completato!</h4>\r\n                  {testo.figureRetoriche_confronto && (\r\n                    <div className=\"confronti-section\">\r\n                      <h5>Esempi di confronto da altri testi:</h5>\r\n                      <ul className=\"confronti-list\">\r\n                        {testo.figureRetoriche_confronto.map((confronto, index) => (\r\n                          <li key={index} className=\"confronto-item\">\r\n                            <strong>{confronto.figura}</strong> in \"{confronto.opera}\" di {confronto.autore}:\r\n                            <blockquote className=\"confronto-esempio\">\r\n                              \"{confronto.esempio}\"\r\n                            </blockquote>\r\n                            <p className=\"confronto-spiegazione\">{confronto.spiegazione}</p>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                  <button \r\n                    className=\"kai-button restart-btn\"\r\n                    onClick={() => {\r\n                      setTestCompletato(false);\r\n                      setFigureSelezionate([]);\r\n                      setPunteggio(0);\r\n                      if (testo.figureRetoriche_posizioni) {\r\n                        setFigureRimaste(testo.figureRetoriche_posizioni.map(f => ({\r\n                          ...f,\r\n                          trovata: false\r\n                        })));\r\n                      }\r\n                      setEvidenziaFigure(false);\r\n                    }}\r\n                  >\r\n                    Riprova l'esercizio\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <button \r\n                  className=\"kai-button check-all-btn\"\r\n                  onClick={handleVerificaCompletamento}\r\n                >\r\n                  Verifica tutte le figure\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {tab === 'crea' && isPoesia && (\r\n          <div className=\"crea-figure-container\">\r\n            <h3>Laboratorio di Creazione</h3>\r\n            <p className=\"lab-description\">\r\n              Ora che hai imparato a riconoscere le figure retoriche, prova a crearne di tue!\r\n              Le tue creazioni saranno valutate dagli altri studenti e potrai guadagnare punti extra.\r\n            </p>\r\n            \r\n            <div className=\"creazione-form\">\r\n              <div className=\"form-section\">\r\n                <label htmlFor=\"figura-tipo\">Tipo di figura retorica:</label>\r\n                <select \r\n                  id=\"figura-tipo\" \r\n                  value={figuraSelezionata} \r\n                  onChange={(e) => setFiguraSelezionata(e.target.value)}\r\n                >\r\n                  <option value=\"\">Seleziona una figura...</option>\r\n                  {getFigurePerLivello().map(figura => (\r\n                    <option key={figura} value={figura}>{figura}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              {figuraSelezionata && (\r\n                <div className=\"form-section\">\r\n                  <label htmlFor=\"figura-esempio\">La tua creazione:</label>\r\n                  <textarea \r\n                    id=\"figura-esempio\" \r\n                    placeholder={`Scrivi qui il tuo esempio di ${figuraSelezionata}...`}\r\n                    value={nuovoEsempio}\r\n                    onChange={(e) => setNuovoEsempio(e.target.value)}\r\n                    rows={3}\r\n                  ></textarea>\r\n                  \r\n                  <div className=\"figura-info\">\r\n                    <h4>Cos'è una {figuraSelezionata}?</h4>\r\n                    <p>{getDefinizioneFigura(figuraSelezionata)}</p>\r\n                    <div className=\"esempio-modello\">\r\n                      <strong>Esempio di riferimento:</strong>\r\n                      <p>\"{getEsempioFigura(figuraSelezionata)}\"</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"form-section\">\r\n                <label htmlFor=\"figura-spiegazione\">Spiega la tua creazione:</label>\r\n                <textarea \r\n                  id=\"figura-spiegazione\" \r\n                  placeholder=\"Spiega perché il tuo esempio è una buona rappresentazione di questa figura retorica...\"\r\n                  value={nuovaSpiegazione}\r\n                  onChange={(e) => setNuovaSpiegazione(e.target.value)}\r\n                  rows={3}\r\n                ></textarea>\r\n              </div>\r\n              \r\n              <button \r\n                className=\"kai-button submit-creation\"\r\n                disabled={!figuraSelezionata || !nuovoEsempio || !nuovaSpiegazione}\r\n                onClick={submitCreazione}\r\n              >\r\n                Condividi la tua creazione\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"sfida-section\">\r\n              <h3>Sfida di Creazione</h3>\r\n              <div className=\"sfida-tabs\">\r\n                <button \r\n                  className={`sfida-tab ${sfidaTab === 'mie' ? 'active' : ''}`}\r\n                  onClick={() => setSfidaTab('mie')}\r\n                >\r\n                  Le mie creazioni\r\n                </button>\r\n                <button \r\n                  className={`sfida-tab ${sfidaTab === 'valuta' ? 'active' : ''}`}\r\n                  onClick={() => setSfidaTab('valuta')}\r\n                >\r\n                  Valuta altre creazioni\r\n                </button>\r\n                <button \r\n                  className={`sfida-tab ${sfidaTab === 'classifica' ? 'active' : ''}`}\r\n                  onClick={() => setSfidaTab('classifica')}\r\n                >\r\n                  Classifica\r\n                </button>\r\n              </div>\r\n              \r\n              {sfidaTab === 'mie' && (\r\n                <div className=\"mie-creazioni\">\r\n                  {mieCreazioni.length > 0 ? (\r\n                    <div className=\"creazioni-list\">\r\n                      {mieCreazioni.map((creazione, index) => (\r\n                        <div key={index} className=\"creazione-card\">\r\n                          <div className=\"creazione-header\">\r\n                            <h4 className=\"creazione-figura\">{creazione.tipo}</h4>\r\n                            <div className=\"creazione-stats\">\r\n                              <span className=\"creazione-date\">{creazione.data}</span>\r\n                              <span className=\"creazione-rating\">\r\n                                <span className=\"star-icon\">★</span> {creazione.rating.toFixed(1)}/5\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <blockquote className=\"creazione-esempio\">\r\n                            \"{creazione.esempio}\"\r\n                          </blockquote>\r\n                          <p className=\"creazione-spiegazione\">{creazione.spiegazione}</p>\r\n                          <div className=\"creazione-feedback\">\r\n                            <h5>Feedback ricevuti:</h5>\r\n                            {creazione.feedback.length > 0 ? (\r\n                              <ul className=\"feedback-list\">\r\n                                {creazione.feedback.map((fb, i) => (\r\n                                  <li key={i} className=\"feedback-item\">\r\n                                    <div className=\"feedback-rating\">\r\n                                      {'★'.repeat(fb.rating)}{'☆'.repeat(5-fb.rating)}\r\n                                    </div>\r\n                                    <p className=\"feedback-comment\">{fb.commento}</p>\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            ) : (\r\n                              <p className=\"no-feedback\">Non hai ancora ricevuto feedback.</p>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"no-creazioni\">Non hai ancora creato figure retoriche. Prova a crearne una!</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {sfidaTab === 'valuta' && (\r\n                <div className=\"valuta-creazioni\">\r\n                  {creazioniDaValutare.length > 0 ? (\r\n                    <div className=\"valutazione-card\">\r\n                      <div className=\"creazione-header\">\r\n                        <h4 className=\"creazione-figura\">{creazioniDaValutare[indiceValutazione].tipo}</h4>\r\n                        <span className=\"creazione-author\">di {creazioniDaValutare[indiceValutazione].autore}</span>\r\n                      </div>\r\n                      <blockquote className=\"creazione-esempio\">\r\n                        \"{creazioniDaValutare[indiceValutazione].esempio}\"\r\n                      </blockquote>\r\n                      <p className=\"creazione-spiegazione\">{creazioniDaValutare[indiceValutazione].spiegazione}</p>\r\n                      \r\n                      <div className=\"valutazione-form\">\r\n                        <h5>La tua valutazione:</h5>\r\n                        <div className=\"star-rating\">\r\n                          {[1, 2, 3, 4, 5].map(star => (\r\n                            <button \r\n                              key={star} \r\n                              className={`star-btn ${valutazioneAttuale >= star ? 'active' : ''}`}\r\n                              onClick={() => setValutazioneAttuale(star)}\r\n                            >\r\n                              ★\r\n                            </button>\r\n                          ))}\r\n                        </div>\r\n                        <textarea \r\n                          placeholder=\"Scrivi qui il tuo feedback (opzionale)...\"\r\n                          value={commentoValutazione}\r\n                          onChange={(e) => setCommentoValutazione(e.target.value)}\r\n                          rows={2}\r\n                        ></textarea>\r\n                        <div className=\"valutazione-actions\">\r\n                          <button className=\"skip-btn\" onClick={skipValutazione}>\r\n                            Salta\r\n                          </button>\r\n                          <button \r\n                            className=\"kai-button submit-rating\"\r\n                            disabled={valutazioneAttuale === 0}\r\n                            onClick={submitValutazione}\r\n                          >\r\n                            Invia valutazione\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"no-creazioni\">Non ci sono creazioni da valutare al momento. Torna più tardi!</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              {sfidaTab === 'classifica' && (\r\n                <div className=\"classifica-creazioni\">\r\n                  <div className=\"filter-options\">\r\n                    <select \r\n                      value={filtroClassifica} \r\n                      onChange={(e) => setFiltroClassifica(e.target.value)}\r\n                    >\r\n                      <option value=\"all\">Tutte le figure</option>\r\n                      {getFigurePerLivello().map(figura => (\r\n                        <option key={figura} value={figura}>{figura}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  {classificaCreazioni.length > 0 ? (\r\n                    <div className=\"classifica-list\">\r\n                      {classificaCreazioni\r\n                        .filter(c => filtroClassifica === 'all' || c.tipo === filtroClassifica)\r\n                        .map((creazione, index) => (\r\n                          <div key={index} className=\"classifica-item\">\r\n                            <div className=\"posizione\">#{index + 1}</div>\r\n                            <div className=\"classifica-content\">\r\n                              <div className=\"classifica-header\">\r\n                                <h4>{creazione.tipo}</h4>\r\n                                <div className=\"classifica-rating\">\r\n                                  <span className=\"star-icon\">★</span> {creazione.rating.toFixed(1)}\r\n                                </div>\r\n                              </div>\r\n                              <blockquote>\"{creazione.esempio}\"</blockquote>\r\n                              <div className=\"classifica-author\">di {creazione.autore}</div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className=\"no-creazioni\">La classifica è vuota. Sii il primo a creare una figura retorica!</p>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {tab === 'esercizi' && (\r\n          <div className=\"testo-esercizi\">\r\n            <h3>Esercizi di comprensione</h3>\r\n            <div className=\"esercizio\">\r\n              <p className=\"esercizio-domanda\">\r\n                Quali sono i temi principali di questo testo?\r\n              </p>\r\n              <textarea \r\n                className=\"esercizio-risposta\" \r\n                placeholder=\"Scrivi qui la tua risposta...\"\r\n                rows={4}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"esercizio\">\r\n              <p className=\"esercizio-domanda\">\r\n                {isPoesia \r\n                  ? \"Analizza le figure retoriche presenti nel testo.\" \r\n                  : \"Descrivi i personaggi principali e il loro ruolo nella narrazione.\"}\r\n              </p>\r\n              <textarea \r\n                className=\"esercizio-risposta\" \r\n                placeholder=\"Scrivi qui la tua risposta...\"\r\n                rows={4}\r\n              />\r\n            </div>\r\n            \r\n            <button className=\"kai-button\">Invia risposte</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestoLetterario;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACzC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACzF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC6B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACqC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6C,YAAY,EAAEC,eAAe,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACiD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACmD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGpD,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACqD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACuD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACyD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAM2D,eAAe,GAAG;IACtB,CAAC,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,CAAC;IACzD,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,SAAS,CAAC;IACxD,CAAC,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW;EACzE,CAAC;EAED1D,SAAS,CAAC,MAAM;IACd,MAAM2D,YAAY,GAAGxD,YAAY,CAACO,EAAE,CAAC;IACrC,IAAIiD,YAAY,EAAE;MAChB/C,QAAQ,CAAC+C,YAAY,CAAC;;MAEtB;MACA,IAAIA,YAAY,CAACC,yBAAyB,EAAE;QAC1C3B,gBAAgB,CAAC0B,YAAY,CAACC,yBAAyB,CAACC,GAAG,CAACC,CAAC,KAAK;UAChE,GAAGA,CAAC;UACJC,OAAO,EAAE;QACX,CAAC,CAAC,CAAC,CAAC;MACN;IACF;EACF,CAAC,EAAE,CAACrD,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,KAAK,EAAE;IACV,oBAAON,OAAA;MAAK2D,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrE;EAEA,MAAMC,QAAQ,GAAG3D,KAAK,CAAC4D,eAAe,KAAKC,SAAS;;EAEpD;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI/C,iBAAiB,EAAE+C,CAAC,EAAE,EAAE;MAC3CD,MAAM,GAAG,CAAC,GAAGA,MAAM,EAAE,GAAGhB,eAAe,CAACiB,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,MAAM;EACf,CAAC;;EAED;EACA,MAAME,oBAAoB,GAAIC,IAAI,IAAK;IACrC,MAAMC,MAAM,GAAGnE,KAAK,CAAC4D,eAAe,CAACQ,IAAI,CAACjB,CAAC,IAAIA,CAAC,CAACe,IAAI,KAAKA,IAAI,CAAC;IAC/D,OAAOC,MAAM,GAAGA,MAAM,CAACE,WAAW,GAAG,6BAA6B;EACpE,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIJ,IAAI,IAAK;IACjC,MAAMC,MAAM,GAAGnE,KAAK,CAAC4D,eAAe,CAACQ,IAAI,CAACjB,CAAC,IAAIA,CAAC,CAACe,IAAI,KAAKA,IAAI,CAAC;IAC/D,OAAOC,MAAM,GAAGA,MAAM,CAACI,OAAO,GAAG,yBAAyB;EAC5D,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;IACvC,IAAIF,SAAS,CAACG,QAAQ,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACnC,MAAMC,KAAK,GAAGL,SAAS,CAACM,UAAU,CAAC,CAAC,CAAC;MACrC,MAAMC,WAAW,GAAGF,KAAK,CAACE,WAAW;MACrC,MAAMC,SAAS,GAAGH,KAAK,CAACG,SAAS;MAEjC5E,eAAe,CAAC;QACd6E,IAAI,EAAET,SAAS,CAACG,QAAQ,CAAC,CAAC;QAC1BO,KAAK,EAAEH,WAAW;QAClBI,GAAG,EAAEH;MACP,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMI,qBAAqB,GAAIlB,MAAM,IAAK;IACxC,IAAI,CAAC/D,YAAY,EAAE;;IAEnB;IACA,MAAMkF,cAAc,GAAGtF,KAAK,CAAC4D,eAAe,CAAC2B,IAAI,CAACpC,CAAC,IACjDA,CAAC,CAACe,IAAI,KAAKC,MAAM,IAAIhB,CAAC,CAACoB,OAAO,CAACiB,QAAQ,CAACpF,YAAY,CAAC8E,IAAI,CAC3D,CAAC;;IAED;IACA,MAAMO,UAAU,GAAGH,cAAc,GAAGtF,KAAK,CAAC4D,eAAe,CAACQ,IAAI,CAACjB,CAAC,IAC9DA,CAAC,CAACe,IAAI,KAAKC,MAAM,IAAIhB,CAAC,CAACoB,OAAO,CAACiB,QAAQ,CAACpF,YAAY,CAAC8E,IAAI,CAC3D,CAAC,GAAG,IAAI;;IAER;IACA,MAAMQ,WAAW,GAAG;MAClBxB,IAAI,EAAEC,MAAM;MACZnE,KAAK,EAAEI,YAAY,CAAC8E,IAAI;MACxBS,SAAS,EAAE;QACTC,MAAM,EAAExF,YAAY,CAAC+E,KAAK;QAC1BU,IAAI,EAAEzF,YAAY,CAACgF;MACrB,CAAC;MACDU,QAAQ,EAAER;IACZ,CAAC;IAED/E,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAEoF,WAAW,CAAC,CAAC;;IAEzD;IACA,IAAIJ,cAAc,EAAE;MAClB,MAAMS,eAAe,GAAG,CAAAN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEO,KAAK,KAAI,CAAC;MAC9ChF,YAAY,CAACiF,IAAI,IAAIA,IAAI,GAAGF,eAAe,CAAC;;MAE5C;MACA,MAAMG,oBAAoB,GAAG7E,aAAa,CAAC6B,GAAG,CAACC,CAAC,IAAI;QAClD,IAAIA,CAAC,CAACe,IAAI,KAAKC,MAAM,IAAI/D,YAAY,CAAC8E,IAAI,CAACM,QAAQ,CAACxF,KAAK,CAACmG,aAAa,CAACC,SAAS,CAACjD,CAAC,CAACyC,MAAM,EAAEzC,CAAC,CAAC0C,IAAI,CAAC,CAAC,EAAE;UACpG,OAAO;YAAE,GAAG1C,CAAC;YAAEC,OAAO,EAAE;UAAK,CAAC;QAChC;QACA,OAAOD,CAAC;MACV,CAAC,CAAC;MACF7B,gBAAgB,CAAC4E,oBAAoB,CAAC;;MAEtC;MACA,MAAMG,YAAY,GAAGH,oBAAoB,CAACI,KAAK,CAACnD,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC;MAC/D,IAAIiD,YAAY,EAAE;QAChB7E,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF;IAEAnB,eAAe,CAAC,IAAI,CAAC;;IAErB;IACAI,WAAW,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE2E,cAAc;MACvB1E,OAAO,EAAE0E,cAAc,GACnB,iCAAiCnB,MAAM,MAAM,CAAAsB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEO,KAAK,KAAI,CAAC,SAAS,GAC5E,qCAAqC7B,MAAM;IACjD,CAAC,CAAC;;IAEF;IACAoC,UAAU,CAAC,MAAM;MACf9F,WAAW,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;IAC9D,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAM4F,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,cAAc,GAAG;MACrBvC,IAAI,EAAEzC,iBAAiB;MACvB8C,OAAO,EAAE5C,YAAY;MACrB0C,WAAW,EAAExC,gBAAgB;MAC7B6E,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MACrCC,MAAM,EAAE,CAAC;MACTrG,QAAQ,EAAE;IACZ,CAAC;IAED0B,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEwE,cAAc,CAAC,CAAC;;IAElD;IACA/E,oBAAoB,CAAC,EAAE,CAAC;IACxBE,eAAe,CAAC,EAAE,CAAC;IACnBE,mBAAmB,CAAC,EAAE,CAAC;;IAEvB;IACArB,WAAW,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF2F,UAAU,CAAC,MAAM;MACf9F,WAAW,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;IAC9D,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMkG,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI3E,mBAAmB,CAAC0C,MAAM,GAAG,CAAC,EAAE;MAClCvC,oBAAoB,CAAC,CAACD,iBAAiB,GAAG,CAAC,IAAIF,mBAAmB,CAAC0C,MAAM,CAAC;MAC1ErC,qBAAqB,CAAC,CAAC,CAAC;MACxBE,sBAAsB,CAAC,EAAE,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMqE,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA;;IAEA;IACAtG,WAAW,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF2F,UAAU,CAAC,MAAM;MACf9F,WAAW,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MAC5DkG,eAAe,CAAC,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAChH,KAAK,CAACiD,yBAAyB,IAAK,CAACpC,eAAe,IAAIX,GAAG,KAAK,QAAS,EAAE;MAC9E,OAAOyD,QAAQ,gBACbjE,OAAA;QAAK2D,SAAS,EAAC,aAAa;QAAC4D,SAAS,EAAE/G,GAAG,KAAK,QAAQ,GAAGsE,mBAAmB,GAAGX,SAAU;QAAAP,QAAA,EACxFtD,KAAK,CAACmG;MAAa;QAAA5C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,gBAENhE,OAAA;QAAG2D,SAAS,EAAC,YAAY;QAAC4D,SAAS,EAAE/G,GAAG,KAAK,QAAQ,GAAGsE,mBAAmB,GAAGX,SAAU;QAAAP,QAAA,EACrFtD,KAAK,CAACmG;MAAa;QAAA5C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CACJ;IACH;IAEA,IAAIwD,UAAU,GAAG,CAAC;IAClB,MAAMC,KAAK,GAAG,EAAE;IAChB,MAAMhB,aAAa,GAAGnG,KAAK,CAACmG,aAAa;;IAEzC;IACA,MAAMiB,SAAS,GAAG,CAAC,GAAGpH,KAAK,CAACiD,yBAAyB,CAAC,CAACoE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC1B,MAAM,GAAG2B,CAAC,CAAC3B,MAAM,CAAC;IAE1FwB,SAAS,CAACI,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAAA,IAAAC,qBAAA;MAChC;MACA,IAAIF,GAAG,CAAC7B,MAAM,GAAGsB,UAAU,EAAE;QAC3BC,KAAK,CAACS,IAAI,cACRlI,OAAA;UAAA4D,QAAA,EACG6C,aAAa,CAACC,SAAS,CAACc,UAAU,EAAEO,GAAG,CAAC7B,MAAM;QAAC,GADvC,QAAQ8B,KAAK,EAAE;UAAAnE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CACR,CAAC;MACH;;MAEA;MACA,MAAMmE,aAAa,GAAG3H,GAAG,KAAK,QAAQ,GAAGmB,aAAa,CAAC+C,IAAI,CACzDjB,CAAC,IAAIA,CAAC,CAACyC,MAAM,KAAK6B,GAAG,CAAC7B,MAAM,IAAIzC,CAAC,CAAC0C,IAAI,KAAK4B,GAAG,CAAC5B,IACjD,CAAC,GAAG,IAAI;MAER,MAAMiC,SAAS,GAAG5H,GAAG,KAAK,QAAQ,GAC7B2H,aAAa,IAAIA,aAAa,CAACzE,OAAO,GACvC,IAAI;;MAER;MACA+D,KAAK,CAACS,IAAI,cACRlI,OAAA;QAEE2D,SAAS,EAAEyE,SAAS,GAAG,aAAaL,GAAG,CAACvD,IAAI,EAAE,GAAG,EAAG;QACpD6D,KAAK,EAAED,SAAS,GAAG,GAAGL,GAAG,CAACvD,IAAI,MAAAyD,qBAAA,GAAK3H,KAAK,CAAC4D,eAAe,CAACQ,IAAI,CAACjB,CAAC,IAAIA,CAAC,CAACe,IAAI,KAAKuD,GAAG,CAACvD,IAAI,CAAC,cAAAyD,qBAAA,uBAApDA,qBAAA,CAAsDtD,WAAW,EAAE,GAAG,EAAG;QAAAf,QAAA,EAE3G6C,aAAa,CAACC,SAAS,CAACqB,GAAG,CAAC7B,MAAM,EAAE6B,GAAG,CAAC5B,IAAI;MAAC,GAJzC,UAAU6B,KAAK,EAAE;QAAAnE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKlB,CACR,CAAC;MAEDwD,UAAU,GAAGO,GAAG,CAAC5B,IAAI;IACvB,CAAC,CAAC;;IAEF;IACA,IAAIqB,UAAU,GAAGf,aAAa,CAACtB,MAAM,EAAE;MACrCsC,KAAK,CAACS,IAAI,cACRlI,OAAA;QAAA4D,QAAA,EACG6C,aAAa,CAACC,SAAS,CAACc,UAAU;MAAC,GAD5B,UAAU;QAAA3D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACR,CAAC;IACH;IAEA,OAAOC,QAAQ,gBACbjE,OAAA;MAAK2D,SAAS,EAAC,aAAa;MAAC4D,SAAS,EAAE/G,GAAG,KAAK,QAAQ,GAAGsE,mBAAmB,GAAGX,SAAU;MAAAP,QAAA,EACxF6D;IAAK;MAAA5D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENhE,OAAA;MAAG2D,SAAS,EAAC,YAAY;MAAC4D,SAAS,EAAE/G,GAAG,KAAK,QAAQ,GAAGsE,mBAAmB,GAAGX,SAAU;MAAAP,QAAA,EACrF6D;IAAK;MAAA5D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACJ;EACH,CAAC;;EAED;EACA,MAAMsE,2BAA2B,GAAGA,CAAA,KAAM;IACxC;IACAlH,kBAAkB,CAAC,IAAI,CAAC;;IAExB;IACA,MAAMmH,aAAa,GAAG5G,aAAa,CAAC6G,MAAM,CAAC/E,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,CAACyB,MAAM;IACjE,MAAMsD,gBAAgB,GAAG9G,aAAa,CAACwD,MAAM,GAAGoD,aAAa;;IAE7D;IACA,IAAIG,eAAe,GAAGrH,SAAS;IAC/B,IAAIkH,aAAa,KAAK5G,aAAa,CAACwD,MAAM,EAAE;MAC1CuD,eAAe,IAAI,EAAE,CAAC,CAAC;IACzB;;IAEA;IACA3H,WAAW,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAEsH,aAAa,GAAGE,gBAAgB;MACzCvH,OAAO,EAAE,eAAeqH,aAAa,cAAc5G,aAAa,CAACwD,MAAM,uBAAuBuD,eAAe;IAC/G,CAAC,CAAC;;IAEF;IACA5G,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACE9B,OAAA;IAAK2D,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzC5D,OAAA,CAACH,IAAI;MAAC8I,EAAE,EAAC,cAAc;MAAChF,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAE9C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEPhE,OAAA;MAAK2D,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B5D,OAAA;QAAI2D,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEtD,KAAK,CAACsI;MAAM;QAAA/E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDhE,OAAA;QAAI2D,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAEtD,KAAK,CAACuI,MAAM,EAAC,IAAE,EAACvI,KAAK,CAACwI,IAAI;MAAA;QAAAjF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DhE,OAAA;QAAK2D,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5D,OAAA;UAAM2D,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEtD,KAAK,CAACyI;QAAO;UAAAlF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtDhE,OAAA;UAAM2D,SAAS,EAAE,4BAA4BrD,KAAK,CAACiB,iBAAiB,EAAG;UAAAqC,QAAA,EACpEtD,KAAK,CAACiB,iBAAiB,KAAK,CAAC,GAAG,MAAM,GACtCjB,KAAK,CAACiB,iBAAiB,KAAK,CAAC,GAAG,YAAY,GAAG;QAAU;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENhE,OAAA;MAAK2D,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB5D,OAAA;QACE2D,SAAS,EAAE,WAAWnD,GAAG,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;QACxDwI,OAAO,EAAEA,CAAA,KAAMvI,MAAM,CAAC,OAAO,CAAE;QAAAmD,QAAA,EAChC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThE,OAAA;QACE2D,SAAS,EAAE,WAAWnD,GAAG,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC1DwI,OAAO,EAAEA,CAAA,KAAMvI,MAAM,CAAC,SAAS,CAAE;QAAAmD,QAAA,EAClC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRC,QAAQ,iBACPjE,OAAA;QACE2D,SAAS,EAAE,WAAWnD,GAAG,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;QACzDwI,OAAO,EAAEA,CAAA,KAAM;UACbvI,MAAM,CAAC,QAAQ,CAAC;UAChBW,kBAAkB,CAAC,KAAK,CAAC;UACzB;UACA,IAAI,CAACS,cAAc,EAAE;YACnBhB,oBAAoB,CAAC,EAAE,CAAC;YACxBS,YAAY,CAAC,CAAC,CAAC;YACf,IAAIhB,KAAK,CAACiD,yBAAyB,EAAE;cACnC3B,gBAAgB,CAACtB,KAAK,CAACiD,yBAAyB,CAACC,GAAG,CAACC,CAAC,KAAK;gBACzD,GAAGA,CAAC;gBACJC,OAAO,EAAE;cACX,CAAC,CAAC,CAAC,CAAC;YACN;UACF;QACF,CAAE;QAAAE,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,EACAC,QAAQ,IAAI5C,SAAS,IAAI,EAAE,iBAC1BrB,OAAA;QACE2D,SAAS,EAAE,WAAWnD,GAAG,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QACvDwI,OAAO,EAAEA,CAAA,KAAMvI,MAAM,CAAC,MAAM,CAAE;QAAAmD,QAAA,EAC/B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,eACDhE,OAAA;QACE2D,SAAS,EAAE,WAAWnD,GAAG,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC3DwI,OAAO,EAAEA,CAAA,KAAMvI,MAAM,CAAC,UAAU,CAAE;QAAAmD,QAAA,EACnC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENhE,OAAA;MAAK2D,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BpD,GAAG,KAAK,OAAO,iBACdR,OAAA;QAAK2D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5B0D,oBAAoB,CAAC,CAAC,EAEtBrD,QAAQ,iBACPjE,OAAA;UAAK2D,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5B5D,OAAA;YACE2D,SAAS,EAAE,oBAAoBxC,eAAe,GAAG,QAAQ,GAAG,EAAE,EAAG;YACjE6H,OAAO,EAAEA,CAAA,KAAM5H,kBAAkB,CAAC,CAACD,eAAe,CAAE;YAAAyC,QAAA,EAEnDzC,eAAe,GAAG,2BAA2B,GAAG;UAA4B;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAEAxD,GAAG,KAAK,SAAS,iBAChBR,OAAA;QAAK2D,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B5D,OAAA;UAAA4D,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BhE,OAAA;UAAA4D,QAAA,EAAItD,KAAK,CAAC2I;QAAO;UAAApF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEtBhE,OAAA;UAAA4D,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBhE,OAAA;UAAI2D,SAAS,EAAC,WAAW;UAAAC,QAAA,EACtBtD,KAAK,CAAC4I,cAAc,CAAC1F,GAAG,CAAC,CAAC2F,IAAI,EAAEnB,KAAK,kBACpChI,OAAA;YAAA4D,QAAA,EAAiBuF;UAAI,GAAZnB,KAAK;YAAAnE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAEJC,QAAQ,iBACPjE,OAAA,CAAAE,SAAA;UAAA0D,QAAA,gBACE5D,OAAA;YAAA4D,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBhE,OAAA;YAAI2D,SAAS,EAAC,aAAa;YAAAC,QAAA,EACxBtD,KAAK,CAAC4D,eAAe,CAACV,GAAG,CAAC,CAACiB,MAAM,EAAEuD,KAAK,kBACvChI,OAAA;cAAA4D,QAAA,gBACE5D,OAAA;gBAAA4D,QAAA,EAASa,MAAM,CAACD;cAAI;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,QAAG,EAACS,MAAM,CAACI,OAAO,EAAC,OAAI,EAACJ,MAAM,CAACE,WAAW;YAAA,GADjEqD,KAAK;cAAAnE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,eACL,CACH,eAEDhE,OAAA;UAAA4D,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBhE,OAAA;UAAK2D,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BtD,KAAK,CAAC8I,YAAY,CAAC5F,GAAG,CAAC,CAAC6F,MAAM,EAAErB,KAAK,kBACpChI,OAAA;YAAkB2D,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEyF;UAAM,GAArCrB,KAAK;YAAAnE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuC,CACxD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEAxD,GAAG,KAAK,QAAQ,IAAIyD,QAAQ,iBAC3BjE,OAAA;QAAK2D,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3C5D,OAAA;UAAK2D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B5D,OAAA;YAAA4D,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvChE,OAAA;YAAK2D,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B5D,OAAA;cAAK2D,SAAS,EAAC,mBAAmB;cAAAC,QAAA,GAAC,aACtB,eAAA5D,OAAA;gBAAM2D,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAEvC;cAAS;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,eACNhE,OAAA;cAAK2D,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClC5D,OAAA;gBAAOsJ,OAAO,EAAC,YAAY;gBAAA1F,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC/ChE,OAAA;gBACEK,EAAE,EAAC,YAAY;gBACfkJ,KAAK,EAAEhI,iBAAkB;gBACzBiI,QAAQ,EAAGC,CAAC,IAAKjI,oBAAoB,CAACkI,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;gBAChEK,QAAQ,EAAEhJ,iBAAiB,CAACuE,MAAM,GAAG,CAAC,IAAItD,cAAe;gBAAA+B,QAAA,gBAEzD5D,OAAA;kBAAQuJ,KAAK,EAAE,CAAE;kBAAA3F,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC/BhE,OAAA;kBAAQuJ,KAAK,EAAE,CAAE;kBAAA3F,QAAA,EAAC;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACrChE,OAAA;kBAAQuJ,KAAK,EAAE,CAAE;kBAAA3F,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENhE,OAAA;UAAG2D,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,+EAEzB,EAAC,CAAC/B,cAAc,iBACd7B,OAAA,CAAAE,SAAA;YAAA0D,QAAA,gBACE5D,OAAA;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,kFAER;UAAA,eAAE,CACH;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEJhE,OAAA;UAAK2D,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC5D,OAAA;YAAK2D,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EACjC0D,oBAAoB,CAAC;UAAC;YAAAzD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,EAEL,CAACnC,cAAc,iBACd7B,OAAA;YAAK2D,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B5D,OAAA;cAAA4D,QAAA,EAAI;YAA2B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACnCtD,YAAY,gBACXV,OAAA;cAAK2D,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjC5D,OAAA;gBAAA4D,QAAA,GAAG,qBAAmB,eAAA5D,OAAA;kBAAA4D,QAAA,GAAQ,IAAC,EAAClD,YAAY,CAAC8E,IAAI,EAAC,IAAC;gBAAA;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAChEhE,OAAA;gBAAK2D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAC5BQ,mBAAmB,CAAC,CAAC,CAACZ,GAAG,CAACiB,MAAM,iBAC/BzE,OAAA;kBAEE2D,SAAS,EAAC,YAAY;kBACtBqF,OAAO,EAAEA,CAAA,KAAMrD,qBAAqB,CAAClB,MAAM,CAAE;kBAAAb,QAAA,EAE5Ca;gBAAM,GAJFA,MAAM;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKL,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAENhE,OAAA;cAAG2D,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAoC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACxE;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,EAEAlD,QAAQ,CAACE,OAAO,iBACfhB,OAAA;YAAK2D,SAAS,EAAE,oBAAoB7C,QAAQ,CAACG,OAAO,GAAG,SAAS,GAAG,WAAW,EAAG;YAAA2C,QAAA,EAC9E9C,QAAQ,CAACI;UAAO;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CACN,eAEDhE,OAAA;YAAK2D,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B5D,OAAA;cAAK2D,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B5D,OAAA;gBAAA4D,QAAA,EAAI;cAAoB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAC5B,CAACnC,cAAc,iBACd7B,OAAA;gBACE2D,SAAS,EAAE,eAAelC,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;gBACxDuH,OAAO,EAAEA,CAAA,KAAMtH,cAAc,CAAC,CAACD,WAAW,CAAE;gBAAAmC,QAAA,EAE3CnC,WAAW,GAAG,gBAAgB,GAAG;cAAc;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,EAELpD,iBAAiB,CAACuE,MAAM,GAAG,CAAC,gBAC3BnF,OAAA;cAAI2D,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAC/BhD,iBAAiB,CAAC4C,GAAG,CAAC,CAACiB,MAAM,EAAEuD,KAAK,kBACnChI,OAAA;gBAAgB2D,SAAS,EAAEc,MAAM,CAAC2B,QAAQ,GAAG,gBAAgB,GAAG,kBAAmB;gBAAAxC,QAAA,gBACjF5D,OAAA;kBAAM2D,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAEa,MAAM,CAACD;gBAAI;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,KAClD,eAAAhE,OAAA;kBAAM2D,SAAS,EAAC,cAAc;kBAAAC,QAAA,GAAC,IAAC,EAACa,MAAM,CAACnE,KAAK,EAAC,IAAC;gBAAA;kBAAAuD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EACrDS,MAAM,CAAC2B,QAAQ,iBAAIpG,OAAA;kBAAM2D,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EACxD,CAACS,MAAM,CAAC2B,QAAQ,iBAAIpG,OAAA;kBAAM2D,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,GAJnDgE,KAAK;gBAAAnE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,gBAELhE,OAAA;cAAA4D,QAAA,EAAG;YAAoD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAC3D,EAEAvC,WAAW,IAAI,CAACI,cAAc,iBAC7B7B,OAAA;cAAK2D,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5B5D,OAAA;gBAAA4D,QAAA,EAAI;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtBhE,OAAA;gBAAI2D,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACvBQ,mBAAmB,CAAC,CAAC,CAACZ,GAAG,CAACiB,MAAM,IAAI;kBACnC,MAAMsB,UAAU,GAAGzF,KAAK,CAAC4D,eAAe,CAACQ,IAAI,CAACjB,CAAC,IAAIA,CAAC,CAACe,IAAI,KAAKC,MAAM,CAAC;kBACrE,OAAOsB,UAAU,gBACf/F,OAAA;oBAAiB2D,SAAS,EAAC,YAAY;oBAAAC,QAAA,gBACrC5D,OAAA;sBAAM2D,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAAEa;oBAAM;sBAAAZ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,KAC9C,eAAAhE,OAAA;sBAAM2D,SAAS,EAAC,mBAAmB;sBAAAC,QAAA,EAAEmC,UAAU,CAACpB;oBAAW;sBAAAd,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC;kBAAA,GAF5DS,MAAM;oBAAAZ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGX,CAAC,GACH,IAAI;gBACV,CAAC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAELnC,cAAc,gBACb7B,OAAA;YAAK2D,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B5D,OAAA;cAAA4D,QAAA,EAAI;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAC7B1D,KAAK,CAACuJ,yBAAyB,iBAC9B7J,OAAA;cAAK2D,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChC5D,OAAA;gBAAA4D,QAAA,EAAI;cAAmC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC5ChE,OAAA;gBAAI2D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAC3BtD,KAAK,CAACuJ,yBAAyB,CAACrG,GAAG,CAAC,CAACsG,SAAS,EAAE9B,KAAK,kBACpDhI,OAAA;kBAAgB2D,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBACxC5D,OAAA;oBAAA4D,QAAA,EAASkG,SAAS,CAACrF;kBAAM;oBAAAZ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,UAAK,EAAC8F,SAAS,CAACC,KAAK,EAAC,QAAK,EAACD,SAAS,CAACjB,MAAM,EAAC,GAChF,eAAA7I,OAAA;oBAAY2D,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,GAAC,IACvC,EAACkG,SAAS,CAACjF,OAAO,EAAC,IACtB;kBAAA;oBAAAhB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACbhE,OAAA;oBAAG2D,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAEkG,SAAS,CAACnF;kBAAW;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA,GALzDgE,KAAK;kBAAAnE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMV,CACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CACN,eACDhE,OAAA;cACE2D,SAAS,EAAC,wBAAwB;cAClCqF,OAAO,EAAEA,CAAA,KAAM;gBACblH,iBAAiB,CAAC,KAAK,CAAC;gBACxBjB,oBAAoB,CAAC,EAAE,CAAC;gBACxBS,YAAY,CAAC,CAAC,CAAC;gBACf,IAAIhB,KAAK,CAACiD,yBAAyB,EAAE;kBACnC3B,gBAAgB,CAACtB,KAAK,CAACiD,yBAAyB,CAACC,GAAG,CAACC,CAAC,KAAK;oBACzD,GAAGA,CAAC;oBACJC,OAAO,EAAE;kBACX,CAAC,CAAC,CAAC,CAAC;gBACN;gBACAtC,kBAAkB,CAAC,KAAK,CAAC;cAC3B,CAAE;cAAAwC,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,gBAENhE,OAAA;YACE2D,SAAS,EAAC,0BAA0B;YACpCqF,OAAO,EAAEV,2BAA4B;YAAA1E,QAAA,EACtC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEAxD,GAAG,KAAK,MAAM,IAAIyD,QAAQ,iBACzBjE,OAAA;QAAK2D,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpC5D,OAAA;UAAA4D,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjChE,OAAA;UAAG2D,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAG/B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEJhE,OAAA;UAAK2D,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B5D,OAAA;YAAK2D,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B5D,OAAA;cAAOsJ,OAAO,EAAC,aAAa;cAAA1F,QAAA,EAAC;YAAwB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7DhE,OAAA;cACEK,EAAE,EAAC,aAAa;cAChBkJ,KAAK,EAAExH,iBAAkB;cACzByH,QAAQ,EAAGC,CAAC,IAAKzH,oBAAoB,CAACyH,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;cAAA3F,QAAA,gBAEtD5D,OAAA;gBAAQuJ,KAAK,EAAC,EAAE;gBAAA3F,QAAA,EAAC;cAAuB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAChDI,mBAAmB,CAAC,CAAC,CAACZ,GAAG,CAACiB,MAAM,iBAC/BzE,OAAA;gBAAqBuJ,KAAK,EAAE9E,MAAO;gBAAAb,QAAA,EAAEa;cAAM,GAA9BA,MAAM;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiC,CACrD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAELjC,iBAAiB,iBAChB/B,OAAA;YAAK2D,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B5D,OAAA;cAAOsJ,OAAO,EAAC,gBAAgB;cAAA1F,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzDhE,OAAA;cACEK,EAAE,EAAC,gBAAgB;cACnB2J,WAAW,EAAE,gCAAgCjI,iBAAiB,KAAM;cACpEwH,KAAK,EAAEtH,YAAa;cACpBuH,QAAQ,EAAGC,CAAC,IAAKvH,eAAe,CAACuH,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;cACjDU,IAAI,EAAE;YAAE;cAAApG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAEZhE,OAAA;cAAK2D,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B5D,OAAA;gBAAA4D,QAAA,GAAI,eAAU,EAAC7B,iBAAiB,EAAC,GAAC;cAAA;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvChE,OAAA;gBAAA4D,QAAA,EAAIW,oBAAoB,CAACxC,iBAAiB;cAAC;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChDhE,OAAA;gBAAK2D,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9B5D,OAAA;kBAAA4D,QAAA,EAAQ;gBAAuB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACxChE,OAAA;kBAAA4D,QAAA,GAAG,IAAC,EAACgB,gBAAgB,CAAC7C,iBAAiB,CAAC,EAAC,IAAC;gBAAA;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAEDhE,OAAA;YAAK2D,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B5D,OAAA;cAAOsJ,OAAO,EAAC,oBAAoB;cAAA1F,QAAA,EAAC;YAAwB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpEhE,OAAA;cACEK,EAAE,EAAC,oBAAoB;cACvB2J,WAAW,EAAC,8FAAwF;cACpGT,KAAK,EAAEpH,gBAAiB;cACxBqH,QAAQ,EAAGC,CAAC,IAAKrH,mBAAmB,CAACqH,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;cACrDU,IAAI,EAAE;YAAE;cAAApG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eAENhE,OAAA;YACE2D,SAAS,EAAC,4BAA4B;YACtCiG,QAAQ,EAAE,CAAC7H,iBAAiB,IAAI,CAACE,YAAY,IAAI,CAACE,gBAAiB;YACnE6G,OAAO,EAAElC,eAAgB;YAAAlD,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENhE,OAAA;UAAK2D,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B5D,OAAA;YAAA4D,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BhE,OAAA;YAAK2D,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB5D,OAAA;cACE2D,SAAS,EAAE,aAAatB,QAAQ,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;cAC7D2G,OAAO,EAAEA,CAAA,KAAM1G,WAAW,CAAC,KAAK,CAAE;cAAAsB,QAAA,EACnC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACThE,OAAA;cACE2D,SAAS,EAAE,aAAatB,QAAQ,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;cAChE2G,OAAO,EAAEA,CAAA,KAAM1G,WAAW,CAAC,QAAQ,CAAE;cAAAsB,QAAA,EACtC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACThE,OAAA;cACE2D,SAAS,EAAE,aAAatB,QAAQ,KAAK,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;cACpE2G,OAAO,EAAEA,CAAA,KAAM1G,WAAW,CAAC,YAAY,CAAE;cAAAsB,QAAA,EAC1C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAEL3B,QAAQ,KAAK,KAAK,iBACjBrC,OAAA;YAAK2D,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC3BrB,YAAY,CAAC4C,MAAM,GAAG,CAAC,gBACtBnF,OAAA;cAAK2D,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAC5BrB,YAAY,CAACiB,GAAG,CAAC,CAAC0G,SAAS,EAAElC,KAAK,kBACjChI,OAAA;gBAAiB2D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBACzC5D,OAAA;kBAAK2D,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,gBAC/B5D,OAAA;oBAAI2D,SAAS,EAAC,kBAAkB;oBAAAC,QAAA,EAAEsG,SAAS,CAAC1F;kBAAI;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACtDhE,OAAA;oBAAK2D,SAAS,EAAC,iBAAiB;oBAAAC,QAAA,gBAC9B5D,OAAA;sBAAM2D,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,EAAEsG,SAAS,CAAClD;oBAAI;sBAAAnD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,eACxDhE,OAAA;sBAAM2D,SAAS,EAAC,kBAAkB;sBAAAC,QAAA,gBAChC5D,OAAA;wBAAM2D,SAAS,EAAC,WAAW;wBAAAC,QAAA,EAAC;sBAAC;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,KAAC,EAACkG,SAAS,CAAC/C,MAAM,CAACgD,OAAO,CAAC,CAAC,CAAC,EAAC,IACpE;oBAAA;sBAAAtG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACNhE,OAAA;kBAAY2D,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,GAAC,IACvC,EAACsG,SAAS,CAACrF,OAAO,EAAC,IACtB;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACbhE,OAAA;kBAAG2D,SAAS,EAAC,uBAAuB;kBAAAC,QAAA,EAAEsG,SAAS,CAACvF;gBAAW;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAChEhE,OAAA;kBAAK2D,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,gBACjC5D,OAAA;oBAAA4D,QAAA,EAAI;kBAAkB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,EAC1BkG,SAAS,CAACpJ,QAAQ,CAACqE,MAAM,GAAG,CAAC,gBAC5BnF,OAAA;oBAAI2D,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAC1BsG,SAAS,CAACpJ,QAAQ,CAAC0C,GAAG,CAAC,CAAC4G,EAAE,EAAE9F,CAAC,kBAC5BtE,OAAA;sBAAY2D,SAAS,EAAC,eAAe;sBAAAC,QAAA,gBACnC5D,OAAA;wBAAK2D,SAAS,EAAC,iBAAiB;wBAAAC,QAAA,GAC7B,GAAG,CAACyG,MAAM,CAACD,EAAE,CAACjD,MAAM,CAAC,EAAE,GAAG,CAACkD,MAAM,CAAC,CAAC,GAACD,EAAE,CAACjD,MAAM,CAAC;sBAAA;wBAAAtD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC5C,CAAC,eACNhE,OAAA;wBAAG2D,SAAS,EAAC,kBAAkB;wBAAAC,QAAA,EAAEwG,EAAE,CAACE;sBAAQ;wBAAAzG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC;oBAAA,GAJ1CM,CAAC;sBAAAT,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAKN,CACL;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC,gBAELhE,OAAA;oBAAG2D,SAAS,EAAC,aAAa;oBAAAC,QAAA,EAAC;kBAAiC;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG,CAChE;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA,GA9BEgE,KAAK;gBAAAnE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA+BV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,gBAENhE,OAAA;cAAG2D,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAA4D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAC5F;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,EAEA3B,QAAQ,KAAK,QAAQ,iBACpBrC,OAAA;YAAK2D,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9BnB,mBAAmB,CAAC0C,MAAM,GAAG,CAAC,gBAC7BnF,OAAA;cAAK2D,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/B5D,OAAA;gBAAK2D,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC/B5D,OAAA;kBAAI2D,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAAEnB,mBAAmB,CAACE,iBAAiB,CAAC,CAAC6B;gBAAI;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACnFhE,OAAA;kBAAM2D,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,GAAC,KAAG,EAACnB,mBAAmB,CAACE,iBAAiB,CAAC,CAACkG,MAAM;gBAAA;kBAAAhF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzF,CAAC,eACNhE,OAAA;gBAAY2D,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,GAAC,IACvC,EAACnB,mBAAmB,CAACE,iBAAiB,CAAC,CAACkC,OAAO,EAAC,IACnD;cAAA;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbhE,OAAA;gBAAG2D,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAEnB,mBAAmB,CAACE,iBAAiB,CAAC,CAACgC;cAAW;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAE7FhE,OAAA;gBAAK2D,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC/B5D,OAAA;kBAAA4D,QAAA,EAAI;gBAAmB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC5BhE,OAAA;kBAAK2D,SAAS,EAAC,aAAa;kBAAAC,QAAA,EACzB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACJ,GAAG,CAAC+G,IAAI,iBACvBvK,OAAA;oBAEE2D,SAAS,EAAE,YAAYd,kBAAkB,IAAI0H,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;oBACpEvB,OAAO,EAAEA,CAAA,KAAMlG,qBAAqB,CAACyH,IAAI,CAAE;oBAAA3G,QAAA,EAC5C;kBAED,GALO2G,IAAI;oBAAA1G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAKH,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACNhE,OAAA;kBACEgK,WAAW,EAAC,2CAA2C;kBACvDT,KAAK,EAAExG,mBAAoB;kBAC3ByG,QAAQ,EAAGC,CAAC,IAAKzG,sBAAsB,CAACyG,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;kBACxDU,IAAI,EAAE;gBAAE;kBAAApG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACZhE,OAAA;kBAAK2D,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBAClC5D,OAAA;oBAAQ2D,SAAS,EAAC,UAAU;oBAACqF,OAAO,EAAE5B,eAAgB;oBAAAxD,QAAA,EAAC;kBAEvD;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACThE,OAAA;oBACE2D,SAAS,EAAC,0BAA0B;oBACpCiG,QAAQ,EAAE/G,kBAAkB,KAAK,CAAE;oBACnCmG,OAAO,EAAE3B,iBAAkB;oBAAAzD,QAAA,EAC5B;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAENhE,OAAA;cAAG2D,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAA8D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAC9F;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN,EAEA3B,QAAQ,KAAK,YAAY,iBACxBrC,OAAA;YAAK2D,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC5D,OAAA;cAAK2D,SAAS,EAAC,gBAAgB;cAAAC,QAAA,eAC7B5D,OAAA;gBACEuJ,KAAK,EAAEpG,gBAAiB;gBACxBqG,QAAQ,EAAGC,CAAC,IAAKrG,mBAAmB,CAACqG,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAE;gBAAA3F,QAAA,gBAErD5D,OAAA;kBAAQuJ,KAAK,EAAC,KAAK;kBAAA3F,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EAC3CI,mBAAmB,CAAC,CAAC,CAACZ,GAAG,CAACiB,MAAM,iBAC/BzE,OAAA;kBAAqBuJ,KAAK,EAAE9E,MAAO;kBAAAb,QAAA,EAAEa;gBAAM,GAA9BA,MAAM;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAiC,CACrD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,EAELf,mBAAmB,CAACkC,MAAM,GAAG,CAAC,gBAC7BnF,OAAA;cAAK2D,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAC7BX,mBAAmB,CACjBuF,MAAM,CAACgC,CAAC,IAAIrH,gBAAgB,KAAK,KAAK,IAAIqH,CAAC,CAAChG,IAAI,KAAKrB,gBAAgB,CAAC,CACtEK,GAAG,CAAC,CAAC0G,SAAS,EAAElC,KAAK,kBACpBhI,OAAA;gBAAiB2D,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC1C5D,OAAA;kBAAK2D,SAAS,EAAC,WAAW;kBAAAC,QAAA,GAAC,GAAC,EAACoE,KAAK,GAAG,CAAC;gBAAA;kBAAAnE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC7ChE,OAAA;kBAAK2D,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,gBACjC5D,OAAA;oBAAK2D,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,gBAChC5D,OAAA;sBAAA4D,QAAA,EAAKsG,SAAS,CAAC1F;oBAAI;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACzBhE,OAAA;sBAAK2D,SAAS,EAAC,mBAAmB;sBAAAC,QAAA,gBAChC5D,OAAA;wBAAM2D,SAAS,EAAC,WAAW;wBAAAC,QAAA,EAAC;sBAAC;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,KAAC,EAACkG,SAAS,CAAC/C,MAAM,CAACgD,OAAO,CAAC,CAAC,CAAC;oBAAA;sBAAAtG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9D,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACNhE,OAAA;oBAAA4D,QAAA,GAAY,IAAC,EAACsG,SAAS,CAACrF,OAAO,EAAC,IAAC;kBAAA;oBAAAhB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eAC9ChE,OAAA;oBAAK2D,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,GAAC,KAAG,EAACsG,SAAS,CAACrB,MAAM;kBAAA;oBAAAhF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3D,CAAC;cAAA,GAXEgE,KAAK;gBAAAnE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,gBAENhE,OAAA;cAAG2D,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAiE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACjG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEAxD,GAAG,KAAK,UAAU,iBACjBR,OAAA;QAAK2D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B5D,OAAA;UAAA4D,QAAA,EAAI;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjChE,OAAA;UAAK2D,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB5D,OAAA;YAAG2D,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAEjC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJhE,OAAA;YACE2D,SAAS,EAAC,oBAAoB;YAC9BqG,WAAW,EAAC,+BAA+B;YAC3CC,IAAI,EAAE;UAAE;YAAApG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhE,OAAA;UAAK2D,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB5D,OAAA;YAAG2D,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC7BK,QAAQ,GACL,kDAAkD,GAClD;UAAoE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC,eACJhE,OAAA;YACE2D,SAAS,EAAC,oBAAoB;YAC9BqG,WAAW,EAAC,+BAA+B;YAC3CC,IAAI,EAAE;UAAE;YAAApG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhE,OAAA;UAAQ2D,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5D,EAAA,CA11BID,eAAe;EAAA,QACJP,SAAS;AAAA;AAAA6K,EAAA,GADpBtK,eAAe;AA41BrB,eAAeA,eAAe;AAAC,IAAAsK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}