{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\lingua-kai-platform - restructured\\\\src\\\\components\\\\components\\\\PergamenaSigillata\\\\PergamenaSigillata.jsx\",\n  _s = $RefreshSig$();\n// src/components/PergamenaSigillata/PergamenaSigillata.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PergamenaSigillaStyle.css';\n\n// Definizione dei sigilli e dei loro requisiti\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sigilliConfig = [{\n  id: 'parola',\n  nome: 'Sigillo della Parola',\n  descrizione: 'Dimostra la tua capacità di lettura e comprensione',\n  requisito: 'Completa almeno 3 esercizi di lettura con un punteggio > 80%',\n  icon: '📖',\n  requisitoValoreTarget: 3,\n  categoria: 'lettura'\n}, {\n  id: 'penna',\n  nome: 'Sigillo della Penna',\n  descrizione: 'Padroneggia l\\'arte della scrittura',\n  requisito: 'Completa almeno 3 esercizi di scrittura valutati positivamente',\n  icon: '✍️',\n  requisitoValoreTarget: 3,\n  categoria: 'scrittura'\n}, {\n  id: 'segni',\n  nome: 'Sigillo dei Segni',\n  descrizione: 'Impara il potere della punteggiatura',\n  requisito: 'Completa con successo almeno 2 esercizi di punteggiatura avanzati',\n  icon: '✒️',\n  requisitoValoreTarget: 2,\n  categoria: 'punteggiatura'\n}, {\n  id: 'voci',\n  nome: 'Sigillo delle Voci',\n  descrizione: 'Dimostra versatilità nei registri linguistici',\n  requisito: 'Usa correttamente almeno 3 diversi registri linguistici',\n  icon: '🗣️',\n  requisitoValoreTarget: 3,\n  categoria: 'registri'\n}, {\n  id: 'torneo',\n  nome: 'Sigillo del Torneo',\n  descrizione: 'Metti alla prova le tue abilità in competizione',\n  requisito: 'Partecipa ad almeno 1 torneo completo',\n  icon: '🏆',\n  requisitoValoreTarget: 1,\n  categoria: 'torneo'\n}, {\n  id: 'conoscenza',\n  nome: 'Sigillo della Conoscenza',\n  descrizione: 'Condividi il sapere con i tuoi compagni',\n  requisito: 'Aiuta almeno 2 compagni nel Dojo della Conoscenza',\n  icon: '🥋',\n  requisitoValoreTarget: 2,\n  categoria: 'dojo'\n}, {\n  id: 'maestro',\n  nome: 'Sigillo del Maestro',\n  descrizione: 'Raggiungi un livello adeguato di maestria',\n  requisito: 'Raggiungi almeno la cintura arancione',\n  icon: '👤',\n  requisitoValoreTarget: 'arancione',\n  categoria: 'livello'\n}];\n\n// Stati possibili di un sigillo\nconst STATO_SIGILLO = {\n  INTATTO: 'intatto',\n  INCRINATO: 'incrinato',\n  ROTTO: 'rotto'\n};\nconst PergamenaSigillata = ({\n  userProfile,\n  onAccessoCompletato\n}) => {\n  _s();\n  const [sigilliStato, setSigilliStato] = useState({});\n  const [animazioneAttiva, setAnimazioneAttiva] = useState(false);\n  const [sbloccoCompletato, setSbloccoCompletato] = useState(false);\n  const [tooltipVisibile, setTooltipVisibile] = useState(null);\n  const [messaggioIncoraggiamento, setMessaggioIncoraggiamento] = useState(null);\n  const [pergamenaAperta, setPergamenaAperta] = useState(false);\n\n  // Determina lo stato di ogni sigillo in base ai progressi dello studente\n  useEffect(() => {\n    if (!userProfile) return;\n    const statoSigilli = {};\n\n    // Ottieni lo stato salvato dei sigilli (se esiste)\n    const sigilliSalvati = userProfile.sigilliLetteratura || {};\n    sigilliConfig.forEach(sigillo => {\n      // Se lo stato è già salvato, usalo\n      if (sigilliSalvati[sigillo.id]) {\n        statoSigilli[sigillo.id] = sigilliSalvati[sigillo.id];\n        return;\n      }\n\n      // Altrimenti calcola lo stato in base ai progressi dell'utente\n      const progressoAttuale = calcolaProgressoSigillo(sigillo, userProfile);\n      const percentualeCompletamento = progressoAttuale / sigillo.requisitoValoreTarget * 100;\n      if (percentualeCompletamento >= 100) {\n        statoSigilli[sigillo.id] = {\n          stato: STATO_SIGILLO.ROTTO,\n          progresso: 100\n        };\n      } else if (percentualeCompletamento >= 50) {\n        statoSigilli[sigillo.id] = {\n          stato: STATO_SIGILLO.INCRINATO,\n          progresso: percentualeCompletamento\n        };\n      } else {\n        statoSigilli[sigillo.id] = {\n          stato: STATO_SIGILLO.INTATTO,\n          progresso: percentualeCompletamento\n        };\n      }\n    });\n    setSigilliStato(statoSigilli);\n\n    // Verifica se tutti i sigilli sono rotti\n    const tuttiRotti = Object.values(statoSigilli).every(sigillo => sigillo.stato === STATO_SIGILLO.ROTTO);\n\n    // Se l'accesso è già stato completato, impostiamo lo stato\n    if (userProfile.accessoLetteraturaCompletato || tuttiRotti) {\n      setSbloccoCompletato(true);\n    }\n  }, [userProfile]);\n\n  // Calcola il progresso per un sigillo specifico\n  const calcolaProgressoSigillo = (sigillo, profilo) => {\n    var _profilo$letturaEserc, _profilo$letturaEserc2, _profilo$scritturaEse, _profilo$scritturaEse2, _profilo$punteggiatur, _profilo$registriUsat, _profilo$torneiComple, _profilo$studentiAiut;\n    if (!profilo) return 0;\n    switch (sigillo.categoria) {\n      case 'lettura':\n        return ((_profilo$letturaEserc = profilo.letturaEserciziCompletati) === null || _profilo$letturaEserc === void 0 ? void 0 : (_profilo$letturaEserc2 = _profilo$letturaEserc.filter(e => e.punteggio > 80)) === null || _profilo$letturaEserc2 === void 0 ? void 0 : _profilo$letturaEserc2.length) || 0;\n      case 'scrittura':\n        return ((_profilo$scritturaEse = profilo.scritturaEserciziCompletati) === null || _profilo$scritturaEse === void 0 ? void 0 : (_profilo$scritturaEse2 = _profilo$scritturaEse.filter(e => e.valutazionePositiva)) === null || _profilo$scritturaEse2 === void 0 ? void 0 : _profilo$scritturaEse2.length) || 0;\n      case 'punteggiatura':\n        return ((_profilo$punteggiatur = profilo.punteggiaturaEserciziAvanzatiCompletati) === null || _profilo$punteggiatur === void 0 ? void 0 : _profilo$punteggiatur.length) || 0;\n      case 'registri':\n        return ((_profilo$registriUsat = profilo.registriUsatiCorrettamente) === null || _profilo$registriUsat === void 0 ? void 0 : _profilo$registriUsat.length) || 0;\n      case 'torneo':\n        return ((_profilo$torneiComple = profilo.torneiCompletati) === null || _profilo$torneiComple === void 0 ? void 0 : _profilo$torneiComple.length) || 0;\n      case 'dojo':\n        return ((_profilo$studentiAiut = profilo.studentiAiutati) === null || _profilo$studentiAiut === void 0 ? void 0 : _profilo$studentiAiut.length) || 0;\n      case 'livello':\n        // Mappa le cinture a valori numerici\n        const livelloCinture = {\n          'bianca': 1,\n          'gialla': 2,\n          'arancione': 3,\n          'verde': 4,\n          'blu': 5,\n          'marrone': 6,\n          'nera': 7\n        };\n        const livelloAttualeValore = livelloCinture[profilo.livello] || 0;\n        const livelloRichiestoValore = livelloCinture['arancione'];\n        return livelloAttualeValore >= livelloRichiestoValore ? 1 : 0;\n      default:\n        return 0;\n    }\n  };\n\n  // Avvia l'animazione di sblocco\n  const avviaCerimoniaDisigillazione = () => {\n    setAnimazioneAttiva(true);\n\n    // Sequenza di animazione\n    setTimeout(() => {\n      setPergamenaAperta(true);\n\n      // Dopo che la pergamena si è aperta, mostriamo l'effetto finale\n      setTimeout(() => {\n        setSbloccoCompletato(true);\n\n        // Notifica il componente genitore che lo sblocco è stato completato\n        if (onAccessoCompletato) {\n          onAccessoCompletato();\n        }\n      }, 3000);\n    }, 2000);\n  };\n\n  // Mostra il tooltip per un sigillo\n  const mostraTooltip = sigilloId => {\n    setTooltipVisibile(sigilloId);\n  };\n\n  // Nasconde il tooltip\n  const nascondiTooltip = () => {\n    setTooltipVisibile(null);\n  };\n\n  // Mostra un messaggio di incoraggiamento\n  const mostraIncoraggiamento = messaggio => {\n    setMessaggioIncoraggiamento(messaggio);\n\n    // Nascondi dopo alcuni secondi\n    setTimeout(() => {\n      setMessaggioIncoraggiamento(null);\n    }, 3000);\n  };\n\n  // Gestisce il click su un sigillo\n  const handleSigilloClick = sigillo => {\n    const statoSigillo = sigilliStato[sigillo.id];\n    if (statoSigillo.stato === STATO_SIGILLO.INTATTO) {\n      mostraIncoraggiamento(`Continua ad allenarti per rompere il ${sigillo.nome}!`);\n    } else if (statoSigillo.stato === STATO_SIGILLO.INCRINATO) {\n      mostraIncoraggiamento(`Sei vicino a rompere il ${sigillo.nome}! Manca poco!`);\n    } else {\n      mostraIncoraggiamento(`Hai già rotto il ${sigillo.nome}! Continua con gli altri sigilli.`);\n    }\n  };\n\n  // Calcola quanti sigilli sono già rotti\n  const calcolaSigilliRotti = () => {\n    return Object.values(sigilliStato).filter(sigillo => sigillo.stato === STATO_SIGILLO.ROTTO).length;\n  };\n\n  // Render condizionale in base allo stato di sblocco\n  if (sbloccoCompletato) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pergamena-completata\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pergamena-open\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"La Biblioteca dei Maestri \\xE8 Aperta!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"messaggio-sblocco\",\n          children: [\"Ben trovato, giovane studioso.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 48\n          }, this), \"Hai dimostrato padronanza nelle arti fondamentali della lingua, rompendo i sette sigilli che proteggevano questa conoscenza antica. La letteratura non \\xE8 solo un insieme di testi da studiare, ma l'eredit\\xE0 spirituale di chi ha dato forma ai pensieri pi\\xF9 profondi attraverso le parole.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 39\n          }, this), \"In questa Biblioteca troverai le voci dei Grandi Maestri che hanno forgiato la nostra lingua. Potrai non solo leggere le loro opere, ma anche scoprire i segreti della loro arte, decifrare le figure retoriche e persino cimentarti nella creazione di tue opere ispirate ai loro insegnamenti.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 48\n          }, this), \"Il cammino del vero Maestro della Lingua non termina mai. Benvenuto nel prossimo capitolo del tuo viaggio.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/letteratura\",\n          className: \"button-accesso\",\n          children: \"Accedi alla Biblioteca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Durante l'animazione di sblocco\n  if (animazioneAttiva) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `pergamena-disigillazione ${pergamenaAperta ? 'aperta' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pergamena-scroll\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"luceDorata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testo-rivelazione\",\n          children: \"I segreti dell'arte letteraria si rivelano a te, studente meritevole.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Visualizzazione normale della pergamena con i sigilli\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pergamena-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"La Pergamena Sigillata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pergamena-descrizione\",\n      children: \"Questa antica pergamena custodisce i segreti della letteratura. Per sbloccarla, devi rompere tutti e sette i sigilli dimostrando la tua padronanza nelle diverse aree della lingua.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sigilli-progresso\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sigilli-contatore\",\n        children: [calcolaSigilliRotti(), \" / 7 sigilli rotti\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progresso-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progresso-fill\",\n          style: {\n            width: `${calcolaSigilliRotti() / 7 * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pergamena-scroll\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sigilli-container\",\n        children: sigilliConfig.map(sigillo => {\n          const statoSigillo = sigilliStato[sigillo.id] || {\n            stato: STATO_SIGILLO.INTATTO,\n            progresso: 0\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sigillo-item sigillo-${statoSigillo.stato}`,\n            onClick: () => handleSigilloClick(sigillo),\n            onMouseEnter: () => mostraTooltip(sigillo.id),\n            onMouseLeave: nascondiTooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sigillo-icon\",\n              children: sigillo.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sigillo-nome\",\n              children: sigillo.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sigillo-progresso\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sigillo-progresso-fill\",\n                style: {\n                  width: `${statoSigillo.progresso}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), tooltipVisibile === sigillo.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sigillo-tooltip\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: sigillo.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: sigillo.descrizione\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"requisito\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Requisito:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this), \" \", sigillo.requisito]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tooltip-progresso\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Progresso: \", Math.round(statoSigillo.progresso), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), statoSigillo.stato === STATO_SIGILLO.ROTTO && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sigillo-completato\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this)]\n          }, sigillo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), messaggioIncoraggiamento && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messaggio-incoraggiamento\",\n      children: messaggioIncoraggiamento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this), calcolaSigilliRotti() === 7 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-cerimonia\",\n      onClick: avviaCerimoniaDisigillazione,\n      children: \"Apri la Pergamena\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(PergamenaSigillata, \"ZbWfKaScRZagdwR+bFq9+LS/AOs=\");\n_c = PergamenaSigillata;\nexport default PergamenaSigillata;\nvar _c;\n$RefreshReg$(_c, \"PergamenaSigillata\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","sigilliConfig","id","nome","descrizione","requisito","icon","requisitoValoreTarget","categoria","STATO_SIGILLO","INTATTO","INCRINATO","ROTTO","PergamenaSigillata","userProfile","onAccessoCompletato","_s","sigilliStato","setSigilliStato","animazioneAttiva","setAnimazioneAttiva","sbloccoCompletato","setSbloccoCompletato","tooltipVisibile","setTooltipVisibile","messaggioIncoraggiamento","setMessaggioIncoraggiamento","pergamenaAperta","setPergamenaAperta","statoSigilli","sigilliSalvati","sigilliLetteratura","forEach","sigillo","progressoAttuale","calcolaProgressoSigillo","percentualeCompletamento","stato","progresso","tuttiRotti","Object","values","every","accessoLetteraturaCompletato","profilo","_profilo$letturaEserc","_profilo$letturaEserc2","_profilo$scritturaEse","_profilo$scritturaEse2","_profilo$punteggiatur","_profilo$registriUsat","_profilo$torneiComple","_profilo$studentiAiut","letturaEserciziCompletati","filter","e","punteggio","length","scritturaEserciziCompletati","valutazionePositiva","punteggiaturaEserciziAvanzatiCompletati","registriUsatiCorrettamente","torneiCompletati","studentiAiutati","livelloCinture","livelloAttualeValore","livello","livelloRichiestoValore","avviaCerimoniaDisigillazione","setTimeout","mostraTooltip","sigilloId","nascondiTooltip","mostraIncoraggiamento","messaggio","handleSigilloClick","statoSigillo","calcolaSigilliRotti","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","style","width","map","onClick","onMouseEnter","onMouseLeave","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/components/components/PergamenaSigillata/PergamenaSigillata.jsx"],"sourcesContent":["// src/components/PergamenaSigillata/PergamenaSigillata.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './PergamenaSigillaStyle.css';\r\n\r\n// Definizione dei sigilli e dei loro requisiti\r\nconst sigilliConfig = [\r\n  {\r\n    id: 'parola',\r\n    nome: 'Sigillo della Parola',\r\n    descrizione: 'Dimostra la tua capacità di lettura e comprensione',\r\n    requisito: 'Completa almeno 3 esercizi di lettura con un punteggio > 80%',\r\n    icon: '📖',\r\n    requisitoValoreTarget: 3,\r\n    categoria: 'lettura',\r\n  },\r\n  {\r\n    id: 'penna',\r\n    nome: 'Sigillo della Penna',\r\n    descrizione: 'Padroneggia l\\'arte della scrittura',\r\n    requisito: 'Completa almeno 3 esercizi di scrittura valutati positivamente',\r\n    icon: '✍️',\r\n    requisitoValoreTarget: 3,\r\n    categoria: 'scrittura',\r\n  },\r\n  {\r\n    id: 'segni',\r\n    nome: 'Sigillo dei Segni',\r\n    descrizione: 'Impara il potere della punteggiatura',\r\n    requisito: 'Completa con successo almeno 2 esercizi di punteggiatura avanzati',\r\n    icon: '✒️',\r\n    requisitoValoreTarget: 2,\r\n    categoria: 'punteggiatura',\r\n  },\r\n  {\r\n    id: 'voci',\r\n    nome: 'Sigillo delle Voci',\r\n    descrizione: 'Dimostra versatilità nei registri linguistici',\r\n    requisito: 'Usa correttamente almeno 3 diversi registri linguistici',\r\n    icon: '🗣️',\r\n    requisitoValoreTarget: 3,\r\n    categoria: 'registri',\r\n  },\r\n  {\r\n    id: 'torneo',\r\n    nome: 'Sigillo del Torneo',\r\n    descrizione: 'Metti alla prova le tue abilità in competizione',\r\n    requisito: 'Partecipa ad almeno 1 torneo completo',\r\n    icon: '🏆',\r\n    requisitoValoreTarget: 1,\r\n    categoria: 'torneo',\r\n  },\r\n  {\r\n    id: 'conoscenza',\r\n    nome: 'Sigillo della Conoscenza',\r\n    descrizione: 'Condividi il sapere con i tuoi compagni',\r\n    requisito: 'Aiuta almeno 2 compagni nel Dojo della Conoscenza',\r\n    icon: '🥋',\r\n    requisitoValoreTarget: 2,\r\n    categoria: 'dojo',\r\n  },\r\n  {\r\n    id: 'maestro',\r\n    nome: 'Sigillo del Maestro',\r\n    descrizione: 'Raggiungi un livello adeguato di maestria',\r\n    requisito: 'Raggiungi almeno la cintura arancione',\r\n    icon: '👤',\r\n    requisitoValoreTarget: 'arancione',\r\n    categoria: 'livello',\r\n  }\r\n];\r\n\r\n// Stati possibili di un sigillo\r\nconst STATO_SIGILLO = {\r\n  INTATTO: 'intatto',\r\n  INCRINATO: 'incrinato',\r\n  ROTTO: 'rotto'\r\n};\r\n\r\nconst PergamenaSigillata = ({ userProfile, onAccessoCompletato }) => {\r\n  const [sigilliStato, setSigilliStato] = useState({});\r\n  const [animazioneAttiva, setAnimazioneAttiva] = useState(false);\r\n  const [sbloccoCompletato, setSbloccoCompletato] = useState(false);\r\n  const [tooltipVisibile, setTooltipVisibile] = useState(null);\r\n  const [messaggioIncoraggiamento, setMessaggioIncoraggiamento] = useState(null);\r\n  const [pergamenaAperta, setPergamenaAperta] = useState(false);\r\n  \r\n  // Determina lo stato di ogni sigillo in base ai progressi dello studente\r\n  useEffect(() => {\r\n    if (!userProfile) return;\r\n    \r\n    const statoSigilli = {};\r\n    \r\n    // Ottieni lo stato salvato dei sigilli (se esiste)\r\n    const sigilliSalvati = userProfile.sigilliLetteratura || {};\r\n    \r\n    sigilliConfig.forEach(sigillo => {\r\n      // Se lo stato è già salvato, usalo\r\n      if (sigilliSalvati[sigillo.id]) {\r\n        statoSigilli[sigillo.id] = sigilliSalvati[sigillo.id];\r\n        return;\r\n      }\r\n      \r\n      // Altrimenti calcola lo stato in base ai progressi dell'utente\r\n      const progressoAttuale = calcolaProgressoSigillo(sigillo, userProfile);\r\n      const percentualeCompletamento = (progressoAttuale / sigillo.requisitoValoreTarget) * 100;\r\n      \r\n      if (percentualeCompletamento >= 100) {\r\n        statoSigilli[sigillo.id] = { stato: STATO_SIGILLO.ROTTO, progresso: 100 };\r\n      } else if (percentualeCompletamento >= 50) {\r\n        statoSigilli[sigillo.id] = { stato: STATO_SIGILLO.INCRINATO, progresso: percentualeCompletamento };\r\n      } else {\r\n        statoSigilli[sigillo.id] = { stato: STATO_SIGILLO.INTATTO, progresso: percentualeCompletamento };\r\n      }\r\n    });\r\n    \r\n    setSigilliStato(statoSigilli);\r\n    \r\n    // Verifica se tutti i sigilli sono rotti\r\n    const tuttiRotti = Object.values(statoSigilli).every(\r\n      sigillo => sigillo.stato === STATO_SIGILLO.ROTTO\r\n    );\r\n    \r\n    // Se l'accesso è già stato completato, impostiamo lo stato\r\n    if (userProfile.accessoLetteraturaCompletato || tuttiRotti) {\r\n      setSbloccoCompletato(true);\r\n    }\r\n  }, [userProfile]);\r\n  \r\n  // Calcola il progresso per un sigillo specifico\r\n  const calcolaProgressoSigillo = (sigillo, profilo) => {\r\n    if (!profilo) return 0;\r\n    \r\n    switch (sigillo.categoria) {\r\n      case 'lettura':\r\n        return profilo.letturaEserciziCompletati?.filter(e => e.punteggio > 80)?.length || 0;\r\n      case 'scrittura':\r\n        return profilo.scritturaEserciziCompletati?.filter(e => e.valutazionePositiva)?.length || 0;\r\n      case 'punteggiatura':\r\n        return profilo.punteggiaturaEserciziAvanzatiCompletati?.length || 0;\r\n      case 'registri':\r\n        return profilo.registriUsatiCorrettamente?.length || 0;\r\n      case 'torneo':\r\n        return profilo.torneiCompletati?.length || 0;\r\n      case 'dojo':\r\n        return profilo.studentiAiutati?.length || 0;\r\n      case 'livello':\r\n        // Mappa le cinture a valori numerici\r\n        const livelloCinture = {\r\n          'bianca': 1,\r\n          'gialla': 2,\r\n          'arancione': 3,\r\n          'verde': 4,\r\n          'blu': 5,\r\n          'marrone': 6,\r\n          'nera': 7\r\n        };\r\n        const livelloAttualeValore = livelloCinture[profilo.livello] || 0;\r\n        const livelloRichiestoValore = livelloCinture['arancione'];\r\n        return livelloAttualeValore >= livelloRichiestoValore ? 1 : 0;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n  \r\n  // Avvia l'animazione di sblocco\r\n  const avviaCerimoniaDisigillazione = () => {\r\n    setAnimazioneAttiva(true);\r\n    \r\n    // Sequenza di animazione\r\n    setTimeout(() => {\r\n      setPergamenaAperta(true);\r\n      \r\n      // Dopo che la pergamena si è aperta, mostriamo l'effetto finale\r\n      setTimeout(() => {\r\n        setSbloccoCompletato(true);\r\n        \r\n        // Notifica il componente genitore che lo sblocco è stato completato\r\n        if (onAccessoCompletato) {\r\n          onAccessoCompletato();\r\n        }\r\n      }, 3000);\r\n    }, 2000);\r\n  };\r\n  \r\n  // Mostra il tooltip per un sigillo\r\n  const mostraTooltip = (sigilloId) => {\r\n    setTooltipVisibile(sigilloId);\r\n  };\r\n  \r\n  // Nasconde il tooltip\r\n  const nascondiTooltip = () => {\r\n    setTooltipVisibile(null);\r\n  };\r\n  \r\n  // Mostra un messaggio di incoraggiamento\r\n  const mostraIncoraggiamento = (messaggio) => {\r\n    setMessaggioIncoraggiamento(messaggio);\r\n    \r\n    // Nascondi dopo alcuni secondi\r\n    setTimeout(() => {\r\n      setMessaggioIncoraggiamento(null);\r\n    }, 3000);\r\n  };\r\n  \r\n  // Gestisce il click su un sigillo\r\n  const handleSigilloClick = (sigillo) => {\r\n    const statoSigillo = sigilliStato[sigillo.id];\r\n    \r\n    if (statoSigillo.stato === STATO_SIGILLO.INTATTO) {\r\n      mostraIncoraggiamento(`Continua ad allenarti per rompere il ${sigillo.nome}!`);\r\n    } else if (statoSigillo.stato === STATO_SIGILLO.INCRINATO) {\r\n      mostraIncoraggiamento(`Sei vicino a rompere il ${sigillo.nome}! Manca poco!`);\r\n    } else {\r\n      mostraIncoraggiamento(`Hai già rotto il ${sigillo.nome}! Continua con gli altri sigilli.`);\r\n    }\r\n  };\r\n  \r\n  // Calcola quanti sigilli sono già rotti\r\n  const calcolaSigilliRotti = () => {\r\n    return Object.values(sigilliStato).filter(\r\n      sigillo => sigillo.stato === STATO_SIGILLO.ROTTO\r\n    ).length;\r\n  };\r\n  \r\n  // Render condizionale in base allo stato di sblocco\r\n  if (sbloccoCompletato) {\r\n    return (\r\n      <div className=\"pergamena-completata\">\r\n        <div className=\"pergamena-open\">\r\n          <h2>La Biblioteca dei Maestri è Aperta!</h2>\r\n          <p className=\"messaggio-sblocco\">\r\n            Ben trovato, giovane studioso.<br/><br/>\r\n            \r\n            Hai dimostrato padronanza nelle arti fondamentali della lingua, rompendo i sette sigilli \r\n            che proteggevano questa conoscenza antica. La letteratura non è solo un insieme di testi \r\n            da studiare, ma l'eredità spirituale di chi ha dato forma ai pensieri più profondi \r\n            attraverso le parole.<br/><br/>\r\n            \r\n            In questa Biblioteca troverai le voci dei Grandi Maestri che hanno forgiato la nostra \r\n            lingua. Potrai non solo leggere le loro opere, ma anche scoprire i segreti della loro \r\n            arte, decifrare le figure retoriche e persino cimentarti nella creazione di tue opere \r\n            ispirate ai loro insegnamenti.<br/><br/>\r\n            \r\n            Il cammino del vero Maestro della Lingua non termina mai. Benvenuto nel prossimo \r\n            capitolo del tuo viaggio.\r\n          </p>\r\n          <Link to=\"/letteratura\" className=\"button-accesso\">\r\n            Accedi alla Biblioteca\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Durante l'animazione di sblocco\r\n  if (animazioneAttiva) {\r\n    return (\r\n      <div className={`pergamena-disigillazione ${pergamenaAperta ? 'aperta' : ''}`}>\r\n        <div className=\"pergamena-scroll\">\r\n          <div className=\"luceDorata\"></div>\r\n          <div className=\"testo-rivelazione\">\r\n            I segreti dell'arte letteraria si rivelano a te, studente meritevole.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Visualizzazione normale della pergamena con i sigilli\r\n  return (\r\n    <div className=\"pergamena-container\">\r\n      <h2>La Pergamena Sigillata</h2>\r\n      <p className=\"pergamena-descrizione\">\r\n        Questa antica pergamena custodisce i segreti della letteratura. \r\n        Per sbloccarla, devi rompere tutti e sette i sigilli dimostrando \r\n        la tua padronanza nelle diverse aree della lingua.\r\n      </p>\r\n      \r\n      <div className=\"sigilli-progresso\">\r\n        <span className=\"sigilli-contatore\">\r\n          {calcolaSigilliRotti()} / 7 sigilli rotti\r\n        </span>\r\n        <div className=\"progresso-bar\">\r\n          <div \r\n            className=\"progresso-fill\" \r\n            style={{ width: `${(calcolaSigilliRotti() / 7) * 100}%` }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"pergamena-scroll\">\r\n        <div className=\"sigilli-container\">\r\n          {sigilliConfig.map((sigillo) => {\r\n            const statoSigillo = sigilliStato[sigillo.id] || { stato: STATO_SIGILLO.INTATTO, progresso: 0 };\r\n            \r\n            return (\r\n              <div \r\n                key={sigillo.id}\r\n                className={`sigillo-item sigillo-${statoSigillo.stato}`}\r\n                onClick={() => handleSigilloClick(sigillo)}\r\n                onMouseEnter={() => mostraTooltip(sigillo.id)}\r\n                onMouseLeave={nascondiTooltip}\r\n              >\r\n                <div className=\"sigillo-icon\">{sigillo.icon}</div>\r\n                <div className=\"sigillo-nome\">{sigillo.nome}</div>\r\n                <div className=\"sigillo-progresso\">\r\n                  <div \r\n                    className=\"sigillo-progresso-fill\"\r\n                    style={{ width: `${statoSigillo.progresso}%` }}\r\n                  ></div>\r\n                </div>\r\n                \r\n                {tooltipVisibile === sigillo.id && (\r\n                  <div className=\"sigillo-tooltip\">\r\n                    <h4>{sigillo.nome}</h4>\r\n                    <p>{sigillo.descrizione}</p>\r\n                    <p className=\"requisito\">\r\n                      <strong>Requisito:</strong> {sigillo.requisito}\r\n                    </p>\r\n                    <div className=\"tooltip-progresso\">\r\n                      <span>Progresso: {Math.round(statoSigillo.progresso)}%</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {statoSigillo.stato === STATO_SIGILLO.ROTTO && (\r\n                  <div className=\"sigillo-completato\">✓</div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      \r\n      {messaggioIncoraggiamento && (\r\n        <div className=\"messaggio-incoraggiamento\">\r\n          {messaggioIncoraggiamento}\r\n        </div>\r\n      )}\r\n      \r\n      {calcolaSigilliRotti() === 7 && (\r\n        <button \r\n          className=\"button-cerimonia\" \r\n          onClick={avviaCerimoniaDisigillazione}\r\n        >\r\n          Apri la Pergamena\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PergamenaSigillata;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}