{"ast":null,"code":"import api from './api';\n\n/**\r\n * Servizio per le interazioni con l'AI\r\n */\nconst aiService = {\n  /**\r\n   * Valuta la risposta dell'utente a un testo\r\n   * @param {string} text - Testo originale\r\n   * @param {string} userResponse - Risposta dell'utente\r\n   * @param {string} type - Tipo di valutazione ('reading', 'writing', 'onboarding')\r\n   * @returns {Promise<Object>} Risultato della valutazione\r\n   */\n  evaluateResponse: async (text, userResponse, type) => {\n    return api.post('ai/evaluate', {\n      text,\n      userResponse,\n      type\n    });\n  },\n  /**\r\n   * Ottiene suggerimenti personalizzati per l'apprendimento\r\n   * @param {string} level - Livello dell'utente (A1, A2, B1, etc.)\r\n   * @param {Array} [interests] - Interessi dell'utente (opzionale)\r\n   * @param {Array} [learningHistory] - Storico dell'apprendimento (opzionale)\r\n   * @returns {Promise<Object>} Suggerimenti\r\n   */\n  getSuggestions: async (level, interests = [], learningHistory = []) => {\n    return api.post('ai/suggest', {\n      level,\n      interests,\n      learningHistory\n    });\n  },\n  /**\r\n   * Valuta il test di livello iniziale\r\n   * @param {Array|string} responses - Risposte dell'utente al test\r\n   * @returns {Promise<Object>} Livello valutato e feedback\r\n   */\n  evaluateOnboarding: async responses => {\n    return api.post('ai/evaluate', {\n      userResponse: responses,\n      type: 'onboarding'\n    });\n  }\n};\nexport default aiService;","map":{"version":3,"names":["api","aiService","evaluateResponse","text","userResponse","type","post","getSuggestions","level","interests","learningHistory","evaluateOnboarding","responses"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/services/aiService.js"],"sourcesContent":["import api from './api';\r\n\r\n/**\r\n * Servizio per le interazioni con l'AI\r\n */\r\nconst aiService = {\r\n  /**\r\n   * Valuta la risposta dell'utente a un testo\r\n   * @param {string} text - Testo originale\r\n   * @param {string} userResponse - Risposta dell'utente\r\n   * @param {string} type - Tipo di valutazione ('reading', 'writing', 'onboarding')\r\n   * @returns {Promise<Object>} Risultato della valutazione\r\n   */\r\n  evaluateResponse: async (text, userResponse, type) => {\r\n    return api.post('ai/evaluate', {\r\n      text,\r\n      userResponse,\r\n      type\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Ottiene suggerimenti personalizzati per l'apprendimento\r\n   * @param {string} level - Livello dell'utente (A1, A2, B1, etc.)\r\n   * @param {Array} [interests] - Interessi dell'utente (opzionale)\r\n   * @param {Array} [learningHistory] - Storico dell'apprendimento (opzionale)\r\n   * @returns {Promise<Object>} Suggerimenti\r\n   */\r\n  getSuggestions: async (level, interests = [], learningHistory = []) => {\r\n    return api.post('ai/suggest', {\r\n      level,\r\n      interests,\r\n      learningHistory\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Valuta il test di livello iniziale\r\n   * @param {Array|string} responses - Risposte dell'utente al test\r\n   * @returns {Promise<Object>} Livello valutato e feedback\r\n   */\r\n  evaluateOnboarding: async (responses) => {\r\n    return api.post('ai/evaluate', {\r\n      userResponse: responses,\r\n      type: 'onboarding'\r\n    });\r\n  }\r\n};\r\n\r\nexport default aiService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA;AACA;AACA,MAAMC,SAAS,GAAG;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,gBAAgB,EAAE,MAAAA,CAAOC,IAAI,EAAEC,YAAY,EAAEC,IAAI,KAAK;IACpD,OAAOL,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;MAC7BH,IAAI;MACJC,YAAY;MACZC;IACF,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,cAAc,EAAE,MAAAA,CAAOC,KAAK,EAAEC,SAAS,GAAG,EAAE,EAAEC,eAAe,GAAG,EAAE,KAAK;IACrE,OAAOV,GAAG,CAACM,IAAI,CAAC,YAAY,EAAE;MAC5BE,KAAK;MACLC,SAAS;MACTC;IACF,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;AACA;AACA;EACEC,kBAAkB,EAAE,MAAOC,SAAS,IAAK;IACvC,OAAOZ,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;MAC7BF,YAAY,EAAEQ,SAAS;MACvBP,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAeJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}