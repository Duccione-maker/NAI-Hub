{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\lingua-kai-platform - restructured\\\\src\\\\components\\\\components\\\\Letteratura\\\\Letteratura.jsx\",\n  _s = $RefreshSig$();\n// src/components/Letteratura/Letteratura.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTestiPerLivello } from '../../data/letteraturaDatabase';\n// Modifica il percorso di importazione di BeltDisplay in base alla tua struttura di progetto\nimport BeltDisplay from '../common/BeltDisplay/BeltDisplay';\nimport './LetteraturaStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Letteratura = ({\n  userProfile\n}) => {\n  _s();\n  const [testiDisponibili, setTestiDisponibili] = useState({\n    prosa: [],\n    poesia: []\n  });\n  const [categoriaAttiva, setCategoriaAttiva] = useState('prosa');\n  const navigate = useNavigate();\n\n  // Calcola livello studente basato sul sistema delle cinture karate\n  const studentLevel = (userProfile === null || userProfile === void 0 ? void 0 : userProfile.level) || 1;\n  const progressToNextLevel = (userProfile === null || userProfile === void 0 ? void 0 : userProfile.progress) || 50;\n\n  // Mappa livelli di cintura a livelli di letteratura\n  const mapBeltToLiteratureLevel = beltLevel => {\n    // 1-2 = base, 3-4 = intermedio, 5-6 = avanzato\n    if (beltLevel <= 2) return 1;\n    if (beltLevel <= 4) return 2;\n    return 3;\n  };\n\n  // Carica i testi appropriati in base al livello\n  useEffect(() => {\n    const livelloLetteratura = mapBeltToLiteratureLevel(studentLevel);\n    const testi = getTestiPerLivello(livelloLetteratura);\n    setTestiDisponibili(testi);\n  }, [studentLevel]);\n\n  // Apri un testo specifico\n  const apriTesto = id => {\n    navigate(`/letteratura/testo/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letteratura\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Il Dojo della Letteratura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-section\",\n      children: [/*#__PURE__*/_jsxDEV(BeltDisplay, {\n        level: studentLevel,\n        progress: progressToNextLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"progress-info\",\n        children: [\"Il tuo livello attuale ti permette di accedere a\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\" \", testiDisponibili.prosa.length + testiDisponibili.poesia.length, \" opere letterarie\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \". Continua ad allenarti per sbloccare testi pi\\xF9 avanzati!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `category-btn ${categoriaAttiva === 'prosa' ? 'active' : ''}`,\n        onClick: () => setCategoriaAttiva('prosa'),\n        children: \"Prosa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `category-btn ${categoriaAttiva === 'poesia' ? 'active' : ''}`,\n        onClick: () => setCategoriaAttiva('poesia'),\n        children: \"Poesia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"testi-container\",\n      children: testiDisponibili[categoriaAttiva].map(testo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tatami-card testo-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"testo-titolo\",\n          children: testo.titolo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"testo-autore\",\n          children: testo.autore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testo-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"testo-periodo\",\n            children: testo.periodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `testo-difficolta livello-${testo.livelloDifficolta}`,\n            children: testo.livelloDifficolta === 1 ? 'Base' : testo.livelloDifficolta === 2 ? 'Intermedio' : 'Avanzato'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"testo-estratto\",\n          children: testo.estratto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testo-temi\",\n          children: testo.temiPrincipali.map((tema, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tema-tag\",\n            children: tema\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"kai-button\",\n          onClick: () => apriTesto(testo.id),\n          children: \"Leggi e Analizza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, testo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), testiDisponibili[categoriaAttiva].length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-testi-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Non ci sono ancora testi disponibili per il tuo livello in questa categoria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Continua ad allenarti nelle altre sezioni per avanzare di livello!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Letteratura, \"E0rHN4hz4uu/cPOJYUgyq30pvoM=\", false, function () {\n  return [useNavigate];\n});\n_c = Letteratura;\nexport default Letteratura;\nvar _c;\n$RefreshReg$(_c, \"Letteratura\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getTestiPerLivello","BeltDisplay","jsxDEV","_jsxDEV","Letteratura","userProfile","_s","testiDisponibili","setTestiDisponibili","prosa","poesia","categoriaAttiva","setCategoriaAttiva","navigate","studentLevel","level","progressToNextLevel","progress","mapBeltToLiteratureLevel","beltLevel","livelloLetteratura","testi","apriTesto","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","testo","titolo","autore","periodo","livelloDifficolta","estratto","temiPrincipali","tema","index","_c","$RefreshReg$"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/components/components/Letteratura/Letteratura.jsx"],"sourcesContent":["// src/components/Letteratura/Letteratura.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getTestiPerLivello } from '../../data/letteraturaDatabase';\r\n// Modifica il percorso di importazione di BeltDisplay in base alla tua struttura di progetto\r\nimport BeltDisplay from '../common/BeltDisplay/BeltDisplay';\r\nimport './LetteraturaStyle.css';\r\n\r\nconst Letteratura = ({ userProfile }) => {\r\n  const [testiDisponibili, setTestiDisponibili] = useState({ prosa: [], poesia: [] });\r\n  const [categoriaAttiva, setCategoriaAttiva] = useState('prosa');\r\n  const navigate = useNavigate();\r\n  \r\n  // Calcola livello studente basato sul sistema delle cinture karate\r\n  const studentLevel = userProfile?.level || 1;\r\n  const progressToNextLevel = userProfile?.progress || 50;\r\n  \r\n  // Mappa livelli di cintura a livelli di letteratura\r\n  const mapBeltToLiteratureLevel = (beltLevel) => {\r\n    // 1-2 = base, 3-4 = intermedio, 5-6 = avanzato\r\n    if (beltLevel <= 2) return 1;\r\n    if (beltLevel <= 4) return 2;\r\n    return 3;\r\n  };\r\n  \r\n  // Carica i testi appropriati in base al livello\r\n  useEffect(() => {\r\n    const livelloLetteratura = mapBeltToLiteratureLevel(studentLevel);\r\n    const testi = getTestiPerLivello(livelloLetteratura);\r\n    setTestiDisponibili(testi);\r\n  }, [studentLevel]);\r\n  \r\n  // Apri un testo specifico\r\n  const apriTesto = (id) => {\r\n    navigate(`/letteratura/testo/${id}`);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"letteratura\">\r\n      <h2 className=\"section-title\">Il Dojo della Letteratura</h2>\r\n      \r\n      <div className=\"progress-section\">\r\n        <BeltDisplay level={studentLevel} progress={progressToNextLevel} />\r\n        <p className=\"progress-info\">\r\n          Il tuo livello attuale ti permette di accedere a \r\n          <strong> {testiDisponibili.prosa.length + testiDisponibili.poesia.length} opere letterarie</strong>.\r\n          Continua ad allenarti per sbloccare testi più avanzati!\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"category-selector\">\r\n        <button \r\n          className={`category-btn ${categoriaAttiva === 'prosa' ? 'active' : ''}`}\r\n          onClick={() => setCategoriaAttiva('prosa')}\r\n        >\r\n          Prosa\r\n        </button>\r\n        <button \r\n          className={`category-btn ${categoriaAttiva === 'poesia' ? 'active' : ''}`}\r\n          onClick={() => setCategoriaAttiva('poesia')}\r\n        >\r\n          Poesia\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"testi-container\">\r\n        {testiDisponibili[categoriaAttiva].map((testo) => (\r\n          <div key={testo.id} className=\"tatami-card testo-card\">\r\n            <h3 className=\"testo-titolo\">{testo.titolo}</h3>\r\n            <h4 className=\"testo-autore\">{testo.autore}</h4>\r\n            <div className=\"testo-meta\">\r\n              <span className=\"testo-periodo\">{testo.periodo}</span>\r\n              <span className={`testo-difficolta livello-${testo.livelloDifficolta}`}>\r\n                {testo.livelloDifficolta === 1 ? 'Base' : \r\n                 testo.livelloDifficolta === 2 ? 'Intermedio' : 'Avanzato'}\r\n              </span>\r\n            </div>\r\n            <p className=\"testo-estratto\">{testo.estratto}</p>\r\n            <div className=\"testo-temi\">\r\n              {testo.temiPrincipali.map((tema, index) => (\r\n                <span key={index} className=\"tema-tag\">{tema}</span>\r\n              ))}\r\n            </div>\r\n            <button \r\n              className=\"kai-button\"\r\n              onClick={() => apriTesto(testo.id)}\r\n            >\r\n              Leggi e Analizza\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {testiDisponibili[categoriaAttiva].length === 0 && (\r\n        <div className=\"no-testi-message\">\r\n          <p>Non ci sono ancora testi disponibili per il tuo livello in questa categoria.</p>\r\n          <p>Continua ad allenarti nelle altre sezioni per avanzare di livello!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Letteratura;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}