{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\lingua-kai-platform - restructured\\\\src\\\\components\\\\components\\\\TestIngresso\\\\TestIngresso.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './TestIngressoStyles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestIngresso = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentSection, setCurrentSection] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [isNAI, setIsNAI] = useState(false);\n  const [motherLanguage, setMotherLanguage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [questionBank, setQuestionBank] = useState({});\n  const [currentQuestions, setCurrentQuestions] = useState([]);\n  const [sectionProgress, setSectionProgress] = useState({\n    demographic: false,\n    reading: false,\n    grammar: false,\n    writing: false,\n    speaking: false\n  });\n\n  // Configurazione sezioni test QCER\n  const testSections = [{\n    id: 'demographic',\n    name: 'Informazioni di Base',\n    questions: 2\n  }, {\n    id: 'reading',\n    name: 'Comprensione Scritta',\n    questions: 8\n  }, {\n    id: 'grammar',\n    name: 'Grammatica e Vocabolario',\n    questions: 8\n  }, {\n    id: 'writing',\n    name: 'Produzione Scritta',\n    questions: 3\n  }, {\n    id: 'speaking',\n    name: 'Produzione Orale',\n    questions: 3\n  }];\n\n  // Mapping QCER ‚Üí Cinture Karate\n  const qcerToBelt = {\n    'A1': {\n      belt: 'yellow',\n      name: 'Cintura Gialla',\n      color: '#FFD700'\n    },\n    'A2': {\n      belt: 'orange',\n      name: 'Cintura Arancione',\n      color: '#FFA500'\n    },\n    'B1': {\n      belt: 'green',\n      name: 'Cintura Verde',\n      color: '#32CD32'\n    },\n    'B2': {\n      belt: 'blue',\n      name: 'Cintura Blu',\n      color: '#4169E1'\n    },\n    'C1': {\n      belt: 'brown',\n      name: 'Cintura Marrone',\n      color: '#8B4513'\n    },\n    'C2': {\n      belt: 'black',\n      name: 'Cintura Nera',\n      color: '#000000'\n    }\n  };\n\n  // Lingue supportate per studenti NAI\n  const supportedLanguages = [{\n    code: 'al',\n    name: 'Albanese'\n  }, {\n    code: 'ko',\n    name: 'Kosovaro'\n  }, {\n    code: 'hi',\n    name: 'Hindi'\n  }, {\n    code: 'ar',\n    name: 'Arabo'\n  }, {\n    code: 'zh',\n    name: 'Cinese'\n  }, {\n    code: 'ro',\n    name: 'Rumeno'\n  }, {\n    code: 'es',\n    name: 'Spagnolo'\n  }, {\n    code: 'pt',\n    name: 'Portoghese'\n  }, {\n    code: 'uk',\n    name: 'Ucraino'\n  }];\n\n  // Caricamento dinamico domande AI\n  useEffect(() => {\n    loadQuestionBank();\n  }, []);\n  const loadQuestionBank = async () => {\n    setLoading(true);\n    try {\n      // Verifica se MockQuestionService esiste\n      console.log('Caricamento MockQuestionService...');\n\n      // Usa import dinamico con fallback\n      let MockQuestionService;\n      try {\n        const module = await import('./MockQuestionService');\n        MockQuestionService = module.MockQuestionService;\n        console.log('MockQuestionService caricato con successo');\n      } catch (importError) {\n        console.warn('MockQuestionService non trovato, uso fallback:', importError);\n        throw new Error('File non trovato');\n      }\n      const questions = await MockQuestionService.generateTestBank();\n      setQuestionBank(questions);\n\n      // Carica prime domande demografiche\n      setCurrentQuestions(questions.demographic || []);\n    } catch (error) {\n      console.error('Errore caricamento domande, uso fallback:', error);\n      // Fallback a domande hardcoded\n      loadHardcodedQuestions();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadHardcodedQuestions = () => {\n    // Fallback temporaneo con domande esistenti\n    const hardcodedBank = {\n      demographic: [{\n        id: 'years_italy',\n        type: 'multiple_choice',\n        question: 'Da quanti anni sei in Italia?',\n        options: [{\n          value: 'less1',\n          text: 'Meno di 1 anno'\n        }, {\n          value: '1to2',\n          text: '1-2 anni'\n        }, {\n          value: 'more2',\n          text: 'Pi√π di 2 anni'\n        }, {\n          value: 'born',\n          text: 'Sono nato/a in Italia'\n        }]\n      }],\n      reading: [],\n      // Verranno generate dall'AI\n      grammar: [],\n      // Verranno generate dall'AI\n      writing: [],\n      // Verranno generate dall'AI\n      speaking: [] // Verranno generate dall'AI\n    };\n    setQuestionBank(hardcodedBank);\n    setCurrentQuestions(hardcodedBank.demographic);\n  };\n\n  // Gestione avanzamento sezioni\n  const handleAnswer = (questionId, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n\n    // Aggiorna NAI status immediatamente quando rispondi alla domanda anni\n    if (questionId === 'years_italy') {\n      const isNAIUser = answer === 'less1' || answer === '1to2';\n      setIsNAI(isNAIUser);\n      console.log('NAI Status aggiornato:', isNAIUser, 'Years:', answer);\n    }\n  };\n  const nextSection = async () => {\n    const currentSectionId = testSections[currentSection].id;\n\n    // Determina se √® NAI dalla prima sezione\n    if (currentSection === 0) {\n      const yearsInItaly = answers.years_italy;\n      const isNAIUser = yearsInItaly === 'less1' || yearsInItaly === '1to2';\n      setIsNAI(isNAIUser);\n      console.log('NAI Status:', isNAIUser, 'Years:', yearsInItaly); // Debug\n    }\n\n    // Marca sezione completata\n    setSectionProgress(prev => ({\n      ...prev,\n      [currentSectionId]: true\n    }));\n\n    // Avanza alla sezione successiva\n    if (currentSection < testSections.length - 1) {\n      const nextSectionIndex = currentSection + 1;\n      const nextSectionId = testSections[nextSectionIndex].id;\n      setCurrentSection(nextSectionIndex);\n\n      // Carica domande per la prossima sezione\n      await loadSectionQuestions(nextSectionId);\n    } else {\n      // Test completato\n      await submitTest();\n    }\n  };\n  const loadSectionQuestions = async sectionId => {\n    setLoading(true);\n    try {\n      // Usa Mock Service per generare domande adattive\n      console.log('Caricamento sezione:', sectionId);\n      const {\n        MockQuestionService\n      } = await import('./MockQuestionService');\n      const sectionQuestions = await MockQuestionService.generateSectionQuestions(sectionId, {\n        isNAI: isNAI,\n        motherLanguage: motherLanguage,\n        previousAnswers: answers\n      });\n      console.log('Domande caricate per', sectionId, ':', sectionQuestions);\n      setCurrentQuestions(sectionQuestions);\n    } catch (error) {\n      console.error('Errore generazione domande sezione:', error);\n\n      // FALLBACK: Usa domande hardcoded per la sezione\n      const fallbackQuestions = getFallbackQuestions(sectionId);\n      console.log('Usando fallback per', sectionId, ':', fallbackQuestions);\n      setCurrentQuestions(fallbackQuestions);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fallback domande per ogni sezione\n  const getFallbackQuestions = sectionId => {\n    const fallbacks = {\n      reading: [{\n        id: 'reading_fallback_1',\n        type: 'reading_comprehension',\n        text: 'Maria √® una studentessa. Ha 20 anni e studia medicina. Ogni mattina va all\\'universit√†.',\n        subQuestions: [{\n          id: 'reading_fallback_1_q1',\n          question: 'Che cosa studia Maria?',\n          options: [{\n            value: 'correct',\n            text: 'Medicina',\n            isCorrect: true\n          }, {\n            value: 'wrong1',\n            text: 'Storia',\n            isCorrect: false\n          }, {\n            value: 'wrong2',\n            text: 'Matematica',\n            isCorrect: false\n          }, {\n            value: 'wrong3',\n            text: 'Arte',\n            isCorrect: false\n          }]\n        }]\n      }],\n      grammar: [{\n        id: 'grammar_fallback_1',\n        type: 'grammar',\n        question: 'Completa: \"Io _____ italiano.\"',\n        options: [{\n          value: 'correct',\n          text: 'sono',\n          isCorrect: true\n        }, {\n          value: 'wrong1',\n          text: 'sei',\n          isCorrect: false\n        }, {\n          value: 'wrong2',\n          text: '√®',\n          isCorrect: false\n        }, {\n          value: 'wrong3',\n          text: 'siamo',\n          isCorrect: false\n        }]\n      }],\n      writing: [{\n        id: 'writing_fallback_1',\n        type: 'writing',\n        prompt: 'Presentati brevemente: scrivi il tuo nome e cosa ti piace fare.',\n        placeholder: 'Mi chiamo...',\n        minWords: 20,\n        minRows: 3\n      }],\n      speaking: [{\n        id: 'speaking_fallback_1',\n        type: 'speaking',\n        prompt: 'Presentati: di\\' il tuo nome e la tua et√†.',\n        maxDuration: 30\n      }]\n    };\n    return fallbacks[sectionId] || [];\n  };\n\n  // ALGORITMO DI SCORING QCER AVANZATO - FIXED\n  const calculateQCERLevel = async () => {\n    try {\n      console.log('üîç === INIZIO CALCOLO QCER ===');\n\n      // Valuta risposte di scrittura e parlato con Mock AI\n      const {\n        MockQuestionService,\n        QCERScoring\n      } = await import('./MockQuestionService');\n\n      // Crea una copia delle risposte per non modificare l'originale\n      const evaluatedAnswers = {\n        ...answers\n      };\n\n      // Valuta scrittura\n      console.log('üìù Valutazione sezione scrittura...');\n      for (let key of Object.keys(evaluatedAnswers)) {\n        if (key.includes('writing') && typeof evaluatedAnswers[key] === 'string') {\n          try {\n            const evaluation = await MockQuestionService.evaluateWriting(evaluatedAnswers[key], 'A1');\n            evaluatedAnswers[key] = {\n              score: evaluation.score,\n              text: evaluatedAnswers[key],\n              feedback: evaluation.feedback || '',\n              suggestedLevel: evaluation.suggestedLevel || 'A1'\n            };\n            console.log('‚úÖ Scrittura valutata:', key, 'Score:', evaluation.score);\n          } catch (evalError) {\n            console.warn('‚ö†Ô∏è Errore valutazione scrittura:', evalError);\n            evaluatedAnswers[key] = {\n              score: 0.5,\n              text: evaluatedAnswers[key]\n            };\n          }\n        }\n\n        // Valuta parlato\n        if (key.includes('speaking') && typeof evaluatedAnswers[key] === 'object' && evaluatedAnswers[key]) {\n          try {\n            if (evaluatedAnswers[key].skipped) {\n              evaluatedAnswers[key].score = 0.5;\n              console.log('‚è≠Ô∏è Parlato saltato:', key);\n            } else if (evaluatedAnswers[key].audioBlob) {\n              const evaluation = await MockQuestionService.evaluateSpeaking(evaluatedAnswers[key], 'A1');\n              evaluatedAnswers[key] = {\n                ...evaluatedAnswers[key],\n                score: evaluation.score\n              };\n              console.log('‚úÖ Parlato valutato:', key, 'Score:', evaluation.score);\n            }\n          } catch (evalError) {\n            console.warn('‚ö†Ô∏è Errore valutazione parlato:', evalError);\n            evaluatedAnswers[key] = {\n              ...evaluatedAnswers[key],\n              score: 0.5\n            };\n          }\n        }\n      }\n\n      // Calcola livello QCER finale con logging dettagliato\n      console.log('üßÆ Calcolo livello finale...');\n      const levelResult = QCERScoring.calculateLevel(evaluatedAnswers);\n\n      // Verifica che il risultato sia valido\n      if (!levelResult || typeof levelResult !== 'object') {\n        throw new Error('QCERScoring ha restituito un risultato non valido');\n      }\n      const finalLevel = levelResult.level || levelResult;\n      console.log('üéØ Livello finale calcolato:', finalLevel);\n\n      // Verifica che sia un livello QCER valido\n      const validLevels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\n      if (!validLevels.includes(finalLevel)) {\n        console.warn('‚ö†Ô∏è Livello non valido, uso A1:', finalLevel);\n        return 'A1';\n      }\n      return finalLevel;\n    } catch (error) {\n      console.error('‚ùå Errore calcolo QCER, uso algoritmo fallback:', error);\n\n      // ALGORITMO FALLBACK SEMPLIFICATO\n      console.log('üîß === ALGORITMO FALLBACK ===');\n      const sectionScores = {\n        reading: 0,\n        grammar: 0,\n        writing: 0,\n        speaking: 0\n      };\n\n      // Calcola punteggi per sezione\n      Object.keys(sectionScores).forEach(section => {\n        const sectionAnswers = Object.keys(answers).filter(key => key.includes(section)).map(key => answers[key]);\n        console.log(`üìä Sezione ${section}:`, sectionAnswers.length, 'risposte');\n        if (sectionAnswers.length > 0) {\n          const correctAnswers = sectionAnswers.filter(answer => {\n            if (typeof answer === 'object' && answer.isCorrect) return true;\n            if (answer === 'correct') return true;\n            if (typeof answer === 'object' && answer.score && answer.score > 0.6) return true;\n            if (typeof answer === 'string' && answer.length > 10) return true; // Testi scritti\n            return false;\n          }).length;\n          sectionScores[section] = correctAnswers / sectionAnswers.length * 100;\n        } else {\n          sectionScores[section] = 50; // Neutro se nessuna risposta\n        }\n      });\n      console.log('üìä FALLBACK - Punteggi sezioni:', sectionScores);\n\n      // Media ponderata\n      const totalScore = sectionScores.reading * 0.25 + sectionScores.grammar * 0.35 + sectionScores.writing * 0.25 + sectionScores.speaking * 0.15;\n      console.log('üéØ FALLBACK - Punteggio totale:', totalScore + '%');\n\n      // Mapping conservativo per studenti NAI\n      if (totalScore >= 85) return 'C1';\n      if (totalScore >= 75) return 'B2';\n      if (totalScore >= 65) return 'B1';\n      if (totalScore >= 45) return 'A2';\n      return 'A1';\n    }\n  };\n\n  // INVIO TEST E ASSEGNAZIONE CINTURA - FIXED\n  const submitTest = async () => {\n    setLoading(true);\n    try {\n      console.log('üéØ Inizio calcolo livello QCER...');\n      let qcerLevel = await calculateQCERLevel();\n      console.log('‚úÖ Livello calcolato:', qcerLevel);\n\n      // CONTROLLO SICUREZZA: Verifica che il livello sia valido\n      if (!qcerLevel || !qcerToBelt[qcerLevel]) {\n        console.warn('‚ö†Ô∏è Livello non valido, uso A1 di default');\n        qcerLevel = 'A1';\n      }\n      const assignedBelt = qcerToBelt[qcerLevel];\n      console.log('ü•ã Cintura assegnata:', assignedBelt);\n\n      // Verifica che la cintura sia valida\n      if (!assignedBelt || !assignedBelt.belt) {\n        console.error('‚ùå Errore nella mappatura cintura');\n        throw new Error('Errore nella mappatura cintura per livello: ' + qcerLevel);\n      }\n\n      // Salva risultati nel database\n      const testResults = {\n        answers,\n        qcerLevel,\n        belt: assignedBelt.belt,\n        beltName: assignedBelt.name,\n        beltColor: assignedBelt.color,\n        isNAI,\n        motherLanguage,\n        timestamp: new Date().toISOString()\n      };\n      console.log('üíæ Salvataggio risultati test:', testResults);\n\n      // Aggiorna profilo utente\n      await updateUserProfile(qcerLevel, assignedBelt);\n      console.log('üöÄ Reindirizzamento a dashboard...');\n\n      // Reindirizza con celebrazione cintura\n      navigate('/dashboard', {\n        state: {\n          newBelt: assignedBelt,\n          qcerLevel,\n          isFirstTest: true,\n          testResults: testResults\n        }\n      });\n    } catch (error) {\n      console.error('‚ùå Errore salvataggio test:', error);\n\n      // FALLBACK: Usa livello A1 se tutto fallisce\n      console.log('üîß Applicando fallback A1...');\n      const fallbackBelt = qcerToBelt['A1'];\n      navigate('/dashboard', {\n        state: {\n          newBelt: fallbackBelt,\n          qcerLevel: 'A1',\n          isFirstTest: true,\n          error: 'Test completato con valutazione di base'\n        }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateUserProfile = async (qcerLevel, belt) => {\n    try {\n      console.log('Aggiornamento profilo:', {\n        qcerLevel,\n        currentBelt: belt.belt,\n        testCompletedAt: new Date().toISOString()\n      });\n    } catch (error) {\n      console.error('Errore aggiornamento profilo:', error);\n    }\n  };\n\n  // Funzione per verificare se si pu√≤ procedere\n  const canProceed = () => {\n    var _testSections$current;\n    const currentSectionId = (_testSections$current = testSections[currentSection]) === null || _testSections$current === void 0 ? void 0 : _testSections$current.id;\n    if (currentSection === 0) {\n      // Sezione demografica\n      const hasYearsAnswer = answers.years_italy;\n      const hasLanguageIfNAI = !isNAI || motherLanguage;\n      console.log('CanProceed check:', {\n        hasYearsAnswer,\n        isNAI,\n        motherLanguage,\n        hasLanguageIfNAI,\n        result: hasYearsAnswer && hasLanguageIfNAI\n      });\n      return hasYearsAnswer && hasLanguageIfNAI;\n    }\n\n    // Per altre sezioni, verifica che ci siano risposte\n    const sectionAnswers = Object.keys(answers).filter(key => key.includes(currentSectionId) || key.startsWith(currentSectionId));\n    const requiredAnswers = currentQuestions.length;\n    const canPass = sectionAnswers.length >= Math.max(1, requiredAnswers * 0.5);\n    console.log('CanProceed other section:', {\n      currentSectionId,\n      sectionAnswers: sectionAnswers.length,\n      requiredAnswers,\n      canPass\n    });\n    return canPass;\n  };\n\n  // Rendering sezione demografica\n  const renderDemographicSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Informazioni di Base\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demographic-questions\",\n      children: [currentQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"question-text\",\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-grid\",\n          children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: answers[question.id] === option.value ? 'selected' : '',\n            onClick: () => handleAnswer(question.id, option.value),\n            children: option.text\n          }, option.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this)), isNAI && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Qual \\xE8 la tua lingua madre?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"language-note\",\n          children: \"Questa informazione ci aiuta a personalizzare il test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-grid\",\n          children: supportedLanguages.map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: motherLanguage === lang.code ? 'selected' : '',\n            onClick: () => {\n              setMotherLanguage(lang.code);\n              console.log('Lingua selezionata:', lang.name);\n            },\n            children: lang.name\n          }, lang.code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 5\n  }, this);\n\n  // Rendering sezioni competenze QCER\n  const renderSkillSection = () => {\n    var _testSections$current2;\n    const section = testSections[currentSection];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: section.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-progress\",\n        children: [\"Sezione \", currentSection + 1, \" di \", testSections.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-container\",\n        children: [currentQuestions.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#ffebee',\n            padding: '20px',\n            border: '1px solid #f44336',\n            borderRadius: '8px',\n            margin: '20px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: '#d32f2f'\n            },\n            children: \"\\u26A0\\uFE0F Nessuna domanda caricata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sezione: \", (_testSections$current2 = testSections[currentSection]) === null || _testSections$current2 === void 0 ? void 0 : _testSections$current2.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Numero domande: \", currentQuestions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              var _testSections$current3;\n              console.log('Force loading fallback...');\n              setCurrentQuestions(getFallbackQuestions((_testSections$current3 = testSections[currentSection]) === null || _testSections$current3 === void 0 ? void 0 : _testSections$current3.id));\n            },\n            style: {\n              background: '#f44336',\n              color: 'white',\n              border: 'none',\n              padding: '10px 20px',\n              borderRadius: '4px'\n            },\n            children: \"\\uD83D\\uDD04 Forza Caricamento Domande\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), currentQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: [question.type === 'reading_comprehension' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reading-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reading-text\",\n              children: question.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comprehension-questions\",\n              children: question.subQuestions.map(subQ => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-question\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: subQ.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"options-grid\",\n                  children: subQ.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: answers[subQ.id] === option.value ? 'selected' : '',\n                    onClick: () => handleAnswer(subQ.id, option.value),\n                    children: option.text\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 25\n                }, this)]\n              }, subQ.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 17\n          }, this), question.type === 'grammar' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grammar-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-grid\",\n              children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: answers[question.id] === option.value ? 'selected' : '',\n                onClick: () => handleAnswer(question.id, option.value),\n                children: option.text\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this), question.type === 'writing' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"writing-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: question.placeholder,\n              value: answers[question.id] || '',\n              onChange: e => handleAnswer(question.id, e.target.value),\n              rows: question.minRows || 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-count\",\n              children: [\"Parole: \", (answers[question.id] || '').split(' ').filter(w => w).length, question.minWords && ` (minimo: ${question.minWords})`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 17\n          }, this), question.type === 'speaking' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speaking-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.prompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(SpeakingRecorder, {\n              questionId: question.id,\n              onRecordingComplete: audioData => handleAnswer(question.id, audioData),\n              maxDuration: question.maxDuration || 60\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 17\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Progress tracker migliorato\n  const renderProgressTracker = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-tracker-qcer\",\n    children: testSections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-step ${index < currentSection ? 'completed' : index === currentSection ? 'active' : 'pending'}`,\n        children: index < currentSection ? '‚úì' : index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"section-name\",\n        children: section.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this), index < testSections.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 47\n      }, this)]\n    }, section.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 655,\n    columnNumber: 5\n  }, this);\n\n  // Loading con messaggi dinamici\n  const renderLoading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentSection === 0 ? 'Caricamento test...' : currentSection < testSections.length ? 'Generazione domande adattive...' : 'Analisi risultati e assegnazione cintura...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 7\n    }, this), currentSection === testSections.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"belt-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Preparazione della tua cintura karate...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"belt-animation\",\n        children: \"\\uD83E\\uDD4B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 673,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-ingresso-container qcer-enhanced\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"test-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test di Livello QCER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"test-description\",\n        children: \"Questo test determiner\\xE0 il tuo livello secondo il Quadro Comune Europeo e ti assegner\\xE0 la cintura karate corrispondente per iniziare il tuo percorso.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this), renderProgressTracker(), loading ? renderLoading() : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-content\",\n      children: [currentSection === 0 ? renderDemographicSection() : renderSkillSection(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-navigation\",\n        children: [currentSection > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => setCurrentSection(currentSection - 1),\n          children: \"Indietro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: nextSection,\n          disabled: !canProceed(),\n          children: currentSection === testSections.length - 1 ? 'Completa Test' : 'Continua'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 690,\n    columnNumber: 5\n  }, this);\n};\n\n// COMPONENTE SPEAKING RECORDER MIGLIORATO\n_s(TestIngresso, \"gSytEff1wqH/WBg+kxPn5lMp2XM=\", false, function () {\n  return [useNavigate];\n});\n_c = TestIngresso;\nconst SpeakingRecorder = ({\n  questionId,\n  onRecordingComplete,\n  maxDuration\n}) => {\n  _s2();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [recordingTime, setRecordingTime] = useState(0);\n  useEffect(() => {\n    let interval;\n    if (isRecording) {\n      interval = setInterval(() => {\n        setRecordingTime(time => time + 1);\n      }, 1000);\n    } else {\n      setRecordingTime(0);\n    }\n    return () => clearInterval(interval);\n  }, [isRecording]);\n  const startRecording = async () => {\n    try {\n      // Controlla se il browser supporta getUserMedia\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error('Il tuo browser non supporta la registrazione audio');\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      const chunks = [];\n      recorder.ondataavailable = event => chunks.push(event.data);\n      recorder.onstop = () => {\n        const audioBlob = new Blob(chunks, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioURL(audioUrl);\n        onRecordingComplete({\n          audioBlob,\n          audioUrl,\n          duration: recordingTime * 1000\n        });\n\n        // Stoppa lo stream per liberare il microfono\n        stream.getTracks().forEach(track => track.stop());\n      };\n      recorder.start();\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n      setHasError(false);\n      setRecordingTime(0);\n\n      // Auto-stop dopo maxDuration\n      setTimeout(() => {\n        if (recorder.state === 'recording') {\n          stopRecording();\n        }\n      }, maxDuration * 1000);\n    } catch (error) {\n      console.error('Errore accesso microfono:', error);\n      setHasError(true);\n      if (error.name === 'NotAllowedError') {\n        setErrorMessage('Accesso al microfono negato. Abilita il microfono nelle impostazioni del browser.');\n      } else if (error.name === 'NotFoundError') {\n        setErrorMessage('Nessun microfono trovato. Collega un microfono e riprova.');\n      } else {\n        setErrorMessage('Errore microfono: ' + error.message);\n      }\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      setIsRecording(false);\n    }\n  };\n  const skipSpeaking = () => {\n    // Fornisce un punteggio neutro per chi salta la sezione parlato\n    console.log('üîá Sezione parlato saltata per:', questionId);\n    onRecordingComplete({\n      audioBlob: null,\n      audioUrl: null,\n      duration: 0,\n      score: 0.5,\n      skipped: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speaking-recorder\",\n    children: [hasError ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"\\u26A0\\uFE0F \", errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"retry-button\",\n          onClick: () => {\n            setHasError(false);\n            setErrorMessage('');\n          },\n          children: \"\\uD83D\\uDD04 Riprova\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"skip-button\",\n          onClick: skipSpeaking,\n          children: \"\\u23ED\\uFE0F Salta Sezione Parlato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"skip-note\",\n        children: \"Nota: Saltando la sezione parlato, il test sar\\xE0 meno preciso ma potrai comunque ottenere una valutazione.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCCB Hai \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [maxDuration, \" secondi\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 23\n          }, this), \" per rispondere.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDCA1 Parla chiaramente verso il microfono\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-controls\",\n        children: !isRecording && !audioURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"record-button\",\n            onClick: startRecording,\n            children: \"\\uD83C\\uDFA4 Inizia Registrazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"skip-speaking-button\",\n            onClick: skipSpeaking,\n            style: {\n              marginTop: '15px',\n              backgroundColor: '#6c757d',\n              color: 'white',\n              border: 'none',\n              padding: '8px 16px',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"\\u23ED\\uFE0F Salta questa sezione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 15\n        }, this) : isRecording ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-active\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pulse-dot\",\n              style: {\n                width: '10px',\n                height: '10px',\n                backgroundColor: '#ff0000',\n                borderRadius: '50%',\n                display: 'inline-block',\n                marginRight: '8px',\n                animation: 'pulse 1s infinite'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDD34 Registrazione in corso...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer\",\n            children: [\"Tempo: \", recordingTime, \"s / \", maxDuration, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"stop-button\",\n            onClick: stopRecording,\n            style: {\n              backgroundColor: '#dc3545',\n              color: 'white',\n              border: 'none',\n              padding: '10px 20px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              marginTop: '10px'\n            },\n            children: \"\\u23F9\\uFE0F Ferma Registrazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 15\n        }, this) : audioURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-complete\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u2705 Registrazione completata!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              src: audioURL,\n              style: {\n                width: '100%',\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 921,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"re-record-button\",\n              onClick: () => {\n                setAudioURL(null);\n                setIsRecording(false);\n                setRecordingTime(0);\n              },\n              style: {\n                backgroundColor: '#ffc107',\n                color: '#212529',\n                border: 'none',\n                padding: '8px 16px',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                marginRight: '10px'\n              },\n              children: \"\\uD83D\\uDD04 Registra di Nuovo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"skip-button\",\n              onClick: skipSpeaking,\n              style: {\n                backgroundColor: '#6c757d',\n                color: 'white',\n                border: 'none',\n                padding: '8px 16px',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"\\u23ED\\uFE0F Salta comunque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 15\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this), !audioURL && !isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speaking-help\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14px',\n            color: '#6c757d',\n            marginTop: '15px'\n          },\n          children: \"\\u26A0\\uFE0F Se non hai microfono disponibile, puoi saltare questa sezione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        @keyframes pulse {\n          0% { opacity: 1; }\n          50% { opacity: 0.5; }\n          100% { opacity: 1; }\n        }\n        \n        .speaking-recorder {\n          border: 1px solid #ddd;\n          border-radius: 8px;\n          padding: 20px;\n          margin: 10px 0;\n          background-color: #f9f9f9;\n        }\n        \n        .recording-info {\n          margin-bottom: 15px;\n          padding: 10px;\n          background-color: #e3f2fd;\n          border-radius: 4px;\n        }\n        \n        .recording-error {\n          padding: 15px;\n          background-color: #ffebee;\n          border: 1px solid #f44336;\n          border-radius: 4px;\n        }\n        \n        .error-message {\n          color: #d32f2f;\n          font-weight: bold;\n          margin-bottom: 10px;\n        }\n        \n        .record-button {\n          background-color: #28a745;\n          color: white;\n          border: none;\n          padding: 12px 24px;\n          border-radius: 6px;\n          font-size: 16px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n        \n        .record-button:hover {\n          background-color: #218838;\n        }\n        \n        .recording-active {\n          text-align: center;\n          padding: 20px;\n        }\n        \n        .recording-indicator {\n          font-size: 18px;\n          margin-bottom: 10px;\n        }\n        \n        .timer {\n          font-size: 16px;\n          margin-bottom: 15px;\n          color: #dc3545;\n          font-weight: bold;\n        }\n        \n        .recording-complete {\n          text-align: center;\n        }\n        \n        .action-buttons {\n          margin-top: 15px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 823,\n    columnNumber: 5\n  }, this);\n};\n_s2(SpeakingRecorder, \"lBpAxsZWfEephT5Loh1uroJGgXk=\");\n_c2 = SpeakingRecorder;\nexport default TestIngresso;\nvar _c, _c2;\n$RefreshReg$(_c, \"TestIngresso\");\n$RefreshReg$(_c2, \"SpeakingRecorder\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","TestIngresso","_s","navigate","currentSection","setCurrentSection","answers","setAnswers","isNAI","setIsNAI","motherLanguage","setMotherLanguage","loading","setLoading","questionBank","setQuestionBank","currentQuestions","setCurrentQuestions","sectionProgress","setSectionProgress","demographic","reading","grammar","writing","speaking","testSections","id","name","questions","qcerToBelt","belt","color","supportedLanguages","code","loadQuestionBank","console","log","MockQuestionService","module","importError","warn","Error","generateTestBank","error","loadHardcodedQuestions","hardcodedBank","type","question","options","value","text","handleAnswer","questionId","answer","prev","isNAIUser","nextSection","currentSectionId","yearsInItaly","years_italy","length","nextSectionIndex","nextSectionId","loadSectionQuestions","submitTest","sectionId","sectionQuestions","generateSectionQuestions","previousAnswers","fallbackQuestions","getFallbackQuestions","fallbacks","subQuestions","isCorrect","prompt","placeholder","minWords","minRows","maxDuration","calculateQCERLevel","QCERScoring","evaluatedAnswers","key","Object","keys","includes","evaluation","evaluateWriting","score","feedback","suggestedLevel","evalError","skipped","audioBlob","evaluateSpeaking","levelResult","calculateLevel","finalLevel","level","validLevels","sectionScores","forEach","section","sectionAnswers","filter","map","correctAnswers","totalScore","qcerLevel","assignedBelt","testResults","beltName","beltColor","timestamp","Date","toISOString","updateUserProfile","state","newBelt","isFirstTest","fallbackBelt","currentBelt","testCompletedAt","canProceed","_testSections$current","hasYearsAnswer","hasLanguageIfNAI","result","startsWith","requiredAnswers","canPass","Math","max","renderDemographicSection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","option","onClick","lang","renderSkillSection","_testSections$current2","style","background","padding","border","borderRadius","margin","_testSections$current3","subQ","onChange","e","target","rows","split","w","SpeakingRecorder","onRecordingComplete","audioData","renderProgressTracker","renderLoading","disabled","_c","_s2","isRecording","setIsRecording","audioURL","setAudioURL","mediaRecorder","setMediaRecorder","hasError","setHasError","errorMessage","setErrorMessage","recordingTime","setRecordingTime","interval","setInterval","time","clearInterval","startRecording","navigator","mediaDevices","getUserMedia","stream","audio","recorder","MediaRecorder","chunks","ondataavailable","event","push","data","onstop","Blob","audioUrl","URL","createObjectURL","duration","getTracks","track","stop","start","setTimeout","stopRecording","message","skipSpeaking","marginTop","backgroundColor","cursor","width","height","display","marginRight","animation","controls","src","marginBottom","fontSize","jsx","_c2","$RefreshReg$"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/components/components/TestIngresso/TestIngresso.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './TestIngressoStyles.css';\r\n\r\nconst TestIngresso = () => {\r\n  const navigate = useNavigate();\r\n  const [currentSection, setCurrentSection] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [isNAI, setIsNAI] = useState(false);\r\n  const [motherLanguage, setMotherLanguage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [questionBank, setQuestionBank] = useState({});\r\n  const [currentQuestions, setCurrentQuestions] = useState([]);\r\n  const [sectionProgress, setSectionProgress] = useState({\r\n    demographic: false,\r\n    reading: false,\r\n    grammar: false,\r\n    writing: false,\r\n    speaking: false\r\n  });\r\n\r\n  // Configurazione sezioni test QCER\r\n  const testSections = [\r\n    { id: 'demographic', name: 'Informazioni di Base', questions: 2 },\r\n    { id: 'reading', name: 'Comprensione Scritta', questions: 8 },\r\n    { id: 'grammar', name: 'Grammatica e Vocabolario', questions: 8 },\r\n    { id: 'writing', name: 'Produzione Scritta', questions: 3 },\r\n    { id: 'speaking', name: 'Produzione Orale', questions: 3 }\r\n  ];\r\n\r\n  // Mapping QCER ‚Üí Cinture Karate\r\n  const qcerToBelt = {\r\n    'A1': { belt: 'yellow', name: 'Cintura Gialla', color: '#FFD700' },\r\n    'A2': { belt: 'orange', name: 'Cintura Arancione', color: '#FFA500' },\r\n    'B1': { belt: 'green', name: 'Cintura Verde', color: '#32CD32' },\r\n    'B2': { belt: 'blue', name: 'Cintura Blu', color: '#4169E1' },\r\n    'C1': { belt: 'brown', name: 'Cintura Marrone', color: '#8B4513' },\r\n    'C2': { belt: 'black', name: 'Cintura Nera', color: '#000000' }\r\n  };\r\n\r\n  // Lingue supportate per studenti NAI\r\n  const supportedLanguages = [\r\n    { code: 'al', name: 'Albanese' },\r\n    { code: 'ko', name: 'Kosovaro' },\r\n    { code: 'hi', name: 'Hindi' },\r\n    { code: 'ar', name: 'Arabo' },\r\n    { code: 'zh', name: 'Cinese' },\r\n    { code: 'ro', name: 'Rumeno' },\r\n    { code: 'es', name: 'Spagnolo' },\r\n    { code: 'pt', name: 'Portoghese' },\r\n    { code: 'uk', name: 'Ucraino' }\r\n  ];\r\n\r\n  // Caricamento dinamico domande AI\r\n  useEffect(() => {\r\n    loadQuestionBank();\r\n  }, []);\r\n\r\n  const loadQuestionBank = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Verifica se MockQuestionService esiste\r\n      console.log('Caricamento MockQuestionService...');\r\n      \r\n      // Usa import dinamico con fallback\r\n      let MockQuestionService;\r\n      try {\r\n        const module = await import('./MockQuestionService');\r\n        MockQuestionService = module.MockQuestionService;\r\n        console.log('MockQuestionService caricato con successo');\r\n      } catch (importError) {\r\n        console.warn('MockQuestionService non trovato, uso fallback:', importError);\r\n        throw new Error('File non trovato');\r\n      }\r\n      \r\n      const questions = await MockQuestionService.generateTestBank();\r\n      setQuestionBank(questions);\r\n      \r\n      // Carica prime domande demografiche\r\n      setCurrentQuestions(questions.demographic || []);\r\n    } catch (error) {\r\n      console.error('Errore caricamento domande, uso fallback:', error);\r\n      // Fallback a domande hardcoded\r\n      loadHardcodedQuestions();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadHardcodedQuestions = () => {\r\n    // Fallback temporaneo con domande esistenti\r\n    const hardcodedBank = {\r\n      demographic: [\r\n        {\r\n          id: 'years_italy',\r\n          type: 'multiple_choice',\r\n          question: 'Da quanti anni sei in Italia?',\r\n          options: [\r\n            { value: 'less1', text: 'Meno di 1 anno' },\r\n            { value: '1to2', text: '1-2 anni' },\r\n            { value: 'more2', text: 'Pi√π di 2 anni' },\r\n            { value: 'born', text: 'Sono nato/a in Italia' }\r\n          ]\r\n        }\r\n      ],\r\n      reading: [], // Verranno generate dall'AI\r\n      grammar: [], // Verranno generate dall'AI\r\n      writing: [], // Verranno generate dall'AI\r\n      speaking: [] // Verranno generate dall'AI\r\n    };\r\n    setQuestionBank(hardcodedBank);\r\n    setCurrentQuestions(hardcodedBank.demographic);\r\n  };\r\n\r\n  // Gestione avanzamento sezioni\r\n  const handleAnswer = (questionId, answer) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: answer\r\n    }));\r\n    \r\n    // Aggiorna NAI status immediatamente quando rispondi alla domanda anni\r\n    if (questionId === 'years_italy') {\r\n      const isNAIUser = answer === 'less1' || answer === '1to2';\r\n      setIsNAI(isNAIUser);\r\n      console.log('NAI Status aggiornato:', isNAIUser, 'Years:', answer);\r\n    }\r\n  };\r\n\r\n  const nextSection = async () => {\r\n    const currentSectionId = testSections[currentSection].id;\r\n    \r\n    // Determina se √® NAI dalla prima sezione\r\n    if (currentSection === 0) {\r\n      const yearsInItaly = answers.years_italy;\r\n      const isNAIUser = yearsInItaly === 'less1' || yearsInItaly === '1to2';\r\n      setIsNAI(isNAIUser);\r\n      console.log('NAI Status:', isNAIUser, 'Years:', yearsInItaly); // Debug\r\n    }\r\n\r\n    // Marca sezione completata\r\n    setSectionProgress(prev => ({\r\n      ...prev,\r\n      [currentSectionId]: true\r\n    }));\r\n\r\n    // Avanza alla sezione successiva\r\n    if (currentSection < testSections.length - 1) {\r\n      const nextSectionIndex = currentSection + 1;\r\n      const nextSectionId = testSections[nextSectionIndex].id;\r\n      \r\n      setCurrentSection(nextSectionIndex);\r\n      \r\n      // Carica domande per la prossima sezione\r\n      await loadSectionQuestions(nextSectionId);\r\n    } else {\r\n      // Test completato\r\n      await submitTest();\r\n    }\r\n  };\r\n\r\n  const loadSectionQuestions = async (sectionId) => {\r\n    setLoading(true);\r\n    try {\r\n      // Usa Mock Service per generare domande adattive\r\n      console.log('Caricamento sezione:', sectionId);\r\n      \r\n      const { MockQuestionService } = await import('./MockQuestionService');\r\n      const sectionQuestions = await MockQuestionService.generateSectionQuestions(sectionId, {\r\n        isNAI: isNAI,\r\n        motherLanguage: motherLanguage,\r\n        previousAnswers: answers\r\n      });\r\n      \r\n      console.log('Domande caricate per', sectionId, ':', sectionQuestions);\r\n      setCurrentQuestions(sectionQuestions);\r\n    } catch (error) {\r\n      console.error('Errore generazione domande sezione:', error);\r\n      \r\n      // FALLBACK: Usa domande hardcoded per la sezione\r\n      const fallbackQuestions = getFallbackQuestions(sectionId);\r\n      console.log('Usando fallback per', sectionId, ':', fallbackQuestions);\r\n      setCurrentQuestions(fallbackQuestions);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fallback domande per ogni sezione\r\n  const getFallbackQuestions = (sectionId) => {\r\n    const fallbacks = {\r\n      reading: [\r\n        {\r\n          id: 'reading_fallback_1',\r\n          type: 'reading_comprehension',\r\n          text: 'Maria √® una studentessa. Ha 20 anni e studia medicina. Ogni mattina va all\\'universit√†.',\r\n          subQuestions: [\r\n            {\r\n              id: 'reading_fallback_1_q1',\r\n              question: 'Che cosa studia Maria?',\r\n              options: [\r\n                { value: 'correct', text: 'Medicina', isCorrect: true },\r\n                { value: 'wrong1', text: 'Storia', isCorrect: false },\r\n                { value: 'wrong2', text: 'Matematica', isCorrect: false },\r\n                { value: 'wrong3', text: 'Arte', isCorrect: false }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      grammar: [\r\n        {\r\n          id: 'grammar_fallback_1',\r\n          type: 'grammar',\r\n          question: 'Completa: \"Io _____ italiano.\"',\r\n          options: [\r\n            { value: 'correct', text: 'sono', isCorrect: true },\r\n            { value: 'wrong1', text: 'sei', isCorrect: false },\r\n            { value: 'wrong2', text: '√®', isCorrect: false },\r\n            { value: 'wrong3', text: 'siamo', isCorrect: false }\r\n          ]\r\n        }\r\n      ],\r\n      writing: [\r\n        {\r\n          id: 'writing_fallback_1',\r\n          type: 'writing',\r\n          prompt: 'Presentati brevemente: scrivi il tuo nome e cosa ti piace fare.',\r\n          placeholder: 'Mi chiamo...',\r\n          minWords: 20,\r\n          minRows: 3\r\n        }\r\n      ],\r\n      speaking: [\r\n        {\r\n          id: 'speaking_fallback_1',\r\n          type: 'speaking',\r\n          prompt: 'Presentati: di\\' il tuo nome e la tua et√†.',\r\n          maxDuration: 30\r\n        }\r\n      ]\r\n    };\r\n    \r\n    return fallbacks[sectionId] || [];\r\n  };\r\n\r\n  // ALGORITMO DI SCORING QCER AVANZATO - FIXED\r\n  const calculateQCERLevel = async () => {\r\n    try {\r\n      console.log('üîç === INIZIO CALCOLO QCER ===');\r\n      \r\n      // Valuta risposte di scrittura e parlato con Mock AI\r\n      const { MockQuestionService, QCERScoring } = await import('./MockQuestionService');\r\n      \r\n      // Crea una copia delle risposte per non modificare l'originale\r\n      const evaluatedAnswers = { ...answers };\r\n      \r\n      // Valuta scrittura\r\n      console.log('üìù Valutazione sezione scrittura...');\r\n      for (let key of Object.keys(evaluatedAnswers)) {\r\n        if (key.includes('writing') && typeof evaluatedAnswers[key] === 'string') {\r\n          try {\r\n            const evaluation = await MockQuestionService.evaluateWriting(evaluatedAnswers[key], 'A1');\r\n            evaluatedAnswers[key] = { \r\n              score: evaluation.score, \r\n              text: evaluatedAnswers[key],\r\n              feedback: evaluation.feedback || '',\r\n              suggestedLevel: evaluation.suggestedLevel || 'A1'\r\n            };\r\n            console.log('‚úÖ Scrittura valutata:', key, 'Score:', evaluation.score);\r\n          } catch (evalError) {\r\n            console.warn('‚ö†Ô∏è Errore valutazione scrittura:', evalError);\r\n            evaluatedAnswers[key] = { score: 0.5, text: evaluatedAnswers[key] };\r\n          }\r\n        }\r\n        \r\n        // Valuta parlato\r\n        if (key.includes('speaking') && typeof evaluatedAnswers[key] === 'object' && evaluatedAnswers[key]) {\r\n          try {\r\n            if (evaluatedAnswers[key].skipped) {\r\n              evaluatedAnswers[key].score = 0.5;\r\n              console.log('‚è≠Ô∏è Parlato saltato:', key);\r\n            } else if (evaluatedAnswers[key].audioBlob) {\r\n              const evaluation = await MockQuestionService.evaluateSpeaking(evaluatedAnswers[key], 'A1');\r\n              evaluatedAnswers[key] = { ...evaluatedAnswers[key], score: evaluation.score };\r\n              console.log('‚úÖ Parlato valutato:', key, 'Score:', evaluation.score);\r\n            }\r\n          } catch (evalError) {\r\n            console.warn('‚ö†Ô∏è Errore valutazione parlato:', evalError);\r\n            evaluatedAnswers[key] = { ...evaluatedAnswers[key], score: 0.5 };\r\n          }\r\n        }\r\n      }\r\n\r\n      // Calcola livello QCER finale con logging dettagliato\r\n      console.log('üßÆ Calcolo livello finale...');\r\n      const levelResult = QCERScoring.calculateLevel(evaluatedAnswers);\r\n      \r\n      // Verifica che il risultato sia valido\r\n      if (!levelResult || typeof levelResult !== 'object') {\r\n        throw new Error('QCERScoring ha restituito un risultato non valido');\r\n      }\r\n      \r\n      const finalLevel = levelResult.level || levelResult;\r\n      console.log('üéØ Livello finale calcolato:', finalLevel);\r\n      \r\n      // Verifica che sia un livello QCER valido\r\n      const validLevels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];\r\n      if (!validLevels.includes(finalLevel)) {\r\n        console.warn('‚ö†Ô∏è Livello non valido, uso A1:', finalLevel);\r\n        return 'A1';\r\n      }\r\n      \r\n      return finalLevel;\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Errore calcolo QCER, uso algoritmo fallback:', error);\r\n      \r\n      // ALGORITMO FALLBACK SEMPLIFICATO\r\n      console.log('üîß === ALGORITMO FALLBACK ===');\r\n      \r\n      const sectionScores = {\r\n        reading: 0,\r\n        grammar: 0,\r\n        writing: 0,\r\n        speaking: 0\r\n      };\r\n\r\n      // Calcola punteggi per sezione\r\n      Object.keys(sectionScores).forEach(section => {\r\n        const sectionAnswers = Object.keys(answers)\r\n          .filter(key => key.includes(section))\r\n          .map(key => answers[key]);\r\n        \r\n        console.log(`üìä Sezione ${section}:`, sectionAnswers.length, 'risposte');\r\n        \r\n        if (sectionAnswers.length > 0) {\r\n          const correctAnswers = sectionAnswers.filter(answer => {\r\n            if (typeof answer === 'object' && answer.isCorrect) return true;\r\n            if (answer === 'correct') return true;\r\n            if (typeof answer === 'object' && answer.score && answer.score > 0.6) return true;\r\n            if (typeof answer === 'string' && answer.length > 10) return true; // Testi scritti\r\n            return false;\r\n          }).length;\r\n          \r\n          sectionScores[section] = (correctAnswers / sectionAnswers.length) * 100;\r\n        } else {\r\n          sectionScores[section] = 50; // Neutro se nessuna risposta\r\n        }\r\n      });\r\n\r\n      console.log('üìä FALLBACK - Punteggi sezioni:', sectionScores);\r\n\r\n      // Media ponderata\r\n      const totalScore = (\r\n        sectionScores.reading * 0.25 +\r\n        sectionScores.grammar * 0.35 +\r\n        sectionScores.writing * 0.25 +\r\n        sectionScores.speaking * 0.15\r\n      );\r\n\r\n      console.log('üéØ FALLBACK - Punteggio totale:', totalScore + '%');\r\n\r\n      // Mapping conservativo per studenti NAI\r\n      if (totalScore >= 85) return 'C1';\r\n      if (totalScore >= 75) return 'B2';\r\n      if (totalScore >= 65) return 'B1';\r\n      if (totalScore >= 45) return 'A2';\r\n      return 'A1';\r\n    }\r\n  };\r\n\r\n  // INVIO TEST E ASSEGNAZIONE CINTURA - FIXED\r\n  const submitTest = async () => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      console.log('üéØ Inizio calcolo livello QCER...');\r\n      let qcerLevel = await calculateQCERLevel();\r\n      console.log('‚úÖ Livello calcolato:', qcerLevel);\r\n      \r\n      // CONTROLLO SICUREZZA: Verifica che il livello sia valido\r\n      if (!qcerLevel || !qcerToBelt[qcerLevel]) {\r\n        console.warn('‚ö†Ô∏è Livello non valido, uso A1 di default');\r\n        qcerLevel = 'A1';\r\n      }\r\n      \r\n      const assignedBelt = qcerToBelt[qcerLevel];\r\n      console.log('ü•ã Cintura assegnata:', assignedBelt);\r\n      \r\n      // Verifica che la cintura sia valida\r\n      if (!assignedBelt || !assignedBelt.belt) {\r\n        console.error('‚ùå Errore nella mappatura cintura');\r\n        throw new Error('Errore nella mappatura cintura per livello: ' + qcerLevel);\r\n      }\r\n\r\n      // Salva risultati nel database\r\n      const testResults = {\r\n        answers,\r\n        qcerLevel,\r\n        belt: assignedBelt.belt,\r\n        beltName: assignedBelt.name,\r\n        beltColor: assignedBelt.color,\r\n        isNAI,\r\n        motherLanguage,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      console.log('üíæ Salvataggio risultati test:', testResults);\r\n\r\n      // Aggiorna profilo utente\r\n      await updateUserProfile(qcerLevel, assignedBelt);\r\n      \r\n      console.log('üöÄ Reindirizzamento a dashboard...');\r\n      \r\n      // Reindirizza con celebrazione cintura\r\n      navigate('/dashboard', { \r\n        state: { \r\n          newBelt: assignedBelt,\r\n          qcerLevel,\r\n          isFirstTest: true,\r\n          testResults: testResults\r\n        }\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Errore salvataggio test:', error);\r\n      \r\n      // FALLBACK: Usa livello A1 se tutto fallisce\r\n      console.log('üîß Applicando fallback A1...');\r\n      \r\n      const fallbackBelt = qcerToBelt['A1'];\r\n      \r\n      navigate('/dashboard', { \r\n        state: { \r\n          newBelt: fallbackBelt,\r\n          qcerLevel: 'A1',\r\n          isFirstTest: true,\r\n          error: 'Test completato con valutazione di base'\r\n        }\r\n      });\r\n      \r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUserProfile = async (qcerLevel, belt) => {\r\n    try {\r\n      console.log('Aggiornamento profilo:', {\r\n        qcerLevel,\r\n        currentBelt: belt.belt,\r\n        testCompletedAt: new Date().toISOString()\r\n      });\r\n    } catch (error) {\r\n      console.error('Errore aggiornamento profilo:', error);\r\n    }\r\n  };\r\n\r\n  // Funzione per verificare se si pu√≤ procedere\r\n  const canProceed = () => {\r\n    const currentSectionId = testSections[currentSection]?.id;\r\n    \r\n    if (currentSection === 0) {\r\n      // Sezione demografica\r\n      const hasYearsAnswer = answers.years_italy;\r\n      const hasLanguageIfNAI = !isNAI || motherLanguage;\r\n      \r\n      console.log('CanProceed check:', {\r\n        hasYearsAnswer,\r\n        isNAI,\r\n        motherLanguage,\r\n        hasLanguageIfNAI,\r\n        result: hasYearsAnswer && hasLanguageIfNAI\r\n      });\r\n      \r\n      return hasYearsAnswer && hasLanguageIfNAI;\r\n    }\r\n    \r\n    // Per altre sezioni, verifica che ci siano risposte\r\n    const sectionAnswers = Object.keys(answers).filter(key => \r\n      key.includes(currentSectionId) || \r\n      key.startsWith(currentSectionId)\r\n    );\r\n    \r\n    const requiredAnswers = currentQuestions.length;\r\n    const canPass = sectionAnswers.length >= Math.max(1, requiredAnswers * 0.5);\r\n    \r\n    console.log('CanProceed other section:', {\r\n      currentSectionId,\r\n      sectionAnswers: sectionAnswers.length,\r\n      requiredAnswers,\r\n      canPass\r\n    });\r\n    \r\n    return canPass;\r\n  };\r\n\r\n  // Rendering sezione demografica\r\n  const renderDemographicSection = () => (\r\n    <div className=\"test-section\">\r\n      <h3>Informazioni di Base</h3>\r\n      <div className=\"demographic-questions\">\r\n        {currentQuestions.map((question, index) => (\r\n          <div key={question.id} className=\"question-container\">\r\n            <p className=\"question-text\">{question.question}</p>\r\n            <div className=\"options-grid\">\r\n              {question.options.map(option => (\r\n                <button\r\n                  key={option.value}\r\n                  className={answers[question.id] === option.value ? 'selected' : ''}\r\n                  onClick={() => handleAnswer(question.id, option.value)}\r\n                >\r\n                  {option.text}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        \r\n        {/* Selezione lingua madre per NAI */}\r\n        {isNAI && (\r\n          <div className=\"language-selection\">\r\n            <h4>Qual √® la tua lingua madre?</h4>\r\n            <p className=\"language-note\">Questa informazione ci aiuta a personalizzare il test</p>\r\n            <div className=\"language-grid\">\r\n              {supportedLanguages.map(lang => (\r\n                <button\r\n                  key={lang.code}\r\n                  className={motherLanguage === lang.code ? 'selected' : ''}\r\n                  onClick={() => {\r\n                    setMotherLanguage(lang.code);\r\n                    console.log('Lingua selezionata:', lang.name);\r\n                  }}\r\n                >\r\n                  {lang.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Rendering sezioni competenze QCER\r\n  const renderSkillSection = () => {\r\n    const section = testSections[currentSection];\r\n    \r\n    return (\r\n      <div className=\"test-section\">\r\n        <h3>{section.name}</h3>\r\n        <div className=\"section-progress\">\r\n          Sezione {currentSection + 1} di {testSections.length}\r\n        </div>\r\n        \r\n        <div className=\"questions-container\">\r\n          {/* Debug: mostra quante domande ci sono */}\r\n          {currentQuestions.length === 0 && (\r\n            <div style={{background: '#ffebee', padding: '20px', border: '1px solid #f44336', borderRadius: '8px', margin: '20px 0'}}>\r\n              <h4 style={{color: '#d32f2f'}}>‚ö†Ô∏è Nessuna domanda caricata</h4>\r\n              <p>Sezione: {testSections[currentSection]?.id}</p>\r\n              <p>Numero domande: {currentQuestions.length}</p>\r\n              <button \r\n                onClick={() => {\r\n                  console.log('Force loading fallback...');\r\n                  setCurrentQuestions(getFallbackQuestions(testSections[currentSection]?.id));\r\n                }}\r\n                style={{background: '#f44336', color: 'white', border: 'none', padding: '10px 20px', borderRadius: '4px'}}\r\n              >\r\n                üîÑ Forza Caricamento Domande\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {currentQuestions.map((question, index) => (\r\n            <div key={question.id} className=\"question-block\">\r\n              {/* Rendering basato sul tipo di domanda */}\r\n              {question.type === 'reading_comprehension' && (\r\n                <div className=\"reading-question\">\r\n                  <div className=\"reading-text\">{question.text}</div>\r\n                  <div className=\"comprehension-questions\">\r\n                    {question.subQuestions.map(subQ => (\r\n                      <div key={subQ.id} className=\"sub-question\">\r\n                        <p>{subQ.question}</p>\r\n                        <div className=\"options-grid\">\r\n                          {subQ.options.map(option => (\r\n                            <button\r\n                              key={option.value}\r\n                              className={answers[subQ.id] === option.value ? 'selected' : ''}\r\n                              onClick={() => handleAnswer(subQ.id, option.value)}\r\n                            >\r\n                              {option.text}\r\n                            </button>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {question.type === 'grammar' && (\r\n                <div className=\"grammar-question\">\r\n                  <p>{question.question}</p>\r\n                  <div className=\"options-grid\">\r\n                    {question.options.map(option => (\r\n                      <button\r\n                        key={option.value}\r\n                        className={answers[question.id] === option.value ? 'selected' : ''}\r\n                        onClick={() => handleAnswer(question.id, option.value)}\r\n                      >\r\n                        {option.text}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {question.type === 'writing' && (\r\n                <div className=\"writing-question\">\r\n                  <p>{question.prompt}</p>\r\n                  <textarea\r\n                    placeholder={question.placeholder}\r\n                    value={answers[question.id] || ''}\r\n                    onChange={(e) => handleAnswer(question.id, e.target.value)}\r\n                    rows={question.minRows || 4}\r\n                  />\r\n                  <div className=\"word-count\">\r\n                    Parole: {(answers[question.id] || '').split(' ').filter(w => w).length}\r\n                    {question.minWords && ` (minimo: ${question.minWords})`}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {question.type === 'speaking' && (\r\n                <div className=\"speaking-question\">\r\n                  <p>{question.prompt}</p>\r\n                  <SpeakingRecorder \r\n                    questionId={question.id}\r\n                    onRecordingComplete={(audioData) => handleAnswer(question.id, audioData)}\r\n                    maxDuration={question.maxDuration || 60}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Progress tracker migliorato\r\n  const renderProgressTracker = () => (\r\n    <div className=\"progress-tracker-qcer\">\r\n      {testSections.map((section, index) => (\r\n        <div key={section.id} className=\"progress-section\">\r\n          <div className={`progress-step ${\r\n            index < currentSection ? 'completed' : \r\n            index === currentSection ? 'active' : 'pending'\r\n          }`}>\r\n            {index < currentSection ? '‚úì' : index + 1}\r\n          </div>\r\n          <span className=\"section-name\">{section.name}</span>\r\n          {index < testSections.length - 1 && <div className=\"progress-line\" />}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  // Loading con messaggi dinamici\r\n  const renderLoading = () => (\r\n    <div className=\"loading-container\">\r\n      <div className=\"loading-spinner\" />\r\n      <p>\r\n        {currentSection === 0 ? 'Caricamento test...' :\r\n         currentSection < testSections.length ? 'Generazione domande adattive...' :\r\n         'Analisi risultati e assegnazione cintura...'}\r\n      </p>\r\n      {currentSection === testSections.length && (\r\n        <div className=\"belt-preview\">\r\n          <p>Preparazione della tua cintura karate...</p>\r\n          <div className=\"belt-animation\">ü•ã</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"test-ingresso-container qcer-enhanced\">\r\n      <header className=\"test-header\">\r\n        <h2>Test di Livello QCER</h2>\r\n        <p className=\"test-description\">\r\n          Questo test determiner√† il tuo livello secondo il Quadro Comune Europeo \r\n          e ti assegner√† la cintura karate corrispondente per iniziare il tuo percorso.\r\n        </p>\r\n      </header>\r\n      \r\n      {renderProgressTracker()}\r\n      \r\n      {loading ? renderLoading() : (\r\n        <div className=\"test-content\">\r\n          {currentSection === 0 ? renderDemographicSection() : renderSkillSection()}\r\n          \r\n          <div className=\"section-navigation\">\r\n            {currentSection > 0 && (\r\n              <button \r\n                className=\"back-button\"\r\n                onClick={() => setCurrentSection(currentSection - 1)}\r\n              >\r\n                Indietro\r\n              </button>\r\n            )}\r\n            \r\n            <button\r\n              className=\"next-button\"\r\n              onClick={nextSection}\r\n              disabled={!canProceed()}\r\n            >\r\n              {currentSection === testSections.length - 1 ? 'Completa Test' : 'Continua'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// COMPONENTE SPEAKING RECORDER MIGLIORATO\r\nconst SpeakingRecorder = ({ questionId, onRecordingComplete, maxDuration }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [audioURL, setAudioURL] = useState(null);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [recordingTime, setRecordingTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isRecording) {\r\n      interval = setInterval(() => {\r\n        setRecordingTime(time => time + 1);\r\n      }, 1000);\r\n    } else {\r\n      setRecordingTime(0);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isRecording]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      // Controlla se il browser supporta getUserMedia\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error('Il tuo browser non supporta la registrazione audio');\r\n      }\r\n\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const recorder = new MediaRecorder(stream);\r\n      const chunks = [];\r\n\r\n      recorder.ondataavailable = (event) => chunks.push(event.data);\r\n      recorder.onstop = () => {\r\n        const audioBlob = new Blob(chunks, { type: 'audio/wav' });\r\n        const audioUrl = URL.createObjectURL(audioBlob);\r\n        setAudioURL(audioUrl);\r\n        onRecordingComplete({\r\n          audioBlob,\r\n          audioUrl,\r\n          duration: recordingTime * 1000\r\n        });\r\n        \r\n        // Stoppa lo stream per liberare il microfono\r\n        stream.getTracks().forEach(track => track.stop());\r\n      };\r\n\r\n      recorder.start();\r\n      setMediaRecorder(recorder);\r\n      setIsRecording(true);\r\n      setHasError(false);\r\n      setRecordingTime(0);\r\n\r\n      // Auto-stop dopo maxDuration\r\n      setTimeout(() => {\r\n        if (recorder.state === 'recording') {\r\n          stopRecording();\r\n        }\r\n      }, maxDuration * 1000);\r\n\r\n    } catch (error) {\r\n      console.error('Errore accesso microfono:', error);\r\n      setHasError(true);\r\n      \r\n      if (error.name === 'NotAllowedError') {\r\n        setErrorMessage('Accesso al microfono negato. Abilita il microfono nelle impostazioni del browser.');\r\n      } else if (error.name === 'NotFoundError') {\r\n        setErrorMessage('Nessun microfono trovato. Collega un microfono e riprova.');\r\n      } else {\r\n        setErrorMessage('Errore microfono: ' + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n      mediaRecorder.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const skipSpeaking = () => {\r\n    // Fornisce un punteggio neutro per chi salta la sezione parlato\r\n    console.log('üîá Sezione parlato saltata per:', questionId);\r\n    onRecordingComplete({\r\n      audioBlob: null,\r\n      audioUrl: null,\r\n      duration: 0,\r\n      score: 0.5,\r\n      skipped: true\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"speaking-recorder\">\r\n      {hasError ? (\r\n        <div className=\"recording-error\">\r\n          <p className=\"error-message\">‚ö†Ô∏è {errorMessage}</p>\r\n          <div className=\"error-actions\">\r\n            <button \r\n              className=\"retry-button\"\r\n              onClick={() => {\r\n                setHasError(false);\r\n                setErrorMessage('');\r\n              }}\r\n            >\r\n              üîÑ Riprova\r\n            </button>\r\n            <button \r\n              className=\"skip-button\"\r\n              onClick={skipSpeaking}\r\n            >\r\n              ‚è≠Ô∏è Salta Sezione Parlato\r\n            </button>\r\n          </div>\r\n          <p className=\"skip-note\">\r\n            Nota: Saltando la sezione parlato, il test sar√† meno preciso ma potrai comunque ottenere una valutazione.\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"recording-info\">\r\n            <p>üìã Hai <strong>{maxDuration} secondi</strong> per rispondere.</p>\r\n            <p>üí° Parla chiaramente verso il microfono</p>\r\n          </div>\r\n\r\n          <div className=\"recording-controls\">\r\n            {!isRecording && !audioURL ? (\r\n              <div className=\"recording-start\">\r\n                <button \r\n                  className=\"record-button\"\r\n                  onClick={startRecording}\r\n                >\r\n                  üé§ Inizia Registrazione\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"skip-speaking-button\"\r\n                  onClick={skipSpeaking}\r\n                  style={{ \r\n                    marginTop: '15px', \r\n                    backgroundColor: '#6c757d', \r\n                    color: 'white',\r\n                    border: 'none',\r\n                    padding: '8px 16px',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  ‚è≠Ô∏è Salta questa sezione\r\n                </button>\r\n              </div>\r\n            ) : isRecording ? (\r\n              <div className=\"recording-active\">\r\n                <div className=\"recording-indicator\">\r\n                  <div className=\"pulse-dot\" style={{\r\n                    width: '10px',\r\n                    height: '10px',\r\n                    backgroundColor: '#ff0000',\r\n                    borderRadius: '50%',\r\n                    display: 'inline-block',\r\n                    marginRight: '8px',\r\n                    animation: 'pulse 1s infinite'\r\n                  }}></div>\r\n                  <span>üî¥ Registrazione in corso...</span>\r\n                </div>\r\n                \r\n                <div className=\"timer\">\r\n                  Tempo: {recordingTime}s / {maxDuration}s\r\n                </div>\r\n\r\n                <button \r\n                  className=\"stop-button\"\r\n                  onClick={stopRecording}\r\n                  style={{\r\n                    backgroundColor: '#dc3545',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    padding: '10px 20px',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                    marginTop: '10px'\r\n                  }}\r\n                >\r\n                  ‚èπÔ∏è Ferma Registrazione\r\n                </button>\r\n              </div>\r\n            ) : audioURL ? (\r\n              <div className=\"recording-complete\">\r\n                <p>‚úÖ Registrazione completata!</p>\r\n                \r\n                <div className=\"audio-controls\">\r\n                  <audio controls src={audioURL} style={{ width: '100%', marginBottom: '10px' }} />\r\n                </div>\r\n\r\n                <div className=\"action-buttons\">\r\n                  <button \r\n                    className=\"re-record-button\"\r\n                    onClick={() => {\r\n                      setAudioURL(null);\r\n                      setIsRecording(false);\r\n                      setRecordingTime(0);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: '#ffc107',\r\n                      color: '#212529',\r\n                      border: 'none',\r\n                      padding: '8px 16px',\r\n                      borderRadius: '4px',\r\n                      cursor: 'pointer',\r\n                      marginRight: '10px'\r\n                    }}\r\n                  >\r\n                    üîÑ Registra di Nuovo\r\n                  </button>\r\n                  \r\n                  <button \r\n                    className=\"skip-button\"\r\n                    onClick={skipSpeaking}\r\n                    style={{\r\n                      backgroundColor: '#6c757d',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      padding: '8px 16px',\r\n                      borderRadius: '4px',\r\n                      cursor: 'pointer'\r\n                    }}\r\n                  >\r\n                    ‚è≠Ô∏è Salta comunque\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          \r\n          {!audioURL && !isRecording && (\r\n            <div className=\"speaking-help\">\r\n              <p style={{ fontSize: '14px', color: '#6c757d', marginTop: '15px' }}>\r\n                ‚ö†Ô∏è Se non hai microfono disponibile, puoi saltare questa sezione\r\n              </p>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      \r\n      <style jsx>{`\r\n        @keyframes pulse {\r\n          0% { opacity: 1; }\r\n          50% { opacity: 0.5; }\r\n          100% { opacity: 1; }\r\n        }\r\n        \r\n        .speaking-recorder {\r\n          border: 1px solid #ddd;\r\n          border-radius: 8px;\r\n          padding: 20px;\r\n          margin: 10px 0;\r\n          background-color: #f9f9f9;\r\n        }\r\n        \r\n        .recording-info {\r\n          margin-bottom: 15px;\r\n          padding: 10px;\r\n          background-color: #e3f2fd;\r\n          border-radius: 4px;\r\n        }\r\n        \r\n        .recording-error {\r\n          padding: 15px;\r\n          background-color: #ffebee;\r\n          border: 1px solid #f44336;\r\n          border-radius: 4px;\r\n        }\r\n        \r\n        .error-message {\r\n          color: #d32f2f;\r\n          font-weight: bold;\r\n          margin-bottom: 10px;\r\n        }\r\n        \r\n        .record-button {\r\n          background-color: #28a745;\r\n          color: white;\r\n          border: none;\r\n          padding: 12px 24px;\r\n          border-radius: 6px;\r\n          font-size: 16px;\r\n          cursor: pointer;\r\n          transition: background-color 0.2s;\r\n        }\r\n        \r\n        .record-button:hover {\r\n          background-color: #218838;\r\n        }\r\n        \r\n        .recording-active {\r\n          text-align: center;\r\n          padding: 20px;\r\n        }\r\n        \r\n        .recording-indicator {\r\n          font-size: 18px;\r\n          margin-bottom: 10px;\r\n        }\r\n        \r\n        .timer {\r\n          font-size: 16px;\r\n          margin-bottom: 15px;\r\n          color: #dc3545;\r\n          font-weight: bold;\r\n        }\r\n        \r\n        .recording-complete {\r\n          text-align: center;\r\n        }\r\n        \r\n        .action-buttons {\r\n          margin-top: 15px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestIngresso;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}