{"ast":null,"code":"// Mock Question Service per Test QCER\n// Questo simula il database e l'AI Service\n\nconst mockQuestionBank = {\n  demographic: [{\n    id: 'years_italy',\n    type: 'multiple_choice',\n    question: 'Da quanti anni sei in Italia?',\n    options: [{\n      value: 'less1',\n      text: 'Meno di 1 anno'\n    }, {\n      value: '1to2',\n      text: '1-2 anni'\n    }, {\n      value: 'more2',\n      text: 'Più di 2 anni'\n    }, {\n      value: 'born',\n      text: 'Sono nato/a in Italia'\n    }]\n  }],\n  reading: [\n  // Livello A1-A2\n  {\n    id: 'reading_1',\n    type: 'reading_comprehension',\n    level: 'A1',\n    text: `Maria è una studentessa italiana. Ha 20 anni e studia medicina all'università di Roma. \n             Ogni mattina si alza alle 7:00 e fa colazione con caffè e cornetti. \n             Poi va all'università in autobus. Le piacciono molto gli studi e vuole diventare medico.`,\n    subQuestions: [{\n      id: 'reading_1_q1',\n      question: 'Che cosa studia Maria?',\n      options: [{\n        value: 'correct',\n        text: 'Medicina',\n        isCorrect: true\n      }, {\n        value: 'wrong1',\n        text: 'Letteratura',\n        isCorrect: false\n      }, {\n        value: 'wrong2',\n        text: 'Storia',\n        isCorrect: false\n      }, {\n        value: 'wrong3',\n        text: 'Matematica',\n        isCorrect: false\n      }]\n    }, {\n      id: 'reading_1_q2',\n      question: 'A che ora si alza Maria?',\n      options: [{\n        value: 'correct',\n        text: 'Alle 7:00',\n        isCorrect: true\n      }, {\n        value: 'wrong1',\n        text: 'Alle 8:00',\n        isCorrect: false\n      }, {\n        value: 'wrong2',\n        text: 'Alle 6:00',\n        isCorrect: false\n      }, {\n        value: 'wrong3',\n        text: 'Alle 9:00',\n        isCorrect: false\n      }]\n    }]\n  },\n  // Livello B1-B2\n  {\n    id: 'reading_2',\n    type: 'reading_comprehension',\n    level: 'B1',\n    text: `L'immigrazione in Italia ha trasformato significativamente il panorama sociale del paese \n             negli ultimi decenni. Molte persone provenienti da diverse parti del mondo hanno scelto \n             l'Italia come nuova casa, portando con sé tradizioni culturali, linguistiche e culinarie \n             che hanno arricchito la società italiana. Tuttavia, questo processo non è stato privo di \n             sfide: l'integrazione richiede tempo, comprensione reciproca e politiche adeguate che \n             favoriscano l'inclusione sociale ed economica.`,\n    subQuestions: [{\n      id: 'reading_2_q1',\n      question: 'Secondo il testo, l\\'immigrazione in Italia ha:',\n      options: [{\n        value: 'correct',\n        text: 'Trasformato il panorama sociale',\n        isCorrect: true\n      }, {\n        value: 'wrong1',\n        text: 'Causato solo problemi',\n        isCorrect: false\n      }, {\n        value: 'wrong2',\n        text: 'Ridotto la diversità culturale',\n        isCorrect: false\n      }, {\n        value: 'wrong3',\n        text: 'Interessato solo le grandi città',\n        isCorrect: false\n      }]\n    }, {\n      id: 'reading_2_q2',\n      question: 'L\\'integrazione richiede:',\n      options: [{\n        value: 'correct',\n        text: 'Tempo e comprensione reciproca',\n        isCorrect: true\n      }, {\n        value: 'wrong1',\n        text: 'Solo politiche governative',\n        isCorrect: false\n      }, {\n        value: 'wrong2',\n        text: 'L\\'abbandono delle tradizioni d\\'origine',\n        isCorrect: false\n      }, {\n        value: 'wrong3',\n        text: 'Cambiamenti solo da parte degli immigrati',\n        isCorrect: false\n      }]\n    }]\n  },\n  // Livello C1-C2\n  {\n    id: 'reading_3',\n    type: 'reading_comprehension',\n    level: 'C1',\n    text: `La questione del multilinguismo nelle società contemporanee solleva interrogativi complessi \n             che vanno ben oltre la mera pratica comunicativa. Nel contesto globalizzato odierno, \n             la capacità di padroneggiare più lingue non rappresenta soltanto un vantaggio competitivo \n             nel mercato del lavoro, ma costituisce un elemento fondamentale per la costruzione \n             dell'identità individuale e collettiva. La ricerca neurolinguistica ha dimostrato che \n             il cervello multilingue sviluppa capacità cognitive superiori, inclusa una maggiore \n             flessibilità mentale e una migliore capacità di problem-solving. Tuttavia, permane \n             il dibattito sui potenziali rischi di erosione delle lingue minoritarie in favore \n             di quelle dominanti a livello internazionale.`,\n    subQuestions: [{\n      id: 'reading_3_q1',\n      question: 'Secondo il testo, il multilinguismo:',\n      options: [{\n        value: 'correct',\n        text: 'Contribuisce alla costruzione dell\\'identità',\n        isCorrect: true\n      }, {\n        value: 'wrong1',\n        text: 'È utile solo per il lavoro',\n        isCorrect: false\n      }, {\n        value: 'wrong2',\n        text: 'Causa confusione cognitiva',\n        isCorrect: false\n      }, {\n        value: 'wrong3',\n        text: 'Non ha effetti sul cervello',\n        isCorrect: false\n      }]\n    }, {\n      id: 'reading_3_q2',\n      question: 'Il dibattito sulle lingue minoritarie riguarda:',\n      options: [{\n        value: 'correct',\n        text: 'Il rischio di erosione a favore di lingue dominanti',\n        isCorrect: true\n      }, {\n        value: 'wrong1',\n        text: 'La loro maggiore difficoltà di apprendimento',\n        isCorrect: false\n      }, {\n        value: 'wrong2',\n        text: 'L\\'impossibilità di insegnarle',\n        isCorrect: false\n      }, {\n        value: 'wrong3',\n        text: 'La loro inutilità nel mondo moderno',\n        isCorrect: false\n      }]\n    }]\n  }],\n  grammar: [\n  // Livello A1\n  {\n    id: 'grammar_1',\n    type: 'grammar',\n    level: 'A1',\n    question: 'Completa la frase: \"Io _____ italiano.\"',\n    options: [{\n      value: 'correct',\n      text: 'sono',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'sei',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'è',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'siamo',\n      isCorrect: false\n    }]\n  }, {\n    id: 'grammar_2',\n    type: 'grammar',\n    level: 'A1',\n    question: 'Scegli l\\'articolo corretto: \"_____ casa è bella.\"',\n    options: [{\n      value: 'correct',\n      text: 'La',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'Il',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'Lo',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'Le',\n      isCorrect: false\n    }]\n  },\n  // Livello A2\n  {\n    id: 'grammar_3',\n    type: 'grammar',\n    level: 'A2',\n    question: 'Ieri io _____ al cinema.',\n    options: [{\n      value: 'correct',\n      text: 'sono andato/a',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'vado',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'andrò',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'andare',\n      isCorrect: false\n    }]\n  }, {\n    id: 'grammar_4',\n    type: 'grammar',\n    level: 'A2',\n    question: 'Se _____ bel tempo, andiamo al mare.',\n    options: [{\n      value: 'correct',\n      text: 'fa',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'farà',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'faceva',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'fare',\n      isCorrect: false\n    }]\n  },\n  // Livello B1\n  {\n    id: 'grammar_5',\n    type: 'grammar',\n    level: 'B1',\n    question: 'Benché _____ stanco, continuerò a lavorare.',\n    options: [{\n      value: 'correct',\n      text: 'sia',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'sono',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'ero',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'sarò',\n      isCorrect: false\n    }]\n  }, {\n    id: 'grammar_6',\n    type: 'grammar',\n    level: 'B1',\n    question: 'Il libro _____ ho letto è molto interessante.',\n    options: [{\n      value: 'correct',\n      text: 'che',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'cui',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'quale',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'dove',\n      isCorrect: false\n    }]\n  },\n  // Livello B2\n  {\n    id: 'grammar_7',\n    type: 'grammar',\n    level: 'B2',\n    question: 'Non appena _____ a casa, ti telefonerò.',\n    options: [{\n      value: 'correct',\n      text: 'sarò arrivato',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'arrivo',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'arrivavo',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'sono arrivato',\n      isCorrect: false\n    }]\n  },\n  // Livello C1\n  {\n    id: 'grammar_8',\n    type: 'grammar',\n    level: 'C1',\n    question: 'Qualora _____ problemi, non esitate a contattarmi.',\n    options: [{\n      value: 'correct',\n      text: 'doveste avere',\n      isCorrect: true\n    }, {\n      value: 'wrong1',\n      text: 'avete',\n      isCorrect: false\n    }, {\n      value: 'wrong2',\n      text: 'avrete',\n      isCorrect: false\n    }, {\n      value: 'wrong3',\n      text: 'avreste',\n      isCorrect: false\n    }]\n  }],\n  writing: [{\n    id: 'writing_1',\n    type: 'writing',\n    level: 'A1',\n    prompt: 'Presentati brevemente: scrivi il tuo nome, età, da dove vieni e cosa ti piace fare.',\n    placeholder: 'Ciao, io sono...',\n    minWords: 30,\n    minRows: 3\n  }, {\n    id: 'writing_2',\n    type: 'writing',\n    level: 'B1',\n    prompt: 'Descrivi una giornata tipica nella tua vita, dalle 7:00 del mattino alle 22:00 di sera.',\n    placeholder: 'La mia giornata inizia quando...',\n    minWords: 80,\n    minRows: 5\n  }, {\n    id: 'writing_3',\n    type: 'writing',\n    level: 'C1',\n    prompt: 'Esprimi la tua opinione sull\\'importanza dell\\'apprendimento delle lingue straniere nella società moderna, presentando argomenti a favore e possibili obiezioni.',\n    placeholder: 'L\\'apprendimento delle lingue straniere...',\n    minWords: 150,\n    minRows: 8\n  }],\n  speaking: [{\n    id: 'speaking_1',\n    type: 'speaking',\n    level: 'A1',\n    prompt: 'Presentati: di\\' il tuo nome, la tua età e di dove sei.',\n    maxDuration: 30\n  }, {\n    id: 'speaking_2',\n    type: 'speaking',\n    level: 'B1',\n    prompt: 'Descrivi la tua città natale: com\\'è, che cosa ti piace di più e cosa vorresti cambiare.',\n    maxDuration: 60\n  }, {\n    id: 'speaking_3',\n    type: 'speaking',\n    level: 'C1',\n    prompt: 'Spiega quale pensi sia il ruolo delle nuove tecnologie nell\\'educazione e come potrebbero cambiare l\\'apprendimento in futuro.',\n    maxDuration: 90\n  }]\n};\n\n// Sistema Avanzato di Valutazione Scrittura\nconst AdvancedWritingEvaluator = {\n  // Valutazione completa del testo\n  evaluateWriting: async (text, targetLevel = 'B1') => {\n    console.log('🔍 Analisi avanzata testo:', text.substring(0, 100) + '...');\n    const scores = {\n      orthography: AdvancedWritingEvaluator.analyzeOrthography(text),\n      morphology: AdvancedWritingEvaluator.analyzeMorphology(text),\n      syntax: AdvancedWritingEvaluator.analyzeSyntax(text),\n      lexicon: AdvancedWritingEvaluator.analyzeLexicon(text),\n      coherence: AdvancedWritingEvaluator.analyzeCoherence(text)\n    };\n\n    // Pesi per livello QCER\n    const weights = AdvancedWritingEvaluator.getWeightsByLevel(targetLevel);\n\n    // Calcolo score finale\n    const finalScore = Object.keys(scores).reduce((total, aspect) => {\n      return total + scores[aspect] * weights[aspect];\n    }, 0);\n    console.log('📊 Breakdown valutazione scrittura:');\n    Object.keys(scores).forEach(aspect => {\n      console.log(`  ${aspect}: ${(scores[aspect] * 100).toFixed(1)}%`);\n    });\n    console.log(`🎯 Score finale: ${(finalScore * 100).toFixed(1)}%`);\n    return {\n      score: Math.min(Math.max(finalScore, 0), 1),\n      breakdown: scores,\n      feedback: AdvancedWritingEvaluator.generateFeedback(scores, targetLevel),\n      suggestedLevel: AdvancedWritingEvaluator.suggestLevel(finalScore)\n    };\n  },\n  // 1. ANALISI ORTOGRAFICA\n  analyzeOrthography: text => {\n    const words = text.trim().split(/\\s+/);\n    let errors = 0;\n    const orthographicErrors = [/\\bperche\\b/gi, /\\bpuo\\b/gi, /\\bcioe\\b/gi, /\\bpiu\\b/gi, /\\bgia\\b/gi, /\\bperö\\b/gi, /\\w*[kxwyjq]\\w*/gi];\n    words.forEach(word => {\n      orthographicErrors.forEach(errorPattern => {\n        if (errorPattern.test(word)) errors++;\n      });\n    });\n    const errorRate = errors / Math.max(words.length, 1);\n    return Math.max(0, 1 - errorRate * 3);\n  },\n  // 2. ANALISI MORFOLOGICA\n  analyzeMorphology: text => {\n    let score = 1.0;\n    let errors = 0;\n    const morphologicalErrors = [/\\bil\\s+(?:casa|scuola|famiglia|vita)\\b/gi, /\\bla\\s+(?:uomo|bambino|lavoro)\\b/gi, /\\bun\\s+(?:amica|idea|università)\\b/gi, /\\bio\\s+(?:sei|è|siamo|sono)\\b/gi, /\\btu\\s+(?:sono|è|siamo)\\b/gi, /\\blui\\s+(?:sono|sei|siamo)\\b/gi, /\\bho\\s+(?:andata|partita|venuta)\\b/gi, /\\bio\\s+.*(?:are|ere|ire)\\b/gi, /\\bper\\s+(?:studia|lavora|mangia)\\b/gi, /\\bmio\\s+(?:sorella|famiglia|amica)\\b/gi, /\\btuo\\s+(?:sorella|famiglia|amica)\\b/gi, /\\bsuo\\s+(?:sorella|famiglia|amica)\\b/gi];\n    morphologicalErrors.forEach(errorPattern => {\n      const matches = text.match(errorPattern);\n      if (matches) {\n        errors += matches.length;\n        console.log(`🔴 Errore morfologico rilevato: ${matches[0]}`);\n      }\n    });\n    const words = text.trim().split(/\\s+/).length;\n    const errorDensity = errors / Math.max(words, 1);\n    score = Math.max(0, 1 - errorDensity * 4);\n    console.log(`📝 Morfologia: ${errors} errori su ${words} parole = ${(score * 100).toFixed(1)}%`);\n    return score;\n  },\n  // 3. ANALISI SINTATTICA\n  analyzeSyntax: text => {\n    let score = 1.0;\n    let issues = 0;\n    const syntaxIssues = [/\\bno\\s+(?:parlare|sapere|capire)\\b/gi, /\\bio\\s+no\\s+/gi, /\\bno\\s+ho\\b/gi, /\\bho\\s+(?:andato|venuto|partito)\\b/gi, /\\bsono\\s+(?:mangiato|studiato|lavorato)\\b/gi, /\\bvino\\s+(?:in|a)\\s+Italia/gi];\n    syntaxIssues.forEach(issuePattern => {\n      const matches = text.match(issuePattern);\n      if (matches) {\n        issues += matches.length;\n        console.log(`🔴 Problema sintattico: ${matches[0]}`);\n      }\n    });\n    const words = text.trim().split(/\\s+/).length;\n    const issueDensity = issues / Math.max(words, 1);\n    score = Math.max(0, 1 - issueDensity * 3);\n    console.log(`🔗 Sintassi: ${issues} problemi = ${(score * 100).toFixed(1)}%`);\n    return score;\n  },\n  // 4. ANALISI LESSICALE\n  analyzeLexicon: text => {\n    const words = text.toLowerCase().trim().split(/\\s+/).filter(w => w.length > 2);\n    const uniqueWords = new Set(words);\n    const lexicalRichness = uniqueWords.size / Math.max(words.length, 1);\n    const score = Math.max(0, lexicalRichness);\n    console.log(`📚 Lessico: ricchezza ${(lexicalRichness * 100).toFixed(1)}% = ${(score * 100).toFixed(1)}%`);\n    return score;\n  },\n  // 5. ANALISI COERENZA\n  analyzeCoherence: text => {\n    let score = 0.8;\n    console.log(`🎯 Coerenza: ${(score * 100).toFixed(1)}%`);\n    return score;\n  },\n  // Pesi per livello QCER\n  getWeightsByLevel: level => {\n    const weights = {\n      'A1': {\n        orthography: 0.25,\n        morphology: 0.35,\n        syntax: 0.25,\n        lexicon: 0.10,\n        coherence: 0.05\n      },\n      'A2': {\n        orthography: 0.20,\n        morphology: 0.30,\n        syntax: 0.30,\n        lexicon: 0.15,\n        coherence: 0.05\n      },\n      'B1': {\n        orthography: 0.15,\n        morphology: 0.25,\n        syntax: 0.30,\n        lexicon: 0.20,\n        coherence: 0.10\n      },\n      'B2': {\n        orthography: 0.10,\n        morphology: 0.20,\n        syntax: 0.30,\n        lexicon: 0.25,\n        coherence: 0.15\n      },\n      'C1': {\n        orthography: 0.05,\n        morphology: 0.15,\n        syntax: 0.25,\n        lexicon: 0.30,\n        coherence: 0.25\n      },\n      'C2': {\n        orthography: 0.05,\n        morphology: 0.10,\n        syntax: 0.20,\n        lexicon: 0.30,\n        coherence: 0.35\n      }\n    };\n    return weights[level] || weights['B1'];\n  },\n  // Suggerisce livello basato su score\n  suggestLevel: score => {\n    if (score >= 0.92) return 'C2';\n    if (score >= 0.82) return 'C1';\n    if (score >= 0.68) return 'B2';\n    if (score >= 0.52) return 'B1';\n    if (score >= 0.32) return 'A2';\n    return 'A1';\n  },\n  // Genera feedback personalizzato\n  generateFeedback: (scores, targetLevel) => {\n    const feedback = [];\n    if (scores.orthography < 0.7) {\n      feedback.push(\"⚠️ Concentrati sull'ortografia\");\n    }\n    if (scores.morphology < 0.6) {\n      feedback.push(\"📝 Lavora sulla morfologia\");\n    }\n    if (scores.syntax < 0.6) {\n      feedback.push(\"🔗 Migliora la sintassi\");\n    }\n    if (feedback.length === 0) {\n      feedback.push(\"🎉 Ottimo lavoro!\");\n    }\n    return feedback;\n  }\n};\n\n// Simulazione AI Service\nexport const MockQuestionService = {\n  // Genera banco domande iniziale\n  generateTestBank: async () => {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return mockQuestionBank;\n  },\n  // Genera domande per sezione specifica\n  generateSectionQuestions: async (sectionId, userProfile) => {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    const {\n      isNAI,\n      motherLanguage,\n      previousAnswers\n    } = userProfile;\n    switch (sectionId) {\n      case 'reading':\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.reading, previousAnswers, 3);\n      case 'grammar':\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.grammar, previousAnswers, 4);\n      case 'writing':\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.writing, previousAnswers, 2);\n      case 'speaking':\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.speaking, previousAnswers, 2);\n      default:\n        return [];\n    }\n  },\n  // Selezione adattiva domande\n  selectAdaptiveQuestions: (questionPool, previousAnswers, count) => {\n    const performanceScore = MockQuestionService.calculatePerformance(previousAnswers);\n    let targetLevel;\n    if (performanceScore > 0.8) targetLevel = ['B2', 'C1', 'C2'];else if (performanceScore > 0.6) targetLevel = ['B1', 'B2'];else if (performanceScore > 0.4) targetLevel = ['A2', 'B1'];else targetLevel = ['A1', 'A2'];\n    const filteredQuestions = questionPool.filter(q => !q.level || targetLevel.includes(q.level));\n    const shuffled = filteredQuestions.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  },\n  // Calcola performance dalle risposte precedenti\n  calculatePerformance: answers => {\n    const answerKeys = Object.keys(answers);\n    if (answerKeys.length === 0) return 0.5;\n    let correctCount = 0;\n    let totalCount = 0;\n    answerKeys.forEach(key => {\n      const answer = answers[key];\n      if (typeof answer === 'object' && answer.isCorrect !== undefined) {\n        totalCount++;\n        if (answer.isCorrect) correctCount++;\n      } else if (answer === 'correct') {\n        totalCount++;\n        correctCount++;\n      } else if (['wrong1', 'wrong2', 'wrong3'].includes(answer)) {\n        totalCount++;\n      }\n    });\n    return totalCount > 0 ? correctCount / totalCount : 0.5;\n  },\n  // Valuta risposta scritta con sistema avanzato\n  evaluateWriting: async (text, level) => {\n    console.log('🔍 === ANALISI AVANZATA SCRITTURA ===');\n    const result = await AdvancedWritingEvaluator.evaluateWriting(text, level);\n    console.log('📊 Risultato finale scrittura:');\n    console.log('  Score:', (result.score * 100).toFixed(1) + '%');\n    console.log('  Livello suggerito:', result.suggestedLevel);\n    console.log('=====================================');\n    return {\n      score: result.score,\n      feedback: result.feedback.join(' | '),\n      suggestedLevel: result.suggestedLevel,\n      breakdown: result.breakdown\n    };\n  },\n  // Valuta registrazione audio (simulata)\n  evaluateSpeaking: async (audioData, level) => {\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    const duration = audioData.duration || 5000;\n    const hasGoodDuration = duration > 10000 && duration < 120000;\n    let score = 0.6;\n    if (hasGoodDuration) score += 0.3;\n    return {\n      score: Math.min(score, 1.0),\n      feedback: score > 0.8 ? 'Eccellente pronuncia e fluidità!' : score > 0.6 ? 'Buona pronuncia, continua così!' : 'Continua a praticare la pronuncia.'\n    };\n  }\n};\n\n// Algoritmo di scoring QCER migliorato\nexport const QCERScoring = {\n  calculateLevel: allAnswers => {\n    const sectionScores = {\n      reading: QCERScoring.evaluateSection(allAnswers, 'reading'),\n      grammar: QCERScoring.evaluateSection(allAnswers, 'grammar'),\n      writing: QCERScoring.evaluateSection(allAnswers, 'writing'),\n      speaking: QCERScoring.evaluateSection(allAnswers, 'speaking')\n    };\n    const totalScore = sectionScores.reading * 0.25 + sectionScores.grammar * 0.35 + sectionScores.writing * 0.2 + sectionScores.speaking * 0.2;\n    if (totalScore >= 0.92) return 'C2';\n    if (totalScore >= 0.82) return 'C1';\n    if (totalScore >= 0.68) return 'B2';\n    if (totalScore >= 0.52) return 'B1';\n    if (totalScore >= 0.32) return 'A2';\n    return 'A1';\n  },\n  evaluateSection: (answers, sectionPrefix) => {\n    const sectionAnswers = Object.keys(answers).filter(key => key.includes(sectionPrefix)).map(key => answers[key]);\n    if (sectionAnswers.length === 0) return 0.5;\n    let totalScore = 0;\n    let count = 0;\n    sectionAnswers.forEach(answer => {\n      count++;\n      if (typeof answer === 'object' && answer.score !== undefined) {\n        totalScore += answer.score;\n      } else if (answer === 'correct') {\n        totalScore += 1.0;\n      } else if (['wrong1', 'wrong2', 'wrong3'].includes(answer)) {\n        totalScore += 0.0;\n      } else {\n        totalScore += 0.5;\n      }\n    });\n    return count > 0 ? totalScore / count : 0.5;\n  }\n};","map":{"version":3,"names":["mockQuestionBank","demographic","id","type","question","options","value","text","reading","level","subQuestions","isCorrect","grammar","writing","prompt","placeholder","minWords","minRows","speaking","maxDuration","AdvancedWritingEvaluator","evaluateWriting","targetLevel","console","log","substring","scores","orthography","analyzeOrthography","morphology","analyzeMorphology","syntax","analyzeSyntax","lexicon","analyzeLexicon","coherence","analyzeCoherence","weights","getWeightsByLevel","finalScore","Object","keys","reduce","total","aspect","forEach","toFixed","score","Math","min","max","breakdown","feedback","generateFeedback","suggestedLevel","suggestLevel","words","trim","split","errors","orthographicErrors","word","errorPattern","test","errorRate","length","morphologicalErrors","matches","match","errorDensity","issues","syntaxIssues","issuePattern","issueDensity","toLowerCase","filter","w","uniqueWords","Set","lexicalRichness","size","push","MockQuestionService","generateTestBank","Promise","resolve","setTimeout","generateSectionQuestions","sectionId","userProfile","isNAI","motherLanguage","previousAnswers","selectAdaptiveQuestions","questionPool","count","performanceScore","calculatePerformance","filteredQuestions","q","includes","shuffled","sort","random","slice","answers","answerKeys","correctCount","totalCount","key","answer","undefined","result","join","evaluateSpeaking","audioData","duration","hasGoodDuration","QCERScoring","calculateLevel","allAnswers","sectionScores","evaluateSection","totalScore","sectionPrefix","sectionAnswers","map"],"sources":["C:/Users/Utente/lingua-kai-platform - restructured/src/components/components/TestIngresso/MockQuestionService.js"],"sourcesContent":["// Mock Question Service per Test QCER\r\n// Questo simula il database e l'AI Service\r\n\r\nconst mockQuestionBank = {\r\n  demographic: [\r\n    {\r\n      id: 'years_italy',\r\n      type: 'multiple_choice',\r\n      question: 'Da quanti anni sei in Italia?',\r\n      options: [\r\n        { value: 'less1', text: 'Meno di 1 anno' },\r\n        { value: '1to2', text: '1-2 anni' },\r\n        { value: 'more2', text: 'Più di 2 anni' },\r\n        { value: 'born', text: 'Sono nato/a in Italia' }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  reading: [\r\n    // Livello A1-A2\r\n    {\r\n      id: 'reading_1',\r\n      type: 'reading_comprehension',\r\n      level: 'A1',\r\n      text: `Maria è una studentessa italiana. Ha 20 anni e studia medicina all'università di Roma. \r\n             Ogni mattina si alza alle 7:00 e fa colazione con caffè e cornetti. \r\n             Poi va all'università in autobus. Le piacciono molto gli studi e vuole diventare medico.`,\r\n      subQuestions: [\r\n        {\r\n          id: 'reading_1_q1',\r\n          question: 'Che cosa studia Maria?',\r\n          options: [\r\n            { value: 'correct', text: 'Medicina', isCorrect: true },\r\n            { value: 'wrong1', text: 'Letteratura', isCorrect: false },\r\n            { value: 'wrong2', text: 'Storia', isCorrect: false },\r\n            { value: 'wrong3', text: 'Matematica', isCorrect: false }\r\n          ]\r\n        },\r\n        {\r\n          id: 'reading_1_q2',\r\n          question: 'A che ora si alza Maria?',\r\n          options: [\r\n            { value: 'correct', text: 'Alle 7:00', isCorrect: true },\r\n            { value: 'wrong1', text: 'Alle 8:00', isCorrect: false },\r\n            { value: 'wrong2', text: 'Alle 6:00', isCorrect: false },\r\n            { value: 'wrong3', text: 'Alle 9:00', isCorrect: false }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n\r\n    // Livello B1-B2\r\n    {\r\n      id: 'reading_2',\r\n      type: 'reading_comprehension',\r\n      level: 'B1',\r\n      text: `L'immigrazione in Italia ha trasformato significativamente il panorama sociale del paese \r\n             negli ultimi decenni. Molte persone provenienti da diverse parti del mondo hanno scelto \r\n             l'Italia come nuova casa, portando con sé tradizioni culturali, linguistiche e culinarie \r\n             che hanno arricchito la società italiana. Tuttavia, questo processo non è stato privo di \r\n             sfide: l'integrazione richiede tempo, comprensione reciproca e politiche adeguate che \r\n             favoriscano l'inclusione sociale ed economica.`,\r\n      subQuestions: [\r\n        {\r\n          id: 'reading_2_q1',\r\n          question: 'Secondo il testo, l\\'immigrazione in Italia ha:',\r\n          options: [\r\n            { value: 'correct', text: 'Trasformato il panorama sociale', isCorrect: true },\r\n            { value: 'wrong1', text: 'Causato solo problemi', isCorrect: false },\r\n            { value: 'wrong2', text: 'Ridotto la diversità culturale', isCorrect: false },\r\n            { value: 'wrong3', text: 'Interessato solo le grandi città', isCorrect: false }\r\n          ]\r\n        },\r\n        {\r\n          id: 'reading_2_q2',\r\n          question: 'L\\'integrazione richiede:',\r\n          options: [\r\n            { value: 'correct', text: 'Tempo e comprensione reciproca', isCorrect: true },\r\n            { value: 'wrong1', text: 'Solo politiche governative', isCorrect: false },\r\n            { value: 'wrong2', text: 'L\\'abbandono delle tradizioni d\\'origine', isCorrect: false },\r\n            { value: 'wrong3', text: 'Cambiamenti solo da parte degli immigrati', isCorrect: false }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n\r\n    // Livello C1-C2\r\n    {\r\n      id: 'reading_3',\r\n      type: 'reading_comprehension',\r\n      level: 'C1',\r\n      text: `La questione del multilinguismo nelle società contemporanee solleva interrogativi complessi \r\n             che vanno ben oltre la mera pratica comunicativa. Nel contesto globalizzato odierno, \r\n             la capacità di padroneggiare più lingue non rappresenta soltanto un vantaggio competitivo \r\n             nel mercato del lavoro, ma costituisce un elemento fondamentale per la costruzione \r\n             dell'identità individuale e collettiva. La ricerca neurolinguistica ha dimostrato che \r\n             il cervello multilingue sviluppa capacità cognitive superiori, inclusa una maggiore \r\n             flessibilità mentale e una migliore capacità di problem-solving. Tuttavia, permane \r\n             il dibattito sui potenziali rischi di erosione delle lingue minoritarie in favore \r\n             di quelle dominanti a livello internazionale.`,\r\n      subQuestions: [\r\n        {\r\n          id: 'reading_3_q1',\r\n          question: 'Secondo il testo, il multilinguismo:',\r\n          options: [\r\n            { value: 'correct', text: 'Contribuisce alla costruzione dell\\'identità', isCorrect: true },\r\n            { value: 'wrong1', text: 'È utile solo per il lavoro', isCorrect: false },\r\n            { value: 'wrong2', text: 'Causa confusione cognitiva', isCorrect: false },\r\n            { value: 'wrong3', text: 'Non ha effetti sul cervello', isCorrect: false }\r\n          ]\r\n        },\r\n        {\r\n          id: 'reading_3_q2',\r\n          question: 'Il dibattito sulle lingue minoritarie riguarda:',\r\n          options: [\r\n            { value: 'correct', text: 'Il rischio di erosione a favore di lingue dominanti', isCorrect: true },\r\n            { value: 'wrong1', text: 'La loro maggiore difficoltà di apprendimento', isCorrect: false },\r\n            { value: 'wrong2', text: 'L\\'impossibilità di insegnarle', isCorrect: false },\r\n            { value: 'wrong3', text: 'La loro inutilità nel mondo moderno', isCorrect: false }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  grammar: [\r\n    // Livello A1\r\n    {\r\n      id: 'grammar_1',\r\n      type: 'grammar',\r\n      level: 'A1',\r\n      question: 'Completa la frase: \"Io _____ italiano.\"',\r\n      options: [\r\n        { value: 'correct', text: 'sono', isCorrect: true },\r\n        { value: 'wrong1', text: 'sei', isCorrect: false },\r\n        { value: 'wrong2', text: 'è', isCorrect: false },\r\n        { value: 'wrong3', text: 'siamo', isCorrect: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 'grammar_2',\r\n      type: 'grammar',\r\n      level: 'A1',\r\n      question: 'Scegli l\\'articolo corretto: \"_____ casa è bella.\"',\r\n      options: [\r\n        { value: 'correct', text: 'La', isCorrect: true },\r\n        { value: 'wrong1', text: 'Il', isCorrect: false },\r\n        { value: 'wrong2', text: 'Lo', isCorrect: false },\r\n        { value: 'wrong3', text: 'Le', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    // Livello A2\r\n    {\r\n      id: 'grammar_3',\r\n      type: 'grammar',\r\n      level: 'A2',\r\n      question: 'Ieri io _____ al cinema.',\r\n      options: [\r\n        { value: 'correct', text: 'sono andato/a', isCorrect: true },\r\n        { value: 'wrong1', text: 'vado', isCorrect: false },\r\n        { value: 'wrong2', text: 'andrò', isCorrect: false },\r\n        { value: 'wrong3', text: 'andare', isCorrect: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 'grammar_4',\r\n      type: 'grammar',\r\n      level: 'A2',\r\n      question: 'Se _____ bel tempo, andiamo al mare.',\r\n      options: [\r\n        { value: 'correct', text: 'fa', isCorrect: true },\r\n        { value: 'wrong1', text: 'farà', isCorrect: false },\r\n        { value: 'wrong2', text: 'faceva', isCorrect: false },\r\n        { value: 'wrong3', text: 'fare', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    // Livello B1\r\n    {\r\n      id: 'grammar_5',\r\n      type: 'grammar',\r\n      level: 'B1',\r\n      question: 'Benché _____ stanco, continuerò a lavorare.',\r\n      options: [\r\n        { value: 'correct', text: 'sia', isCorrect: true },\r\n        { value: 'wrong1', text: 'sono', isCorrect: false },\r\n        { value: 'wrong2', text: 'ero', isCorrect: false },\r\n        { value: 'wrong3', text: 'sarò', isCorrect: false }\r\n      ]\r\n    },\r\n    {\r\n      id: 'grammar_6',\r\n      type: 'grammar',\r\n      level: 'B1',\r\n      question: 'Il libro _____ ho letto è molto interessante.',\r\n      options: [\r\n        { value: 'correct', text: 'che', isCorrect: true },\r\n        { value: 'wrong1', text: 'cui', isCorrect: false },\r\n        { value: 'wrong2', text: 'quale', isCorrect: false },\r\n        { value: 'wrong3', text: 'dove', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    // Livello B2\r\n    {\r\n      id: 'grammar_7',\r\n      type: 'grammar',\r\n      level: 'B2',\r\n      question: 'Non appena _____ a casa, ti telefonerò.',\r\n      options: [\r\n        { value: 'correct', text: 'sarò arrivato', isCorrect: true },\r\n        { value: 'wrong1', text: 'arrivo', isCorrect: false },\r\n        { value: 'wrong2', text: 'arrivavo', isCorrect: false },\r\n        { value: 'wrong3', text: 'sono arrivato', isCorrect: false }\r\n      ]\r\n    },\r\n\r\n    // Livello C1\r\n    {\r\n      id: 'grammar_8',\r\n      type: 'grammar',\r\n      level: 'C1',\r\n      question: 'Qualora _____ problemi, non esitate a contattarmi.',\r\n      options: [\r\n        { value: 'correct', text: 'doveste avere', isCorrect: true },\r\n        { value: 'wrong1', text: 'avete', isCorrect: false },\r\n        { value: 'wrong2', text: 'avrete', isCorrect: false },\r\n        { value: 'wrong3', text: 'avreste', isCorrect: false }\r\n      ]\r\n    }\r\n  ],\r\n\r\n  writing: [\r\n    {\r\n      id: 'writing_1',\r\n      type: 'writing',\r\n      level: 'A1',\r\n      prompt: 'Presentati brevemente: scrivi il tuo nome, età, da dove vieni e cosa ti piace fare.',\r\n      placeholder: 'Ciao, io sono...',\r\n      minWords: 30,\r\n      minRows: 3\r\n    },\r\n    {\r\n      id: 'writing_2',\r\n      type: 'writing',\r\n      level: 'B1',\r\n      prompt: 'Descrivi una giornata tipica nella tua vita, dalle 7:00 del mattino alle 22:00 di sera.',\r\n      placeholder: 'La mia giornata inizia quando...',\r\n      minWords: 80,\r\n      minRows: 5\r\n    },\r\n    {\r\n      id: 'writing_3',\r\n      type: 'writing',\r\n      level: 'C1',\r\n      prompt: 'Esprimi la tua opinione sull\\'importanza dell\\'apprendimento delle lingue straniere nella società moderna, presentando argomenti a favore e possibili obiezioni.',\r\n      placeholder: 'L\\'apprendimento delle lingue straniere...',\r\n      minWords: 150,\r\n      minRows: 8\r\n    }\r\n  ],\r\n\r\n  speaking: [\r\n    {\r\n      id: 'speaking_1',\r\n      type: 'speaking',\r\n      level: 'A1',\r\n      prompt: 'Presentati: di\\' il tuo nome, la tua età e di dove sei.',\r\n      maxDuration: 30\r\n    },\r\n    {\r\n      id: 'speaking_2',\r\n      type: 'speaking',\r\n      level: 'B1',\r\n      prompt: 'Descrivi la tua città natale: com\\'è, che cosa ti piace di più e cosa vorresti cambiare.',\r\n      maxDuration: 60\r\n    },\r\n    {\r\n      id: 'speaking_3',\r\n      type: 'speaking',\r\n      level: 'C1',\r\n      prompt: 'Spiega quale pensi sia il ruolo delle nuove tecnologie nell\\'educazione e come potrebbero cambiare l\\'apprendimento in futuro.',\r\n      maxDuration: 90\r\n    }\r\n  ]\r\n};\r\n\r\n// Sistema Avanzato di Valutazione Scrittura\r\nconst AdvancedWritingEvaluator = {\r\n  \r\n  // Valutazione completa del testo\r\n  evaluateWriting: async (text, targetLevel = 'B1') => {\r\n    console.log('🔍 Analisi avanzata testo:', text.substring(0, 100) + '...');\r\n    \r\n    const scores = {\r\n      orthography: AdvancedWritingEvaluator.analyzeOrthography(text),\r\n      morphology: AdvancedWritingEvaluator.analyzeMorphology(text),\r\n      syntax: AdvancedWritingEvaluator.analyzeSyntax(text),\r\n      lexicon: AdvancedWritingEvaluator.analyzeLexicon(text),\r\n      coherence: AdvancedWritingEvaluator.analyzeCoherence(text)\r\n    };\r\n\r\n    // Pesi per livello QCER\r\n    const weights = AdvancedWritingEvaluator.getWeightsByLevel(targetLevel);\r\n    \r\n    // Calcolo score finale\r\n    const finalScore = Object.keys(scores).reduce((total, aspect) => {\r\n      return total + (scores[aspect] * weights[aspect]);\r\n    }, 0);\r\n\r\n    console.log('📊 Breakdown valutazione scrittura:');\r\n    Object.keys(scores).forEach(aspect => {\r\n      console.log(`  ${aspect}: ${(scores[aspect] * 100).toFixed(1)}%`);\r\n    });\r\n    console.log(`🎯 Score finale: ${(finalScore * 100).toFixed(1)}%`);\r\n\r\n    return {\r\n      score: Math.min(Math.max(finalScore, 0), 1),\r\n      breakdown: scores,\r\n      feedback: AdvancedWritingEvaluator.generateFeedback(scores, targetLevel),\r\n      suggestedLevel: AdvancedWritingEvaluator.suggestLevel(finalScore)\r\n    };\r\n  },\r\n\r\n  // 1. ANALISI ORTOGRAFICA\r\n  analyzeOrthography: (text) => {\r\n    const words = text.trim().split(/\\s+/);\r\n    let errors = 0;\r\n\r\n    const orthographicErrors = [\r\n      /\\bperche\\b/gi, /\\bpuo\\b/gi, /\\bcioe\\b/gi, /\\bpiu\\b/gi, /\\bgia\\b/gi, /\\bperö\\b/gi, /\\w*[kxwyjq]\\w*/gi\r\n    ];\r\n\r\n    words.forEach(word => {\r\n      orthographicErrors.forEach(errorPattern => {\r\n        if (errorPattern.test(word)) errors++;\r\n      });\r\n    });\r\n\r\n    const errorRate = errors / Math.max(words.length, 1);\r\n    return Math.max(0, 1 - (errorRate * 3));\r\n  },\r\n\r\n  // 2. ANALISI MORFOLOGICA\r\n  analyzeMorphology: (text) => {\r\n    let score = 1.0;\r\n    let errors = 0;\r\n\r\n    const morphologicalErrors = [\r\n      /\\bil\\s+(?:casa|scuola|famiglia|vita)\\b/gi,\r\n      /\\bla\\s+(?:uomo|bambino|lavoro)\\b/gi,\r\n      /\\bun\\s+(?:amica|idea|università)\\b/gi,\r\n      /\\bio\\s+(?:sei|è|siamo|sono)\\b/gi,\r\n      /\\btu\\s+(?:sono|è|siamo)\\b/gi,\r\n      /\\blui\\s+(?:sono|sei|siamo)\\b/gi,\r\n      /\\bho\\s+(?:andata|partita|venuta)\\b/gi,\r\n      /\\bio\\s+.*(?:are|ere|ire)\\b/gi,\r\n      /\\bper\\s+(?:studia|lavora|mangia)\\b/gi,\r\n      /\\bmio\\s+(?:sorella|famiglia|amica)\\b/gi,\r\n      /\\btuo\\s+(?:sorella|famiglia|amica)\\b/gi,\r\n      /\\bsuo\\s+(?:sorella|famiglia|amica)\\b/gi\r\n    ];\r\n\r\n    morphologicalErrors.forEach(errorPattern => {\r\n      const matches = text.match(errorPattern);\r\n      if (matches) {\r\n        errors += matches.length;\r\n        console.log(`🔴 Errore morfologico rilevato: ${matches[0]}`);\r\n      }\r\n    });\r\n\r\n    const words = text.trim().split(/\\s+/).length;\r\n    const errorDensity = errors / Math.max(words, 1);\r\n    \r\n    score = Math.max(0, 1 - (errorDensity * 4));\r\n    console.log(`📝 Morfologia: ${errors} errori su ${words} parole = ${(score * 100).toFixed(1)}%`);\r\n    \r\n    return score;\r\n  },\r\n\r\n  // 3. ANALISI SINTATTICA\r\n  analyzeSyntax: (text) => {\r\n    let score = 1.0;\r\n    let issues = 0;\r\n\r\n    const syntaxIssues = [\r\n      /\\bno\\s+(?:parlare|sapere|capire)\\b/gi,\r\n      /\\bio\\s+no\\s+/gi,\r\n      /\\bno\\s+ho\\b/gi,\r\n      /\\bho\\s+(?:andato|venuto|partito)\\b/gi,\r\n      /\\bsono\\s+(?:mangiato|studiato|lavorato)\\b/gi,\r\n      /\\bvino\\s+(?:in|a)\\s+Italia/gi\r\n    ];\r\n\r\n    syntaxIssues.forEach(issuePattern => {\r\n      const matches = text.match(issuePattern);\r\n      if (matches) {\r\n        issues += matches.length;\r\n        console.log(`🔴 Problema sintattico: ${matches[0]}`);\r\n      }\r\n    });\r\n\r\n    const words = text.trim().split(/\\s+/).length;\r\n    const issueDensity = issues / Math.max(words, 1);\r\n    \r\n    score = Math.max(0, 1 - (issueDensity * 3));\r\n    console.log(`🔗 Sintassi: ${issues} problemi = ${(score * 100).toFixed(1)}%`);\r\n    \r\n    return score;\r\n  },\r\n\r\n  // 4. ANALISI LESSICALE\r\n  analyzeLexicon: (text) => {\r\n    const words = text.toLowerCase().trim().split(/\\s+/).filter(w => w.length > 2);\r\n    const uniqueWords = new Set(words);\r\n    \r\n    const lexicalRichness = uniqueWords.size / Math.max(words.length, 1);\r\n    const score = Math.max(0, lexicalRichness);\r\n    console.log(`📚 Lessico: ricchezza ${(lexicalRichness * 100).toFixed(1)}% = ${(score * 100).toFixed(1)}%`);\r\n    \r\n    return score;\r\n  },\r\n\r\n  // 5. ANALISI COERENZA\r\n  analyzeCoherence: (text) => {\r\n    let score = 0.8;\r\n    console.log(`🎯 Coerenza: ${(score * 100).toFixed(1)}%`);\r\n    return score;\r\n  },\r\n\r\n  // Pesi per livello QCER\r\n  getWeightsByLevel: (level) => {\r\n    const weights = {\r\n      'A1': { orthography: 0.25, morphology: 0.35, syntax: 0.25, lexicon: 0.10, coherence: 0.05 },\r\n      'A2': { orthography: 0.20, morphology: 0.30, syntax: 0.30, lexicon: 0.15, coherence: 0.05 },\r\n      'B1': { orthography: 0.15, morphology: 0.25, syntax: 0.30, lexicon: 0.20, coherence: 0.10 },\r\n      'B2': { orthography: 0.10, morphology: 0.20, syntax: 0.30, lexicon: 0.25, coherence: 0.15 },\r\n      'C1': { orthography: 0.05, morphology: 0.15, syntax: 0.25, lexicon: 0.30, coherence: 0.25 },\r\n      'C2': { orthography: 0.05, morphology: 0.10, syntax: 0.20, lexicon: 0.30, coherence: 0.35 }\r\n    };\r\n    \r\n    return weights[level] || weights['B1'];\r\n  },\r\n\r\n  // Suggerisce livello basato su score\r\n  suggestLevel: (score) => {\r\n    if (score >= 0.92) return 'C2';\r\n    if (score >= 0.82) return 'C1';\r\n    if (score >= 0.68) return 'B2';\r\n    if (score >= 0.52) return 'B1';\r\n    if (score >= 0.32) return 'A2';\r\n    return 'A1';\r\n  },\r\n\r\n  // Genera feedback personalizzato\r\n  generateFeedback: (scores, targetLevel) => {\r\n    const feedback = [];\r\n    \r\n    if (scores.orthography < 0.7) {\r\n      feedback.push(\"⚠️ Concentrati sull'ortografia\");\r\n    }\r\n    \r\n    if (scores.morphology < 0.6) {\r\n      feedback.push(\"📝 Lavora sulla morfologia\");\r\n    }\r\n    \r\n    if (scores.syntax < 0.6) {\r\n      feedback.push(\"🔗 Migliora la sintassi\");\r\n    }\r\n    \r\n    if (feedback.length === 0) {\r\n      feedback.push(\"🎉 Ottimo lavoro!\");\r\n    }\r\n    \r\n    return feedback;\r\n  }\r\n};\r\n\r\n// Simulazione AI Service\r\nexport const MockQuestionService = {\r\n  // Genera banco domande iniziale\r\n  generateTestBank: async () => {\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    return mockQuestionBank;\r\n  },\r\n\r\n  // Genera domande per sezione specifica\r\n  generateSectionQuestions: async (sectionId, userProfile) => {\r\n    await new Promise(resolve => setTimeout(resolve, 800));\r\n    \r\n    const { isNAI, motherLanguage, previousAnswers } = userProfile;\r\n    \r\n    switch(sectionId) {\r\n      case 'reading':\r\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.reading, previousAnswers, 3);\r\n      case 'grammar':\r\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.grammar, previousAnswers, 4);\r\n      case 'writing':\r\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.writing, previousAnswers, 2);\r\n      case 'speaking':\r\n        return MockQuestionService.selectAdaptiveQuestions(mockQuestionBank.speaking, previousAnswers, 2);\r\n      default:\r\n        return [];\r\n    }\r\n  },\r\n\r\n  // Selezione adattiva domande\r\n  selectAdaptiveQuestions: (questionPool, previousAnswers, count) => {\r\n    const performanceScore = MockQuestionService.calculatePerformance(previousAnswers);\r\n    \r\n    let targetLevel;\r\n    if (performanceScore > 0.8) targetLevel = ['B2', 'C1', 'C2'];\r\n    else if (performanceScore > 0.6) targetLevel = ['B1', 'B2'];\r\n    else if (performanceScore > 0.4) targetLevel = ['A2', 'B1'];\r\n    else targetLevel = ['A1', 'A2'];\r\n\r\n    const filteredQuestions = questionPool.filter(q => \r\n      !q.level || targetLevel.includes(q.level)\r\n    );\r\n\r\n    const shuffled = filteredQuestions.sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count);\r\n  },\r\n\r\n  // Calcola performance dalle risposte precedenti\r\n  calculatePerformance: (answers) => {\r\n    const answerKeys = Object.keys(answers);\r\n    if (answerKeys.length === 0) return 0.5;\r\n\r\n    let correctCount = 0;\r\n    let totalCount = 0;\r\n\r\n    answerKeys.forEach(key => {\r\n      const answer = answers[key];\r\n      if (typeof answer === 'object' && answer.isCorrect !== undefined) {\r\n        totalCount++;\r\n        if (answer.isCorrect) correctCount++;\r\n      } else if (answer === 'correct') {\r\n        totalCount++;\r\n        correctCount++;\r\n      } else if (['wrong1', 'wrong2', 'wrong3'].includes(answer)) {\r\n        totalCount++;\r\n      }\r\n    });\r\n\r\n    return totalCount > 0 ? correctCount / totalCount : 0.5;\r\n  },\r\n\r\n  // Valuta risposta scritta con sistema avanzato\r\n  evaluateWriting: async (text, level) => {\r\n    console.log('🔍 === ANALISI AVANZATA SCRITTURA ===');\r\n    \r\n    const result = await AdvancedWritingEvaluator.evaluateWriting(text, level);\r\n    \r\n    console.log('📊 Risultato finale scrittura:');\r\n    console.log('  Score:', (result.score * 100).toFixed(1) + '%');\r\n    console.log('  Livello suggerito:', result.suggestedLevel);\r\n    console.log('=====================================');\r\n    \r\n    return {\r\n      score: result.score,\r\n      feedback: result.feedback.join(' | '),\r\n      suggestedLevel: result.suggestedLevel,\r\n      breakdown: result.breakdown\r\n    };\r\n  },\r\n\r\n  // Valuta registrazione audio (simulata)\r\n  evaluateSpeaking: async (audioData, level) => {\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    const duration = audioData.duration || 5000;\r\n    const hasGoodDuration = duration > 10000 && duration < 120000;\r\n    \r\n    let score = 0.6;\r\n    if (hasGoodDuration) score += 0.3;\r\n    \r\n    return {\r\n      score: Math.min(score, 1.0),\r\n      feedback: score > 0.8 ? 'Eccellente pronuncia e fluidità!' :\r\n                score > 0.6 ? 'Buona pronuncia, continua così!' :\r\n                'Continua a praticare la pronuncia.'\r\n    };\r\n  }\r\n};\r\n\r\n// Algoritmo di scoring QCER migliorato\r\nexport const QCERScoring = {\r\n  calculateLevel: (allAnswers) => {\r\n    const sectionScores = {\r\n      reading: QCERScoring.evaluateSection(allAnswers, 'reading'),\r\n      grammar: QCERScoring.evaluateSection(allAnswers, 'grammar'),\r\n      writing: QCERScoring.evaluateSection(allAnswers, 'writing'),\r\n      speaking: QCERScoring.evaluateSection(allAnswers, 'speaking')\r\n    };\r\n\r\n    const totalScore = (\r\n      sectionScores.reading * 0.25 +\r\n      sectionScores.grammar * 0.35 +\r\n      sectionScores.writing * 0.2 +\r\n      sectionScores.speaking * 0.2\r\n    );\r\n\r\n    if (totalScore >= 0.92) return 'C2';\r\n    if (totalScore >= 0.82) return 'C1';\r\n    if (totalScore >= 0.68) return 'B2';\r\n    if (totalScore >= 0.52) return 'B1';\r\n    if (totalScore >= 0.32) return 'A2';\r\n    return 'A1';\r\n  },\r\n\r\n  evaluateSection: (answers, sectionPrefix) => {\r\n    const sectionAnswers = Object.keys(answers)\r\n      .filter(key => key.includes(sectionPrefix))\r\n      .map(key => answers[key]);\r\n\r\n    if (sectionAnswers.length === 0) return 0.5;\r\n\r\n    let totalScore = 0;\r\n    let count = 0;\r\n\r\n    sectionAnswers.forEach(answer => {\r\n      count++;\r\n      if (typeof answer === 'object' && answer.score !== undefined) {\r\n        totalScore += answer.score;\r\n      } else if (answer === 'correct') {\r\n        totalScore += 1.0;\r\n      } else if (['wrong1', 'wrong2', 'wrong3'].includes(answer)) {\r\n        totalScore += 0.0;\r\n      } else {\r\n        totalScore += 0.5;\r\n      }\r\n    });\r\n\r\n    return count > 0 ? totalScore / count : 0.5;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}